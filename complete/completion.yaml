# Author: Nuno Aguiar
help:
  text   : Generates a shell completion script for OpenAF tools.
  expects:
  - name     : file
    desc     : The YAML file with the completion information
    example  : .completion.yaml
    mandatory: "true"
  - name     : tool
    desc     : The OpenAF tool for which the completion script will be generated
    example  : oaf
    mandatory: "true"

ojob:
  catch       : printErrnl("[" + job.name + "] "); if (isDef(exception.javaException)) exception.javaException.printStackTrace(); else printErr(exception)
  logToConsole: false

todo:
- Generate completion shell script

jobs:
- name : Generate completion shell script
  check:
    in:
      file: isString
  exec : |
    ow.template.addHelper("$p", p => p)
  to   :
  - (pass    ):
      aYAMLFile: "{{file}}"
  - (fn      ): io.readFileYAML
    ((key   )): data
  - (template): |-
      #!/bin/sh

      # Flags
      {{#each complete}}
      F_{{{$path name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}=1
      {{#each opts}}
      F_{{{$path ../name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}_{{{$path name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}=0
      {{#each opts}}
      F_{{{$path ../../name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}_{{{$path ../name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}_{{{$path name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}=1
      {{/each}}
      {{/each}}
      {{/each}}

      # Iterate over the arguments
      if [ $# -gt 0 ]; then
        for arg in "$@"; do
          if [ "$arg" = "${!#}" ]; then break; fi
          {{#each complete}}
          {{#if opts.length}}
          # {{{name}}} options
          {{else}}
          # {{{name}}} single option
          if [ "$arg" = "{{{name}}}" ]; then F_{{{$path name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}=0; fi
          {{/if}}
          {{#each opts}}
          if [ "$arg" = "{{{name}}}" ]; then F_{{{$path ../name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}_{{{$path name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}=1; F_{{{$path ../name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}=0; fi
          {{#each opts}}
          if [ "${arg#{{{name}}}{{$p '}'}}" != "$arg" ]; then F_{{{$path ../../name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}_{{{$path ../name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}_{{{$path name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}=0; fi
          {{/each}}
          {{/each}}
          {{/each}}
        done
      fi

      {{#each complete}}
      # Print completion for {{{name}}}
      if [ $F_{{{$path name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}} -eq 1 ]; then
        echo "{{{name}}}	{{{desc}}}"
        
        {{#each opts}}
        echo "{{{name}}}	{{{desc}}}"
        {{/each}}
      fi
      {{#each opts}}
      {{#if opts.length}}
      if [ $F_{{{$path ../name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}_{{{$path name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}} -eq 1 ]; then
        {{#each opts}}
        if [ $F_{{{$path ../../name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}_{{{$path ../name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}}_{{{$path name 'replace(@,\'[^a-zA-Z0-9]\',\'g\',\'_\')'}}} -eq 1 ]; then
          echo "{{{name}}}	{{{desc}}}"
        fi
        {{/each}}
      fi
      {{/if}}
      {{/each}}
      {{/each}}

      # end
      echo :4
    ((key   )): data
    ((out   )): out
  - (if      ): "'{{keyout}}' != 'true'"
    ((then  )):
    - (output  ): out
      ((path  )): output
