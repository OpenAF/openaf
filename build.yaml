ojob:
   async: true
   
jobs:
   # Build OpenAF
   - name  : Build OpenAFOS
     exec  : >
        global.path = (isDef(args.path)) ? args.path : ".";
        if (isUnDef(args.openafJSON)) args.openafJSON = global.path + "/openaf.json";
        if (isUnDef(args.openafDIST)) args.openafDIST = "nightly";
        __expr = "withDir=" + global.path + ";withJSON=" + args.openafJSON + ";withDist=" + args.openafDIST;
        if (isDef(args.openafVERSION)) __expr += ";withVersion=" + args.openafVERSION;
        af.load(global.path + "/buildos.js");

   # Repack the recently build openaf
   - name  : Repack OpenAFOS
     deps  :
     - Build OpenAFOS
     exec  : >
        log("Repacking...");
        $sh(ow.format.getJavaHome() + "/bin/java -jar " + global.path + "/openaf.jar --repack")
        .exec()

   # Copy OpenAF to the right place for use
   - name  : Copy OpenAF
     deps  :
     - Prepare ojob saved 
     - Prepare ojob doc
     - Build OpenAFOS
     - Repack OpenAFOS
     exec  : >
        log("Copying...");
        //sh("cp " + global.path + "/openaf.jar " + global.path + "/dist/openaf.jar", "", undefined, true);
        io.mkdir(global.path + "/dist");
        io.cp(global.path + "/openaf.jar", global.path + "/dist/openaf.jar");

   # -----------------------
   - name : Prepare ojob doc
     deps :
     - Repack OpenAFOS
     exec : |
       sleep(1000, true)

       plugin("ZIP")
       var zip = new ZIP()
       var is = io.readFileStream(global.path + "/docs/ojob-all.yaml")
       zip.streamPutFileStream(global.path + "/openaf.jar", "docs/.ojob-all.yaml", is)
       is.close()

       is = io.readFileStream(global.path + "/docs/ojob-all.yaml")
       zip.streamPutFileStream(global.path + "/openaf.jar.orig", "docs/.ojob-all.yaml", is)
       is.close()
 
   # -----------------------------
   - name : Prepare shell complete
     deps : 
     - Repack OpenAFOS
     - Prepare ojob doc
     exec : |
       sleep(1000, true)

       plugin("ZIP")
       var zip = new ZIP()

       var fnCp = (from, to, justOrig) => {
          if (!justOrig) {
            log("Copying " + from + " to " + to + "...")
            try {
              var is = io.readFileStream(from)
              zip.streamPutFileStream(global.path + "/openaf.jar", to, is)
              is.close()
              zip.close()
            } catch(e) {
              logErr("Error copying " + from + " to (openaf.jar)" + to + ": " + e)
            }
          }
          try {
            var is = io.readFileStream(from)
            zip.streamPutFileStream(global.path + "/openaf.jar.orig", to, is)
            is.close()
            zip.close()
          } catch(e) {
            logErr("Error copying " + from + " to (openaf.jar.orig)" + to + ": " + e)
          }
       }

       log("Generating completion scripts...")
       pForEach(["oaf", "oafp", "opack"], r => {
          $sh(getOpenAFPath() + "/ojob " + global.path + "/complete/completion.yaml tool=" + r + " file=" + global.path + "/complete/completion_" + r + ".yaml > " + global.path + "/complete/completion_" + r + ".sh").exec()
       })

       fnCp(global.path + "/complete/completion.yaml", "complete/completion.yaml")
       fnCp(global.path + "/complete/completion_bash.hbs", "complete/completion_bash.hbs")
       fnCp(global.path + "/complete/completion_zsh.hbs", "complete/completion_zsh.hbs")

       fnCp(global.path + "/complete/completion_oaf.sh", "complete/completion_oaf.sh")
       fnCp(global.path + "/complete/completion_oafp.sh", "complete/completion_oafp.sh")
       fnCp(global.path + "/complete/completion_opack.sh", "complete/completion_opack.sh")

       fnCp(global.path + "/complete/completion_oaf.yaml", "complete/completion_oaf.yaml", true)
       fnCp(global.path + "/complete/completion_oafp.yaml", "complete/completion_oafp.yaml", true)
       fnCp(global.path + "/complete/completion_opack.yaml", "complete/completion_opack.yaml", true)

   # -------------------------
   - name : Prepare ojob saved
     deps :
     - Repack OpenAFOS
     exec : |
       sleep(1000, true)

       $sh([ow.format.getJavaHome() + "/bin/java", "-jar", global.path + "/openaf.jar", "-c", "ow.loadOJob();__flags.OJOB_CHECK_JOB_CHANGES=false;oJobRunFile('" + global.path + "/ojob.json');io.writeFileJSON('" + global.path + "/ojob.saved.json',$ch('oJob::jobs').getAll(), '')"])
       .exec()
       
       plugin("ZIP")
       var zip = new ZIP()
       var is = io.readFileStream(global.path + "/ojob.saved.json")
       zip.streamPutFileStream(global.path + "/openaf.jar", "ojob.saved.json", is)
       is.close()

       is = io.readFileStream(global.path + "/ojob.saved.json")
       zip.streamPutFileStream(global.path + "/openaf.jar.orig", "ojob.saved.json", is)
       is.close()

todo:
- Prepare ojob saved
- Prepare ojob doc
- Prepare shell complete
- Build OpenAFOS
- Repack OpenAFOS
- Copy OpenAF
