var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20241206, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64(""))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("")))};
var _params=processExpr(" ");
const oafp=b=>{if(!isUnDef(b)&&!isDef(b.____ojob)){isDef($sec().procMap)&&(b=$sec().procMap(b));Object.keys(b).forEach(a=>{if(0<b[a].length){var c=a.toLowerCase();a!=c&&isUnDef(b[c])&&(b[c]=b[a],delete b[a])}});var N=a=>{for(var c=Object.keys(F),d=0;d<c.length;d++){var g=c[d];isDef(b[g])&&(a=F[g](a))}return a},J=(a,c)=>{b.__origr=a;c.__ifrom&&(a=$from(a).query(af.fromNLinq(c.__ifrom.trim())),delete c.__ifrom);if(c.__isql){var d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";
break;case "advanced":d="h2";break;default:d=__}if(isArray(a)&&0<a.length)if(isString(b.isqlfiltertables)){var g=$sql();d=v(b.isqlfiltertables);isArray(d)&&(d.forEach(e=>{isUnDef(e.table)&&k(-1,"One 'table' not defined in isqlfiltertables");e.path=_$(e.path,"isqlfiltertables table "+e.table+" path").isString().default("@");var f=$path(a,e.path);isArray(f)&&(g=g.table(e.table,f))}),a=g.closeQuery(c.__isql.trim()))}else a=$sql(a,c.__isql.trim(),d);delete c.__isql}c.__path&&(a=$path(a,c.__path.trim()),
delete c.__path);if(isString(a))return N(a);a=N(a);c.__from&&(a=$from(a).query(af.fromNLinq(c.__from.trim())),delete c.__from);if(c.__sql){d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(a)&&0<a.length&&(isString(b.sqlfiltertables)?(g=$sql(),d=v(b.sqlfiltertables),isArray(d)&&(d.forEach(e=>{isUnDef(e.table)&&k(-1,"One 'table' not defined in sqlfiltertables");e.path=_$(e.path,"sqlfiltertables table "+e.table+
" path").isString().default("@");var f=$path(a,e.path);isArray(f)&&(g=g.table(e.table,f))}),a=g.closeQuery(c.__sql.trim()))):a=$sql(a,c.__sql.trim(),d));delete c.__sql}c.__opath&&(a=$path(a,c.__opath.trim()),delete c.__opath);return a},m=(a,c,d)=>{c=clone(c);toBoolean(b.color)?__conConsole=!0:isDef(b.color)&&(__conAnsi=!1);a=isString(a)?a.trim().startsWith("{")&&a.trim().endsWith("}")?J(jsonParse(a,__,__,!0),c):J(a,c):d?J([a],c)[0]:J(a,c);isDef(b.outputkey)&&(a=$$({}).set(b.outputkey,a));isDef(b.outkey)&&
(a=$$({}).set(b.outkey,a));Q();isUnDef(c.__format)&&(c.__format=getEnvsDef("OAFP_OUTPUT",c.__format,"tree"));H.has(c.__format)?H.get(c.__format)(a,c):u(a,c,__)},C=(a,c)=>{var d=af.fromString2Bytes(""),g=af.newOutputStream();$sh(a).cb((e,f,h)=>{ioStreamCopy(g,e);e=g.toByteArray();0<e.length&&(d=e)}).get();return c?af.fromBytes2String(d):d},v=a=>{if(!isString(a)||""==a||isNull(a))return"";a=a.trim();return isDef(af.fromJSSLON)?af.fromJSSLON(a):a.startsWith("{")?jsonParse(a,__,__,!0):af.fromSLON(a)},
K=(a,c,d,g)=>{d=_$(d).isString().default("_oafp_fn_");c=splitBySepWithEnc(c," ",[['"','"'],["'","'"]]);let e=[];$ch("__oaf::chart").create();if(1<c.length){for(let f=0;f<c.length;f++)if(0==f)e.push(c[f]);else{let h=splitBySepWithEnc(c[f],":",[['"','"'],["'","'"]]).map((l,n)=>{if(0==n){if(l.startsWith("-"))return l;global[d+f]=()=>{if(isString(g)){var x=$ch("__oaf::chart").get({name:g});x=isUnDef(x)?[]:x.data;var t=$path(a,l);if(isArray(t))return t.forEach((p,A)=>{isArray(x[A])?x[A].push(p):x[A]=[p]}),
t=x.pop(),$ch("__oaf::chart").set({name:g},{name:g,data:x}),t[0]}else return $path(a,l)};return d+f}return l}).join(":");e.push(h)}return e.join(" ")}return""},q=a=>{"undefined"!==typeof a&&("undefined"===typeof b.outfile?(toBoolean(b.loopcls)&&cls(),print(a)):("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"!==typeof global.__oafp_streams[b.outfile]&&ioStreamWrite(global.__oafp_streams[b.outfile].s,a+(toBoolean(b.outfileappend)?"\n":""))))},u=(a,c,d)=>{"undefined"!==
typeof a&&(a=$o(a,c,d,!0),isDef(a)&&q(a))},r=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||toBoolean(b.chartcls)||printErrnl(_$(a).default("(processing data...)"))},Q=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||toBoolean(b.chartcls)||printErrnl("\r"+" ".repeat(_$(a).default("(processing data...)").length)+"\r")},k=(a,c)=>{isUnDef(c)&&(c="exit: "+a);if(isUnDef(ow.oJob)&&!toBoolean(b.noexit))0!=a&&printErr(c),exit(a);else throw c;},z=()=>{__initializeCon();b.help=_$(b.help,"help").isString().default("");
switch(b.help.toLowerCase()){case "filters":var a="docs/FILTERS.md";break;case "template":a="docs/TEMPLATE.md";break;case "examples":a="docs/EXAMPLES.md";break;case "readme":case "usage":a="docs/USAGE.md";break;default:a=b.help.toLowerCase(),a=isDef(D[a])?"docs/"+a+".md":"docs/USAGE.md"}var c=(getOPackPath("oafproc")||".")+"/"+a;let d="";if("docs/USAGE.md"==a&&0<Object.keys(D).length){d="\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let g in D)d+="| "+g+" | help="+
g+" |\n"}isDef(c)&&io.fileExists(c)?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c)+d)):q(isDef(b.out)&&"raw"==b.out?io.readFileString(c)+d:ow.format.withMD(io.readFileString(c)+d))):isDef(global._oafphelp)&&isDef(global._oafphelp[a])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[a]+d)):
q(isDef(b.out)&&"raw"==b.out?global._oafphelp[a]+d:ow.format.withMD(global._oafphelp[a]+d))):isString(D[b.help])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(D[b.help])):q(isDef(b.out)&&"raw"==b.out?D[b.help]:ow.format.withMD(D[b.help]))):q("Check https://github.com/OpenAF/oafp/blob/master/src/"+a);k(0)},R=()=>{var a=(getOPackPath("oafproc")||".")+"/.package.yaml";a={oafp:{version:io.fileExists(a)?io.readFileYAML(a).version:
"(not available/embedded)",inputs:Array.from(G.keys()).filter(c=>"?"!=c).sort(),transforms:Object.keys(F).filter(c=>"transforms"!=c).sort(),outputs:Array.from(H.keys()).filter(c=>"?"!=c).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),
params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},os:{name:String(java.lang.System.getProperty("os.name")),version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};
return stringify(a,__,"")};ow.loadFormat();b.format=b.output||b.format||b.out;b.type=b.input||b.type||b.in;b.out=b.format;b.output=b.format;b.in=b.type;b.input=b.type;if(isUnDef(b.file)&&isUnDef(b.cmd)){var I=__;for(let a in b)if(""===b[a]&&"-debug"!=a&&"-v"!=a&&"-examples"!=a){I=a;break}b.file=I}"[object Object]"==Object.prototype.toString.call(b.data)&&(b.data=stringify(b.data,__,""));var L=new Map([[".json","json"],[".ndjson","ndjson"],[".slon","slon"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],
[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"],[".toml","toml"],[".jwt","jwt"]]),O=new Set(["csv","ndjson"]),P={lines:(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));if(!b.linesjoin&&isString(a))0!=a.trim().length&&(0<a.trim().length&&(a=a.trim().split(/\r?\n/)),m(a,c,!0)),M=!0;else return!0},javagc:(a,c)=>{ow.loadFormat();a:{try{let g=[/([^ ]+) (\d+\.\d+): \[GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), (\d+\.\d+) secs\]/,
/([^ ]+) (\d+\.\d+): \[Full GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] \[ParOldGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), \[Metaspace: (\d+K)->(\d+K)\(.*?\)\], (\d+\.\d+) secs\]/,/\[(\d+\.\d+)s\]\[\w+\]\[gc\s*\]\s*GC\((\d+)\)\s*(.*?)\s*(\d+[GMK])->(\d+[GMK])\((\d+[GMK])\)\s*(\d+\.\d+)ms/,/\[(\d+\.\d+)s\]\[\w+\]\[gc,\w+\]\s*GC\((\d+)\)\s*(.*?)\s*Heap:\s*(\d+[GMK])->(\d+[GMK])\((\d+[GMK])\)\s*Metaspace:\s*(\d+[GMK])->(\d+[GMK])\((\d+[GMK])\)\s*(\d+\.\d+)ms/];for(let e of g){let f=a.match(e);
if(f){let h={};a.startsWith("[")?(h.sinceStart=parseFloat(f[1]),h.gcId=parseInt(f[2]),h.gcType=f[3].trim(),h.durationSecs=parseFloat(f[f.length-1])/1E3,e===g[2]?(h.beforeGC=ow.format.fromBytesAbbreviation(f[4]+"B"),h.afterGC=ow.format.fromBytesAbbreviation(f[5]+"B")):e===g[3]&&(h.heapBeforeGC=ow.format.fromBytesAbbreviation(f[4]+"B"),h.heapAfterGC=ow.format.fromBytesAbbreviation(f[5]+"B"),h.metaspaceBeforeGC=ow.format.fromBytesAbbreviation(f[7]+"B"),h.metaspaceAfterGC=ow.format.fromBytesAbbreviation(f[8]+
"B"))):(h.timestamp=ow.format.toDate(f[1],"yyyy-MMdd'T'HH:mm:ss.SSSZ"),h.sinceStart=parseFloat(f[2]),h.gcType=f[3],h.durationSecs=parseFloat(f[f.length-1]),9===f.length?(h.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(f[4]+"B"),h.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(f[5]+"B"),h.beforeGC=ow.format.fromBytesAbbreviation(f[6]+"B"),h.afterGC=ow.format.fromBytesAbbreviation(f[7]+"B")):13===f.length&&(h.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(f[4]+"B"),h.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(f[5]+
"B"),h.ParOldGenBeforeGC=ow.format.fromBytesAbbreviation(f[6]+"B"),h.ParOldGenAfterGC=ow.format.fromBytesAbbreviation(f[7]+"B"),h.beforeGC=ow.format.fromBytesAbbreviation(f[8]+"B"),h.afterGC=ow.format.fromBytesAbbreviation(f[9]+"B"),h.metaspaceBeforeGC=ow.format.fromBytesAbbreviation(f[10]+"B"),h.metaspaceAfterGC=ow.format.fromBytesAbbreviation(f[11]+"B")));var d=h;break a}}}catch(g){printErr(g),k(-2,"Error parsing Java GC log: "+g)}d=void 0}isMap(d)&&m(d,c,!0)},ndjson:(a,c)=>{isBoolean(b.ndjsonjoin)||
(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(b.ndjsonjoin)return!0;isUnDef(global.__ndjsonbuf)&&0!=a.length&&a.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=a.length&&!a.trim().endsWith("}")){global.__ndjsonbuf+=a.trim();return}0<global.__ndjsonbuf.length&&(a=global.__ndjsonbuf+a,global.__ndjsonbuf=__)}0==a.length||0<a.length&&"{"!=a.trim().substring(0,1)?(m(jsonParse(global.__ndjsonbuf,__,__,!0),c,!0),M=!0,global.__ndjsonbuf=
__):(m(jsonParse(a,__,__,!0),c,!0),M=!0)}},F={transforms:a=>{if(toBoolean(b.transforms))return Object.keys(F).filter(c=>"transforms"!=c).sort()},cmlt:a=>{if(toBoolean(b.cmlt)){a=isArray(a)?a:[a];b.cmltch=_$(b.cmltch,"cmltch").default("(type: simple)");var c=v(b.cmltch);if(isMap(c))return isUnDef(c.type)&&k(-1,"cmltch.type is not defined."),isDef(c.lib)&&loadLib(c.lib),0>$ch().list().indexOf("oafp::cmltdata")&&("remote"==c.type?$ch("oafp::cmltdata").createRemote(c.url):$ch("oafp::cmltdata").create(c.type,
c.options),c=Number(_$(b.cmltsize,"cmltsize").isNumber().default(100))-1,0<c&&$ch("oafp::cmltdata").subscribe(ow.ch.utils.getHousekeepSubscriber("oafp::cmltdata",c))),a.forEach(d=>$ch("oafp::cmltdata").set({t:nowNano()},d)),$ch("oafp::cmltdata").getAll();k(-1,"Invalid cmltch parameter")}},diff:a=>{var c=v(b.diff);if(isMap(c)){isDef(c.a)&&isDef(c.b)||k(-1,"diff.a path and diff.b path are required.");loadDiff();let d=$path(a,c.a);a=$path(a,c.b);let g=__;toBoolean(b.color)&&(isUnDef(b.difftheme)&&isDef(getEnv("OAFP_DIFFTHEME"))&&
(b.difftheme=getEnv("OAFP_DIFFTHEME")),g=v(_$(b.difftheme,"difftheme").isString().default("")),g=merge({added:"GREEN",removed:"RED",common:"FAINT",linenum:"ITALIC",linediv:"FAINT",linesep:"|"},g));let e=(f,h)=>{if(toBoolean(b.color)){isUnDef(h)&&(h="");var l=new Set;if(isArray(f)){let n=1,x=toBoolean(b.diffnlines),t=0;x&&(f.forEach(A=>{t+=A.value.split("\n").length}),t=String(t).length+1);let p=A=>{let y;y=x&&""!=h?ansiColor(g.linenum,0<A?$ft("% "+t+"d",n):" ".repeat(t))+ansiColor(g.linediv,`${g.linesep}`):
"";n+=A;return y};f.forEach((A,y)=>{y=A.value;isString(y)&&(""!=h?(y=y.split(h),""==y[y.length-1]&&y.pop()):y=[y]);l.add(A.added?y.map(E=>p(1)+ansiColor(g.added,(""!=h?"+":"")+E)).join(ansiColor("RESET",h)):A.removed?y.map(E=>p(0)+ansiColor(g.removed,(""!=h?"-":"")+E)).join(ansiColor("RESET",h)):y.map(E=>p(1)+ansiColor(g.common,(""!=h?" ":"")+E)).join(ansiColor("RESET",h)))})}return Array.from(l).join(ansiColor("RESET",h))}return $from(f).select({count:__,added:!1,removed:!1,value:[]})};return isString(d)&&
isString(a)?toBoolean(b.diffwords)?e(JsDiff.diffWords(d,a,c.options)):toBoolean(b.diffwordswithspace)?e(JsDiff.diffWordsWithSpace(d,a,c.options)):toBoolean(b.difflines)?e(JsDiff.diffLines(d,a,c.options),"\n"):toBoolean(b.diffsentences)?e(JsDiff.diffSentences(d,a,c.options),"\n"):e(JsDiff.diffChars(d,a,c.options)):isArray(d)&&isArray(a)&&!toBoolean(b.color)?e(JsDiff.diffArrays(d,a,c.options)):e(JsDiff.diffJson(d,a,c.options),"\n")}},jsonschemagen:a=>{if(toBoolean(b.jsonschemagen))return ow.loadObj(),
ow.obj.schemaGenerator(a)},jsonschemacmd:a=>F.jsonschema(a),jsonschema:a=>{isMap(a)||k(-1,"jsonschema is only supported with a map.");isUnDef(b.jsonschema)&&isUnDef(b.jsonschemacmd)&&k(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var c;if(isDef(b.jsonschemacmd)){var d=$sh(b.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:k(-1,"Error executing the command '"+b.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(b.jsonschema);isMap(c)||k(-1,"The schema provided is not a valid JSON schema.");
ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(a),errors:c.errors}},sortmapkeys:a=>{if(toBoolean(b.sortmapkeys)&&isObject(a)){let c=(d,g)=>{let e=Object.keys(d).sort(),f={};for(let h=0;h<e.length;h++){let l=e[h],n=d[l];Array.isArray(n)?f[l]=n.map(x=>"object"===typeof x&&null!==x&&void 0!==x?sortMapKeys(x,g):x):f[l]=g&&"object"===typeof n&&null!==n&&void 0!==n?c(n,g):n}return f};return c(a,!0)}return a},searchkeys:a=>isObject(a)?searchKeys(a,b.searchkeys):a,searchvalues:a=>
isObject(a)?searchValues(a,b.searchvalues):a,maptoarray:a=>toBoolean(b.maptoarray)&&isMap(a)?$m4a(a,b.maptoarraykey):a,arraytomap:a=>toBoolean(b.arraytomap)&&isArray(a)?$a4m(a,b.arraytomapkey,toBoolean(b.arraytomapkeepkey)):a,flatmap:a=>toBoolean(b.flatmap)&&isObject(a)?ow.loadObj().flatMap(a,b.flatmapsep):a,merge:a=>{if(toBoolean(b.merge)&&isArray(a)&&1<a.length){for(var c,d=0;d<a.length;d++)c=0==d?a[d]:merge(c,a[d]);return c}return a},correcttypes:a=>{toBoolean(b.correcttypes)&&isObject(a)&&traverse(a,
(c,d,g,e)=>{switch(descType(d)){case "number":isString(d)&&(e[c]=Number(d));break;case "string":"true"==d.trim().toLowerCase()||"false"==d.trim().toLowerCase()?e[c]=toBoolean(d):d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?e[c]=new Date(d):d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&(e[c]=new Date(d))}});return a},removenulls:a=>{toBoolean(b.removenulls)&&traverse(a,(c,d,g,e)=>{(isNull(d)||
isUnDef(d))&&delete e[c]});return a},removeempty:a=>toBoolean(b.removeempty)&&isArray(a)?a.filter(c=>isDef(c)&&!isNull(c)):a,trim:a=>{toBoolean(b.trim)&&traverse(a,(c,d,g,e)=>{isString(d)&&(e[c]=d.trim())});return a},removedups:a=>{if(toBoolean(b.removedups)){if(isArray(a)){var c=new Set,d=[];a.forEach(g=>{var e=g;isObject(g)&&(e=sortMapKeys(e));e=stringify(e,__,!0);c.has(e)||(c.add(e),d.push(g))});return d}k(-1,"removedups is only supported for arrays")}return a},llmprompt:a=>{if(isString(b.llmprompt)){b.llmenv=
_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);var c=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system","envs").get(b.llmenv));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&c.getGPT().setConversation(io.readFileJSON(b.llmconversation));var d="json",g=!0;isString(b.input)&&("md"==b.input&&(d="markdown",g=!1),"mdtable"==b.input&&(d="markdown table",g=!1),"hsperf"==b.input&&(d="java hsperf file"),"raw"==b.input&&
(d="raw",g=!1));c=c.withContext(g?stringify(a,__,!0):a,isDef(b.llmcontext)?b.llmcontext:`${d} input data`);if(isString(b.output)&&("md"==b.output||"mdtable"==b.output||"raw"==b.output))return a=c.prompt(b.llmprompt),isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),""),a;a=c.promptJSON(b.llmprompt);isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),"");return a}return a},splitlines:a=>toBoolean(b.splitlines)&&isString(a)?
a.split(/\r?\n/):a,regression:a=>{if(isString(b.regression)){ow.loadAI();var c=ow.ai.regression(),d=_$(b.regressionpath,"regressionpath").isString().default("@");let g=v(_$(b.regressionoptions,"regressionoptions").isString().default("{order:2,precision:5}"));d=$path(a,d);if(isArray(d)){if(isString(b.regressionx)){let f=$path(a,b.regressionx);d=d.map((h,l)=>[f[l],h])}else d=d.map((f,h)=>[h+1,f]);let e;switch(b.regression){case "exp":e=c.exponential(d,g);break;case "poly":e=c.polynomial(d,g);break;
case "power":e=c.power(d,g);break;case "log":e=c.logarithmic(d,g);break;default:e=c.linear(d,g)}return isDef(e)&&isDef(e.points)?(isString(b.regressionforecast)&&(a=$path(a,b.regressionforecast),isArray(a)?a.forEach(f=>{e.points.push(e.predict(f))}):k(-1,"Invalid array of x for regression forecast")),e.points.map(f=>({x:f[0],y:f[1]}))):e}k(-1,"Invalid data for regression analysis")}return a},normalize:a=>{if(isString(b.normalize)){var c=v(b.normalize);if(isMap(c)){ow.loadAI();if(isMap(a))return ow.ai.normalize.withSchema(a,
c,!0);if(isArray(a))return a.map(d=>ow.ai.normalize.withSchema(d,c,!0))}else k(-1,"Invalid normalize schema")}else k(-1,"Invalid normalize schema")},denormalize:a=>{if(isString(b.denormalize)){var c=v(b.denormalize);if(isMap(c)){ow.loadAI();isUnDef(ow.ai.normalize.denormalizeWithSchema)&&k(-1,"This version of OpenAF does not support denormalizeWithSchema");if(isMap(a))return ow.ai.normalize.denormalizeWithSchema(a,c,!1);if(isArray(a))return a.map(d=>ow.ai.normalize.denormalizeWithSchema(d,c,!1))}else k(-1,
"Invalid denormalize schema")}else k(-1,"Invalid denormalize schema")},kmeans:a=>{isNumber(b.kmeans)||(b.kmeans=5);isArray(a)||k(-1,"For kmeans transform you need to provide an array as input");ow.loadAI();return ow.ai.cluster({type:"kmeans",numberOfClusters:Number(b.kmeans)}).classify(a)},getlist:a=>{if(isObject(a)&&(toBoolean(b.getlist)||isNumber(b.getlist))){var c=!1,d,g=isNumber(b.getlist)?b.getlist:1;traverse(a,(e,f,h,l)=>{!c&&isArray(f)&&(g--,0==g&&(c=!0),d=f)});return c?d:a}},set:a=>{var c=
v(b.set);!isMap(c)&&isUnDef(c.a)&&isUnDef(c.b)&&k(-1,"set.a path and set.b path are required.");isUnDef(pForEach)&&k(-1,"This version of OpenAF does not support the set transform");isString(c.a)||k(-1,"set.a path is not a string.");isString(c.b)||k(-1,"set.b path is not a string.");let d=$path(a,c.a);a=$path(a,c.b);isArray(d)||k(-1,"set.a path result is not an array.");isArray(a)||k(-1,"set.b path result is not an array.");let g;if(isString(b.setkeys)){ow.loadObj();var e=b.setkeys.split(",").map(f=>
f.trim());g=f=>stringify(isObject(f)?sortMapKeys(ow.obj.filterKeys(e,f),!0):f,__,"");c=f=>pForEach(f,g).reduce((h,l)=>h.concat(l),[])}else g=f=>stringify(isObject(f)?sortMapKeys(f,!0):f,__,""),c=f=>pForEach(f,g).reduce((h,l)=>h.concat(l),[]);switch(b.setop){case "union":let f=new Set(c(d));return d.concat(a.filter(p=>!f.has(g(p))));case "diffa":let h=new Set(c(a));return d.filter(p=>!h.has(g(p)));case "diffb":let l=new Set(c(d));return a.filter(p=>!l.has(g(p)));case "diffab":let n=new Set(c(d)),x=
new Set(c(a));return d.filter(p=>!x.has(g(p))).concat(a.filter(p=>!n.has(g(p))));default:let t=new Set(c(a));return d.filter(p=>t.has(g(p)))}},forcearray:a=>isMap(a)?[a]:a,spacekeys:a=>{isMap(a)&&traverse(a,(c,d,g,e)=>{0<=c.indexOf(" ")&&(e[c.replace(/ /g,b.spacekeys||"_")]=d,delete e[c])});return a},numformat:a=>{traverse(a,(c,d,g,e)=>{isTNumber(d)&&isString(b.numformat)&&(e[c]=$ft(b.numformat,d))});return a}},H=new Map([["?",(a,c)=>{a=Array.from(H.keys()).filter(d=>"?"!=d).sort();u(a,c)}],["pm",
(a,c)=>{u(a,c)}],["key",(a,c)=>{u(a,c)}],["html",(a,c)=>{let d;c=!1;b.htmlopen=toBoolean(_$(b.htmlopen,"htmlopen").isString().default("true"));b.htmlwait=_$(b.htmlwait,"htmlwait").isNumber().default(2500);b.htmlopen&&(d=io.createTempFile("oafp_",".html"));ow.loadTemplate();isString(a)?(a=ow.template.html.genStaticVersion(ow.template.parseMD2HTML(a,!toBoolean(b.htmlpart),!toBoolean(b.htmlcompact))),a=a.replace("<html>",'<html><meta charset="utf-8">')):(a=ow.template.html.parseMap(a,!0),a='<html><meta charset="utf-8"><style>'+
a.css+"</style><body>"+a.out+"</body></html>");b.htmlopen&&(io.writeFileString(d,a),c=openInBrowser("file:///"+d.replace(/\\/g,"/")));c?sleep(b.htmlwait,!0):q(a)}],["ctable",(a,c)=>{u(a,c)}],["stable",(a,c)=>{u(a,c)}],["table",(a,c)=>{u(a,c)}],["json",(a,c)=>{u(a,c)}],["yaml",(a,c)=>{u(a,c)}],["cyaml",(a,c)=>{u(a,c)}],["cjson",(a,c)=>{u(a,c)}],["slon",(a,c)=>{u(a,c)}],["cslon",(a,c)=>{u(a,c)}],["ctree",(a,c)=>{u(a,c)}],["tree",(a,c)=>{u(a,c)}],["res",(a,c)=>{u(a,c)}],["key",(a,c)=>{u(a,c)}],["text",
(a,c)=>{u(a,c)}],["csv",(a,c)=>{u(a,c)}],["map",(a,c)=>{u(a,c)}],["md",(a,c)=>{u(toBoolean(b.mdtemplate)?$t(a):a,c)}],["log",(a,c)=>{if(isString(a)&&toBoolean(b.logprintall))q(a.replace(/\n$/,""));else if(c=a,isMap(a)&&(c=[a]),isArray(c)){isUnDef(b.logtheme)&&isDef(getEnv("OAFP_LOGTHEME"))&&(b.logtheme=getEnv("OAFP_LOGTHEME"));let d=v(_$(b.logtheme,"logtheme").isString().default(""));d=merge({errorLevel:"RED,BOLD",warnLevel:"YELLOW",timestamp:"BOLD"},d);c.forEach(g=>{if(isMap(g)){let e=isDef(g["@timestamp"])&&
isString(g["@timestamp"])?g["@timestamp"]:__,f=isDef(g.level)?g.level:__;g=isDef(g.message)?g.message:__;let h;isDef(f)&&(0<=f.toLowerCase().indexOf("err")&&(h=d.errorLevel),0<=f.toLowerCase().indexOf("warn")&&(h=d.warnLevel));isDef(e)&&24<e.length&&(e=e.substring(0,23)+"Z");(isDef(g)||isDef(e))&&q(ansiColor(d.timestamp,e)+(isDef(f)?" | "+ansiColor(h,f):"")+" | "+ansiColor(h,g))}})}}],["raw",(a,c)=>{isString(a)?q(a):q(stringify(a))}],["lines",(a,c)=>{isArray(a)?a.forEach(d=>q(d)):q(a)}],["ini",(a,
c)=>{isString(a)||(ow.loadJava(),c=new ow.java.ini,q(c.put(a).save()))}],["toml",(a,c)=>{isUnDef(af.toTOML)&&k(-1,"TOML support not found.");if(isMap(a))q(af.toTOML(a));else if(isArray(a))q(af.toTOML({list:a}));else return __}],["mdyaml",(a,c)=>{isArray(a)?a.forEach((d,g)=>{u(d,merge(c,{__format:"yaml"}));g<a.length-1&&q("---\n")}):u(a,merge(c,{__format:"yaml"}))}],["mdtable",(a,c)=>{isArray(a)&&(ow.loadTemplate(),q(ow.template.md.table(a)))}],["template",(a,c)=>{isString(a)||(ow.loadTemplate(),ow.template.addConditionalHelpers(),
ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(b.template)&&isUnDef(b.templatepath)&&k(-1,"For out=template you need to provide a template=someFile.hbs or templatepath=..."),b.templatedata=_$(b.templatedata,"templatedata").isString().default("@"),c=isDef(b.template)?toBoolean(b.templatetmpl)?b.template:io.readFileString(b.template):$path(b.__origr,b.templatepath),q($t(c,$path(a,b.templatedata))))}],["openmetrics",(a,c)=>{isString(a)?k(-1,"For out=openmetrics input needs to be an array or map."):
(ow.loadMetrics(),a=ow.metrics.fromObj2OpenMetrics(a,b.metricsprefix,b.metricstimestamp),a=a.split("\n").map(d=>{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).filter(d=>0<d.length).join("\n"),q(a))}],["pjson",(a,c)=>{c.__format="prettyjson";u(a,c)}],["ndjson",(a,c)=>{isArray(a)?a.forEach(d=>q(stringify(d,__,""))):isMap(a)?q(stringify(a,__,"")):u(a,c)}],["base64",(a,
c)=>{a=isString(a)?a:stringify(a);toBoolean(b.base64gzip)?q(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a))))):q(af.fromBytes2String(af.toBase64Bytes(a)))}],["gb64json",(a,c)=>{a=isString(a)?a:stringify(a);q(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a)))))}],["jwt",(a,c)=>{isMap(a)?(isUnDef(b.jwtsecret)&&isUnDef(b.jwtprivkey)&&k(-1,"For out=jwt you need to provide a jwtsecret or a jwtprivkey"),ow.loadServer(),isDef(b.jwtprivkey)?(ow.loadJava(),c=new ow.java.cipher,
q(ow.server.jwt.sign(c.readKey4File(b.jwtprivkey,!0,b.jwtalg),a))):q(ow.server.jwt.sign(b.jwtsecret,a))):k(-1,"For out=jwt input needs to be a map.")}],["grid",(a,c)=>{isUnDef(b.grid)&&k(-1,"For out=grid you need to provide a grid=...");c=v(_$(b.grid,"grid").isString().$_());isArray(c)&&0<c.length&&isArray(c[0])?(c.forEach((d,g)=>{d.forEach((e,f)=>{if(isUnDef(e.type)||"empty"!=e.type){if(isDef(e.cmd)){var h=$sh(e.cmd).getJson(0);h=isDef(h)&&isDef(h.stdout)?h.stdout:""}else h=a;if("chart"==e.type||
"bar"==e.type)f="_chrt"+(g+1)+"."+(f+1),e.obj=("chart"==e.type?f+" ":"")+K(h,e.obj,f),isUnDef(e.title)&&(e.title="Chart "+f);isDef(e.path)?(e.obj=$path(h,e.path),isUnDef(e.title)&&(e.title=e.path)):isString(h)?e.obj=h:isObject(h)&&"chart"!=e.type&&(e.obj=$path(h,"@"))}else e.obj=""})}),c=ow.format.string.grid(c,__,__," ",!0),q(c)):k(-1,"Invalid grid parameter: '"+stringify(b.grid,__,"")+"'")}],["envs",(a,c)=>{a=isArray(a)?a.map(e=>isObject(e)?ow.loadObj().flatMap(e,"_"):e):ow.loadObj().flatMap(a,
"_");c=e=>0<=String(e).indexOf(" ")?'"'+e+'"':e;isUnDef(b.envscmd)&&(b.envscmd=ow.format.isWindows()?"set":"export");b.envscmd=String(b.envscmd);isUnDef(b.envsprefix)&&(b.envsprefix="_OAFP_");b.envsprefix=String(b.envsprefix);toBoolean(b.envsnoprefix)&&(b.envsprefix="");var d=new Set,g;for(g in a)d.add(b.envscmd+(0<b.envscmd.length?" ":"")+(b.envsprefix+g.replace(/[^a-zA-Z0-9_]/g,"_"))+"="+c(a[g]));q(Array.from(d).join("\n"))}],["cmd",(a,c)=>{isString(b.outcmd)||k(-1,'For out=cmd you need to provide a outcmd="..."');
toBoolean(b.outcmdtmpl)&&(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers());let d=g=>{var e=isString(g)?g:stringify(g,__,"");if(toBoolean(b.outcmdparam))try{var f=$sh(b.outcmd.replace(/([^\\]?){}/g,"$1"+e)).get(0)}catch(h){sprintErr(h)}else f=toBoolean(b.outcmdtmpl)?$sh($t(b.outcmd,g)).get(0):$sh(b.outcmd,e).get(0);toBoolean(b.outcmdnl)?(0<f.stdout.length&&print(f.stdout),0<f.stderr.length&&printErr(f.stderr)):(0<f.stdout.length&&
printnl(f.stdout),0<f.stderr.length&&printErrnl(f.stderr))};isArray(a)?toBoolean(b.outcmdjoin)?d(a):toBoolean(b.outcmdseq)?a.forEach(d):isDef(pForEach)?pForEach(a,g=>{d(g)}):parallel4Array(a,g=>{d(g)}):(isString(a),d(a))}],["chart",(a,c)=>{isUnDef(b.chart)&&k(-1,'For out=chart you need to provide a chart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&k(-1,"output=chart is not supported in this version of OpenAF");a=K(a,b.chart);0<a.length&&(a=printChart("oafp "+a),toBoolean(b.chartcls)&&
cls(),q(a))}],["schart",(a,c)=>{isUnDef(b.schart)&&k(-1,'For out=schart you need to provide a schart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&k(-1,"Output=schart is not supported in this version of OpenAF");a=K(a,b.schart,"_oafp_sfn_","soafp");0<a.length&&q(printChart("soafp "+a))}],["ch",(a,c)=>{isUnDef(b.ch)&&k(-1,'For out=ch you need to provide a ch="(type: ...)"');isUnDef(b.chkey)&&k(-1,'For out=ch you need to provide a chkey="key1, key2"');a=isMap(a)?[a]:a;b.ch=v(b.ch);
isMap(b.ch)?(isUnDef(b.ch.type)&&k(-1,"ch.type is not defined."),isDef(b.ch.lib)&&loadLib(b.ch.lib),"remote"==b.ch.type?$ch("oafp::outdata").createRemote(b.ch.url):$ch("oafp::outdata").create(b.ch.type,isDef($sec().procMap)?$sec().procMap(b.ch.options):b.ch.options),toBoolean(b.chunset)?$ch("oafp::outdata").unsetAll(b.chkey.split(",").map(d=>d.trim()),a):$ch("oafp::outdata").setAll(b.chkey.split(",").map(d=>d.trim()),a),$ch("oafp::outdata").destroy()):k(-1,"Invalid ch parameter")}],["db",(a,c)=>{(!isArray(a)||
1>a.length)&&k(-1,"db is only supported for filled arrays/lists");b.dbtable=_$(b.dbtable,"outdbtable").isString().default("data");b.dbnocreate=toBoolean(_$(b.dbnocreate,"outdbnocreate").isString().default("false"));b.dbicase=toBoolean(_$(b.dbicase,"outdbicase").isString().default("false"));b.dbbatchsize=_$(b.dbbatchsize,"dbbatchsize").isNumber().default(__);ow.loadObj();try{isString(b.dbjdbc)||k(-1,"dbjdbc URL is not defined.");isDef(b.dblib)&&loadLib("jdbc-"+b.dblib+".js");var d=new DB(b.dbjdbc,
b.dbuser,b.dbpass,b.dbtimeout);if(!b.dbnocreate)try{var g=ow.obj.fromObj2DBTableCreate(b.dbtable,a,__,!b.dbicase);d.u(g);d.commit()}catch(n){d.rollback(),k(-1,"Error creating table: "+n)}var e=Object.keys(ow.obj.flatMap(a[0]));var f=b.dbicase?e.join(",").toUpperCase():'"'+e.join('", "')+'"';let l="";var h=a.map(n=>{var x=ow.obj.flatMap(n);n=[];for(var t in e)n.push(x[e[t]]);t=e.map(p=>String(x[p]));n="INSERT INTO "+(b.dbicase?b.dbtable:'"'+b.dbtable+'"')+" ("+f+") VALUES ("+t.map(p=>"?").join(", ")+
")";n.length>l.length&&(l=String(n));return t});d.usArray(l,h,b.dbbatchsize)}catch(l){isDef(d)&&d.rollback(),printErr(l),k(-1,"Error connecting to the database: "+l)}finally{isDef(d)&&(d.commit(),d.close())}}],["sql",(a,c)=>{(!isArray(a)||1>a.length)&&k(-1,"sql is only supported for filled arrays/lists");b.sqltable=_$(b.sqltable,"sqltable").isString().default("data");b.sqlicase=toBoolean(_$(b.sqlicase,"sqlicase").isString().default("false"));b.sqlnocreate=toBoolean(_$(b.sqlnocreate,"sqlnocreate").isString().default("false"));
ow.loadObj();b.sqlnocreate||q(ow.obj.fromObj2DBTableCreate(b.sqltable,a,__,!b.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(a[0]));var g=b.sqlicase?d.join(",").toUpperCase():'"'+d.join('", "')+'"';q(a.map(e=>{var f=ow.obj.flatMap(e);e=[];for(var h in d)e.push(f[d[h]]);h=d.map(l=>{l=f[l];isString(l)&&(l="'"+l.replace(/'/g,"''")+"'");isNull(l)&&(l="null");return l});return"INSERT INTO "+(b.sqlicase?b.sqltable:'"'+b.sqltable+'"')+" ("+g+") VALUES ("+h.join(",")+");"}).join("\n"))}],["xml",(a,c)=>
{q(af.fromObj2XML(a,!0,b.outxmlprefix))}],["pxml",(a,c)=>{a=af.fromObj2XML(a,!0,b.pxmlprefix);q('<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n'+new XMLList(a))}],["xls",(a,c)=>{if(!isString(a)){try{includeOPack("plugin-XLS")}catch(f){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");if(isMap(a)){ow.loadObj();var d=ow.obj.flatMap(a);var g=Object.keys(d).map(f=>({key:f,value:d[f]}))}isArray(a)&&(g=a);traverse(g,(f,h,l,n)=>
{isString(h)&&h.startsWith("=")&&(n[f]="'"+h)});a=!1;c=b.xlsfile;isUnDef(b.xlsfile)&&(a=!0,b.xlsfile=io.createTempFile("oafp",".xlsx"));c=new XLS(isDef(c)&&io.fileExists(c)?c:__);var e=c.getSheet(_$(b.xlssheet,"xlssheet").isString().default("data"));b.xlsformat=_$(b.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');b.xlsformat=v(b.xlsformat);ow.format.xls.setTable(c,e,"A",1,g,__,b.xlsformat);c.writeFile(b.xlsfile);c.close();b.xlsopenwait=_$(b.xlsopenwait,
"xlsopenwait").isNumber().default(5E3);b.xlsopen=toBoolean(_$(b.xlsopen,"xlsopen").isString().default("true"));b.xlsopen&&(ow.format.isWindows()?($sh("start "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)))}}]]),G=new Map([["?",(a,c)=>{a=Array.from(G.keys()).filter(d=>"?"!=d).sort();m(a,c)}],["pm",(a,c)=>{r();isDef(__pm._map)&&(a=__pm._map);isDef(__pm._list)&&(a=__pm._list);m(a,c)}],["key",(a,c)=>{r();isString(a)||
k(-1,"key is only supported with a string.");m($get(a),c)}],["jsonschema",(a,c)=>{r();a=jsonParse(a,__,__,!0);isMap(a)||k(-1,"jsonschema is only supported with a map.");ow.loadObj();a=ow.obj.schemaSampleGenerator(a);m(a,c)}],["yaml",(a,c)=>{r();a=af.fromYAML(a);m(a,c)}],["xml",(a,c)=>{r();b.xmlignored=_$(b.xmlignored,"xmlignored").isString().default(__);b.xmlprefix=_$(b.xmlprefix,"xmlprefix").isString().default(__);b.xmlfiltertag=toBoolean(_$(b.xmlfiltertag,"xmlfiltertag").isString().default(__));
0<=a.indexOf("<?xml")&&(a=a.substring(a.indexOf("?>")+2).trim());0<=a.indexOf("<!DOCTYPE")&&(a=a.substring(a.indexOf(">")+1).trim());a=af.fromXML2Obj(a,b.xmlignored,b.xmlprefix,!b.xmlfiltertag);m(a,c)}],["lines",(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));r();let d=__,g=[];b.linesvisualheadsep=toBoolean(_$(b.linesvisualheadsep,"linesvisualheadsep").isString().default(__));let e=!1,f=!1;isUnDef(b.linesvisualsepre)&&(b.linesvisualsepre=
b.linesvisualheadsep?"\\s+":" \\s+");let h=n=>{n=n.split("\n").map(t=>{let p="",A=0;for(let y=0;y<t.length;y++)if("\t"===t[y]){let E=8-A%8;p+=" ".repeat(E);A+=E}else p+=t[y],A++;return p}).join("\n");if(e&&f){var x={};g.forEach((t,p)=>{x[d[p]]=n.substring(t,p+1<g.length?g[p+1]-1:__).trim()});return x}e||(d=[]);n.split(new RegExp(b.linesvisualsepre)).reduce((t,p)=>{if(0!=p.trim().length){e||d.push(p);if(!b.linesvisualheadsep&&!e||e&&b.linesvisualheadsep&&!f)p=n.substring(t).match(new RegExp(ow.format.escapeRE(p)+
"("+b.linesvisualsepre+"|$)")),!isNull(p)&&isDef(p.index)?(g.push(t+p.index),t+=p[0].length):k(-1,"Problem with linesvisual to find header positioning.");return t}},0);e?b.linesvisualheadsep&&!f&&(f=!0):(e=!0,b.linesvisualheadsep||(f=!0));return __};if(b.linesjoin)if(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=C(b.cmd,!0)),a=a.split(/\r?\n/),toBoolean(b.linesvisual)){var l=[];a.forEach(n=>{0!=n.length&&(n=h(n),isDef(n)&&l.push(n))});m(l,c)}else m(a,c);else a=isDef(b.file)&&
isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,n=>{toBoolean(b.linesvisual)?(n=h(n),isDef(n)&&m(n,clone(c),!0)):m(n,clone(c),!0)}),a.close()}],["ndjson",(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));r();global.__ndjsonbuf=__;var d=(e,f)=>{isUnDef(global.__ndjsonbuf)&&0!=e.length&&e.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=
e.length&&!e.trim().endsWith("}")){global.__ndjsonbuf+=e.trim();return}0<global.__ndjsonbuf.length&&(e=global.__ndjsonbuf+e,global.__ndjsonbuf=__)}0==e.length||0<e.length&&"{"!=e.trim().substring(0,1)?(f(e),global.__ndjsonbuf=__):f(e)},g=e=>{var f=[];e.split("\n").filter(h=>0<h.length).forEach(h=>d(h,l=>f.push(jsonParse(l,__,__,toBoolean(b.ndjsonfilter)))));return f};b.ndjsonjoin?(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=C(b.cmd,!0)),m(g(a),c)):(a=isDef(b.file)&&
isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,e=>{d(e,f=>m(jsonParse(f,__,__,!0),clone(c),!0))}),a.close())}],["md",(a,c)=>{r();__conConsole=__ansiColorFlag=!0;isUnDef(b.format)&&isUnDef(c.__format)&&(b.format="md",c.__format="md");m(a,c)}],["mdtable",(a,c)=>{r();ow.loadTemplate();if(toBoolean(b.inmdtablejoin)){var d=new Set,g=new Set,e=()=>{0<g.size&&(d.add(ow.template.md.fromTable(Array.from(g).join("\n"))),
g.clear())};a.split("\n").forEach(f=>{/^\|.+\|$/.test(f.trim())?g.add(f.trim()):e()});e();m(Array.from(d),c)}else g=ow.template.md.fromTable(a),m(g,c)}],["ask",(a,c)=>{var d=[];a=af.fromJSSLON(a);isDef(askStruct)&&isArray(a)&&(__conConsole=!0,__con.getTerminal().settings.set("-icanon min 1 -echo"),d=askStruct(a),__con.getTerminal().settings.set("icanon echo"),print(""));m(d,c)}],["raw",(a,c)=>{r();m(a,c)}],["ini",(a,c)=>{r();ow.loadJava();var d=new ow.java.ini;a=isDef(b.file)?d.loadFile(b.file).get():
d.load(a).get();m(a,c)}],["jwt",(a,c)=>{ow.loadServer();if(toBoolean(b.injwtverify)){isUnDef(b.injwtsecret)&&isUnDef(b.injwtpubkey)&&k(-1,"injwtsecret or injwtpubkey is not defined.");try{if(isDef(b.injwtpubkey)){ow.loadJava();var d=new ow.java.cipher;ow.server.jwt.verify(d.readKey4File(b.injwtpubkey,!1,b.injwtalg),a.trim())}else ow.server.jwt.verify(b.injwtsecret,a.trim());var g=!0}catch(e){isDef(e.javaException)&&printErr(e.javaException.getMessage()),g=!1}}a=ow.server.jwt.decode(a);isDef(g)&&(a.__verified=
g);!toBoolean(b.injwtraw)&&isDef(a)&&isMap(a.claims)&&(isDef(a.claims.exp)&&(a.claims.exp=new Date(1E3*a.claims.exp)),isDef(a.claims.iat)&&(a.claims.iat=new Date(1E3*a.claims.iat)),isDef(a.claims.nbf)&&(a.claims.nbf=new Date(1E3*a.claims.nbf)));m(a,c)}],["sql",(a,c)=>{isString(a)?toBoolean(b.sqlparse)?(isUnDef(ow.format.sqlFormat)&&k(-1,"SQL parse not available."),m(ow.format.sqlFormat(a,isDef(b.sqloptions)?v(b.sqloptions):__),c)):m(af.fromSQL(a).ast,c):m(a,c)}],["openmetrics",(a,c)=>{isString(a)?
(ow.loadMetrics(),m(ow.metrics.fromOpenMetrics2Array(a),c)):m(a,c)}],["ch",(a,c)=>{r();isUnDef(b.inch)&&k(-1,"inch is not defined.");b.inch=v(b.inch);if(isMap(b.inch)){isUnDef(b.inch.type)&&k(-1,"inch.type is not defined.");isDef(b.inch.lib)&&loadLib(b.inch.lib);"remote"==b.inch.type?$ch("oafp::indata").createRemote(b.inch.url):$ch("oafp::indata").create(b.inch.type,isDef($sec().procMap)?$sec().procMap(b.inch.options):b.inch.options);var d=v(a);toBoolean(b.inchall)||0==a.trim().length?m($ch("oafp::indata").getAll(isMap(d)?
d:__),c):m($ch("oafp::indata").get(isMap(d)?d:__),c);$ch("oafp::indata").destroy()}else k(-1,"inch is not a valid map.")}],["db",(a,c)=>{if(isString(a)){r();isString(b.indbjdbc)||k(-1,"indbjdbc URL is not defined.");try{isDef(b.indblib)&&loadLib("jdbc-"+b.indblib+".js");var d=new DB(b.indbjdbc,b.indbuser,b.indbpass,b.indbtimeout);d.convertDates(!0);if(toBoolean(b.indbexec)){var g=d.u(a);m({affectedRows:g},c);d.commit()}else g=d.q(a),isMap(g)&&isArray(g.results)?m(g.results,c):k(-1,"Invalid DB result: "+
stringify(g))}catch(e){printErr(e.message),isDef(d)&&d.rollback(),k(-1,"Error executing SQL: "+e.message)}finally{isDef(d)&&(d.rollback(),d.close())}}else k(-1,"db is only supported with a SQL string.")}],["xls",(a,c)=>{r();try{includeOPack("plugin-XLS")}catch(g){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}b.inxlssheet=_$(b.inxlssheet||b.xlssheet,"xlssheet").isString().default(0);b.inxlsevalformulas=toBoolean(_$(b.inxlsevalformulas||b.xlsevalformulas,
"xlsevalformulas").isString().default(!0));b.inxlscol=_$(b.inxlscol||b.xlscol,"xlscol").isString().default("A");b.inxlsrow=_$(b.inxlsrow||b.xlsrow,"xlsrow").isString().default(1);plugin("XLS");if(isDef(b.file)||isDef(b.cmd)){a=new XLS(isDef(b.cmd)?C(b.cmd):b.file);var d=a.getSheet(b.inxlssheet);d=a.getTable(d,b.inxlsevalformulas,b.inxlscol,b.inxlsrow);a.close();isDef(d)&&isMap(d)&&(d=d.table);m(d,c)}else k(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],
["csv",(a,c)=>{r();isUnDef(b.inputcsv)&&isDef(b.incsv)&&(b.inputcsv=b.incsv);if(isDef(b.file)||isDef(b.cmd)){var d=isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):io.readFileStream(b.file);a=$csv(b.inputcsv).fromInStream(d).toOutArray();d.close()}else a=$csv(b.inputcsv).fromInString(a).toOutArray();m(a,c)}],["javagc",(a,c)=>{isBoolean(b.javagcjoin)||(b.javagcjoin=toBoolean(_$(b.javagcjoin,"javagcjoin").isString().default(__)));let d=g=>{try{let e=[/([^ ]+) (\d+\.\d+): \[GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), (\d+\.\d+) secs\]/,
/([^ ]+) (\d+\.\d+): \[Full GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] \[ParOldGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), \[Metaspace: (\d+K)->(\d+K)\(.*?\)\], (\d+\.\d+) secs\]/,/\[(\d+\.\d+)s\]\[\w+\]\[gc\s*\]\s*GC\((\d+)\)\s*(.*?)\s*(\d+[GMK])->(\d+[GMK])\((\d+[GMK])\)\s*(\d+\.\d+)ms/,/\[(\d+\.\d+)s\]\[\w+\]\[gc,\w+\]\s*GC\((\d+)\)\s*(.*?)\s*Heap:\s*(\d+[GMK])->(\d+[GMK])\((\d+[GMK])\)\s*Metaspace:\s*(\d+[GMK])->(\d+[GMK])\((\d+[GMK])\)\s*(\d+\.\d+)ms/];for(let f of e){let h=g.match(f);
if(h){let l={};g.startsWith("[")?(l.sinceStart=parseFloat(h[1]),l.gcId=parseInt(h[2]),l.gcType=h[3].trim(),l.durationSecs=parseFloat(h[h.length-1])/1E3,f===e[2]?(l.beforeGC=ow.format.fromBytesAbbreviation(h[4]+"B"),l.afterGC=ow.format.fromBytesAbbreviation(h[5]+"B")):f===e[3]&&(l.heapBeforeGC=ow.format.fromBytesAbbreviation(h[4]+"B"),l.heapAfterGC=ow.format.fromBytesAbbreviation(h[5]+"B"),l.metaspaceBeforeGC=ow.format.fromBytesAbbreviation(h[7]+"B"),l.metaspaceAfterGC=ow.format.fromBytesAbbreviation(h[8]+
"B"))):(l.timestamp=ow.format.toDate(h[1],"yyyy-MMdd'T'HH:mm:ss.SSSZ"),l.sinceStart=parseFloat(h[2]),l.gcType=h[3],l.durationSecs=parseFloat(h[h.length-1]),9===h.length?(l.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(h[4]+"B"),l.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(h[5]+"B"),l.beforeGC=ow.format.fromBytesAbbreviation(h[6]+"B"),l.afterGC=ow.format.fromBytesAbbreviation(h[7]+"B")):13===h.length&&(l.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(h[4]+"B"),l.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(h[5]+
"B"),l.ParOldGenBeforeGC=ow.format.fromBytesAbbreviation(h[6]+"B"),l.ParOldGenAfterGC=ow.format.fromBytesAbbreviation(h[7]+"B"),l.beforeGC=ow.format.fromBytesAbbreviation(h[8]+"B"),l.afterGC=ow.format.fromBytesAbbreviation(h[9]+"B"),l.metaspaceBeforeGC=ow.format.fromBytesAbbreviation(h[10]+"B"),l.metaspaceAfterGC=ow.format.fromBytesAbbreviation(h[11]+"B")));return l}}}catch(e){printErr(e),k(-2,"Error parsing Java GC log: "+e)}};ow.loadFormat();r();isString(a)?b.javagcjoin?m(a.split("\n").map(d).filter(g=>
isMap(g)),c,!0):a.split("\n").forEach(g=>m(d(g),c,!0)):k(-1,"javagc is only supported with a string input.")}],["hsperf",(a,c)=>{if(isDef(b.file)||isDef(b.cmd)){r();ow.loadJava();var d=isDef(b.cmd)?ow.java.parseHSPerf(C(b.cmd)):ow.java.parseHSPerf(b.file);d.__ts=new Date;var g=0,e=0;d.sun.gc.generation.forEach(f=>{f.space.forEach(h=>{e+=Number(h.used);g=isNumber(h.capacity)?g+Number(h.capacity):g;d.sun.gc["__percUsed_"+h.name]=100*h.used/h.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/
d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;a=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);d.sun.gc.__ygc=isDef(a)?Number(a.invocations):0;d.sun.gc.__ygct=isDef(a)?Number(a.time/1E9):0;a=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name","").at(0);d.sun.gc.__fgc=isDef(a)?Number(a.invocations):0;d.sun.gc.__fgct=isDef(a)?Number(a.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/
1E9;d.java.__mem={total:g,used:e,free:g-e,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-d.sun.gc.metaspace.used};m(d,c)}else k(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["rawhex",(a,c)=>{b.inrawhexline=_$(b.inrawhexline,"inrawhexline").isNumber().default(__);r();a=isDef(b.file)||isDef(b.cmd)?isDef(b.cmd)?C(b.cmd):io.readFileBytes(b.file):af.fromString2Bytes(a);a=ow.format.string.toHexArray(a,
b.inrawhexline);a.forEach(d=>{d.characters=d.characters.replace(/[\x00-\x1F\x80-\xFF]/g,".")});m(a,c)}],["base64",(a,c)=>{r();a=toBoolean(b.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(a,!0))):af.fromBytes2String(af.fromBase64(a));m(a,c)}],["gb64json",(a,c)=>{r();a=af.fromBytes2String(io.gunzip(af.fromBase64(a,!0)));m(a,c)}],["oaf",(a,c)=>{isString(a)||k(-1,"oaf is only supported with a string.");r();a=af.eval(a);m(a,c)}],["oafp",(a,c)=>{a=v(a);var d="_oafp_key_"+genUUID();isMap(a)?(a.out=
"key",a.__key=d,a.__inception=!0,oafp(a),a=$get(d),$unset(d),m(a,c)):isArray(a)?($set(d,!0),a=pForEach(a,(g,e)=>{e=d+"_"+String(e);g.out="key";g.__key=e;g.__inception=!0;try{oafp(g);var f=$get(e);$unset(e)}catch(h){sprintErr(h)}finally{return f}}),m(a,c)):k(-1,"oafp input data needs to be a map or an array.")}],["sh",(a,c)=>{r();a=v(a);if(isString(a))a=$sh(a).get(0);else{isMap(a)||k(-1,"For in=sh the input data needs to a string or a map");var d=$sh();isUnDef(a.cmd)&&k(-1,"For in=sh the input data needs to a string or a map with the a 'cmd'");
d=d.sh(a.cmd);isDef(a.envs)&&(d=d.envs(a.envs,a.envsall));isDef(a.prefix)&&(d=d.prefix(a.prefix));isDef(a.pwd)&&(d=d.pwd(a.pwd));switch(b.inshformat){case "raw":a=d.get(0);break;case "yaml":a=d.getYaml(0);break;default:a=d.getJson(0)}}m(a,c)}],["llm",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&k(-1,"llmoptions not defined and "+b.llmenv+" not found.");r();
var d=$llm(isDef(b.llmoptions)?v(b.llmoptions):$sec("system","envs").get(b.llmenv));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&d.getGPT().setConversation(io.readFileJSON(b.llmconversation));let g;isString(b.llmimage)&&(b.llmimage.toLowerCase().match(/^https?:\/\//)?g=af.fromBytes2String(af.toBase64Bytes(af.fromInputStream2Bytes($rest().get2Stream(b.llmimage)))):io.fileExists(b.llmimage)&&(g=af.fromBytes2String(af.toBase64Bytes(io.readFileBytes(b.llmimage)))));a="md"==b.output||"mdtable"==
b.output||"raw"==b.output?isDef(g)?d.promptImage(a,g):d.prompt(a):isDef(g)?d.promptImage(a,g,__,__,__,__,!0):d.promptJSON(a);isDef(b.llmconversation)&&(d=d.getGPT().getConversation(),d.push({role:"assistant",content:stringify(a,__,"")}),io.writeFileJSON(b.llmconversation,d,""));m(jsonParse(a,__,__,isString(a)),c)}],["llmmodels",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&
k(-1,"llmoptions not defined and "+b.llmenv+" not found.");r();a=$llm(isDef(b.llmoptions)?v(b.llmoptions):$sec("system","envs").get(b.llmenv));isUnDef(a.getModels)&&k(-1,"OpenAF support for llm model listing API not found.");m(a.getModels(),c)}],["ls",(a,c)=>{r();if(isString(a)){var d=toBoolean(b.lsposix);isDef(b.file)&&(a=b.file);var g=io.fileExists(a),e;g&&(e=io.fileInfo(a));if(g&&e.isFile)switch(isDef(b.lsext)?b.lsext:e.filename.replace(/^.*\./,"").toLowerCase()){case "tgz":case "gz":a=io.listFilesTAR(a,
!0);break;case "tar":a=io.listFilesTAR(a);break;default:plugin("ZIP"),a=$m4a((new ZIP).list(a))}else a=toBoolean(b.lsrecursive)?listFilesRecursive(a,d):io.listFiles(a,d).files;m(a,c)}else k(-1,"ls is only supported with a string.")}],["toml",(a,c)=>{r();isUnDef(af.fromTOML)&&k(-1,"TOML support not found.");m(af.fromTOML(a),c)}],["slon",(a,c)=>{r();m(af.fromSLON(a),c)}],["json",(a,c)=>{r();m(jsonParse(a,__,__,isString(a)),c)}]]),D={};isString(b.libs)&&(b.libs=b.libs.split(",").map(a=>a.trim()).filter(a=>
0<a.length));isDef(__flags.OAFP)&&isArray(__flags.OAFP.libs)&&isArray(b.libs)?b.libs=__flags.OAFP.libs.concat(b.libs):b.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(b.libs)&&b.libs.forEach(a=>{try{if(a.startsWith("@"))if(/^@([^\/]+)\/(.+)\.js$/.test(a)){var c=a.match(/^@([^\/]+)\/(.+)\.js$/),d=getOPackPath(c[1])+"/"+c[2]+".js";io.fileExists(d)?loadLib(d):k(-1,"ERROR: Library '"+a+"' not found.")}else k(-1,"ERROR: Library '"+a+"' does not have the correct format (@oPack/library.js).");else{var g=
require("oafp_"+a+".js");if(isDef(g.oafplib)){var e=g.oafplib(clone(b),m,u,{_runCmd2Bytes:C,_fromJSSLON:v,_msg:"(processing data...)",_showTmpMsg:r,_clearTmpMsg:Q,_chartPathParse:K,_exit:k,_print:q,_o$o:u});isMap(e)&&(isArray(e.fileExtensions)&&e.fileExtensions.forEach(f=>{var h=f.ext;f=f.type;L.has(h)?printErr("WARN: Extension '"+h+"' already exists."):L.set(h,f)}),isArray(e.fileExtensionsNoMem)&&e.fileExtensionsNoMem.forEach(f=>{f=f.ext;O.has(f)?printErr("WARN: Extension '"+f+"' already exists."):
O.add(f)}),isArray(e.input)&&e.input.forEach(f=>{var h=f.type;f=f.fn;G.has(h)?printErr("WARN: Input type '"+h+"' already exists."):G.set(h,f)}),isArray(e.inputLine)&&e.inputLine.forEach(f=>{var h=f.type;f=f.fn;isUnDef(_inputLinesFns[h])?P[h]=f:printErr("WARN: Input type '"+h+"' already exists.")}),isArray(e.transform)&&e.transform.forEach(f=>{var h=f.type;f=f.fn;isUnDef(F[h])?F[h]=f:printErr("WARN: Transform '"+h+"' already exists.")}),isArray(e.output)&&e.output.forEach(f=>{var h=f.type;f=f.fn;H.has(h)?
printErr("WARN: Output type '"+h+"' already exists."):H.set(h,f)}),isString(e.help)&&(D[a.toLowerCase()]=e.help))}else printErr("WARN: Library '"+a+"' does not have oafplib.")}}catch(f){printErr("WARN: Library '"+a+"' error: "+f)}});(""==b["-h"]||isString(b.help)&&0<b.help.length)&&z();b.format=_$(b.format,"format").isString().default(__);__initializeCon();z=!String(java.lang.System.getProperty("os.name")).match(/Windows/);I=getEnv("OAFP_RESET");var S=getEnv("OAFP_CODESET");isDef(I)&&(z=toBoolean(I)?
!1:!0);z&&isDef(__con)&&__con.getTerminal().settings.set("sane");if(isDef(b.secKey)){toBoolean(b.secEnv)&&(b.secRepo="system",b.secBucket="envs");b.secRepo=_$(b.secRepo,"secRepo").isString().default(getEnv("OAFP_SECREPO"));b.secBucket=_$(b.secBucket,"secBucket").isString().default(getEnv("OAFP_SECBUCKET"));b.secPass=_$(b.secPass,"secPass").isString().default(getEnv("OAFP_SECPASS"));b.secMainPass=_$(b.secMainPass,"secMainPass").isString().default(getEnv("OAFP_SECMAINPASS"));b.secFile=_$(b.secFile,
"secFile").isString().default(getEnv("OAFP_SECFILE"));let a=$sec(b.secRepo,b.secBucket,b.secPass,b.secMainPass,b.secFile).get(secKey);isDef(a)&&Object.keys(a).forEach(c=>b[c]=a[c])}var B={__format:b.format,__from:b.from,__ifrom:b.ifrom,__isql:b.isql,__sql:b.sql,__path:b.path,__opath:b.opath,__csv:b.csv,__pause:b.pause,__key:b.__key};isDef(b.inputcsv)&&(b.inputcsv=v(b.inputcsv));isDef(b.incsv)&&(b.incsv=v(b.incsv));isDef(b.csv)&&(b.csv=v(b.csv));var T=!1;if(""==b["-v"]||isString(b.version)&&0<b.version.length)T=
!0,R();if(""==b["-examples"]||isString(b.examples)&&0<b.examples.length)b.url="https://ojob.io/oafp-examples.yaml",b.in="yaml",isString(b.examples)&&0<b.examples.length?("?"!=b.examples.trim()&&(B.__format="template"),B.__path="data",b.templatepath="tmpl",0<b.examples.indexOf("::")?(z=b.examples.split("::").filter(a=>0<a.length),B.__sql=1==z.length?"select * where c like '"+z[0]+"'":"select * where c like '"+z[0]+"' and s like '"+z[1]+"'"):"?"==b.examples.trim()?(B.__path="data.sort(map(&concat(c,concat('::',s)),[]))",
b.removedups=!0):B.__sql="select * where d like '%"+b.examples+"%' or s like '%"+b.examples+"%' or c like '%"+b.examples+"%'"):(B.__path="data[].{category:c,subCategory:s,description:d}",B.__from="sort(category,subCategory,description)",B.__format="ctable"),delete b["-examples"];var w="",M=!1;isDef(b.outfile)&&("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"===typeof global.__oafp_streams[b.outfile]&&(global.__oafp_streams[b.outfile]={s:io.writeFileStream(b.outfile,
toBoolean(b.outfileappend))}));isString(b.chs)&&(z=af.fromJSSLON(b.chs),isArray(z)||(z=[z]),z.forEach(a=>{isMap(a)?isString(a.name)&&isString(a.type)?$ch(a.name).create(a.type,a.options):k(-1,"ERROR: chs must have a name and a type."):k(-1,"ERROR: chs must be an object or array of objects with name and a type")}));z=()=>{if(T)w=R();else if(b.jsonprefix=_$(b.jsonprefix,"jsonprefix").isString().default(__),b.jsondesc=toBoolean(_$(b.jsondesc,"jsondesc").default("false")),isDef(b.insecure)&&toBoolean(b.insecure)&&
ow.loadJava().setIgnoreSSLDomains(),isDef(b.file)){if(0>b.file.indexOf("::")&&!io.fileExists(b.file)&&k(-1,"ERROR: File not found: '"+b.file+"'"),!O.has(b.type))if("json"==b.type||isUnDef(b.type))if(b.jsondesc){var a=new Set;io.readStreamJSON(b.file,d=>{d=d.substring(2);isDef(b.jsonprefix)?d.startsWith(b.jsonprefix)&&a.add(d):a.add(d);return!1});w=stringify(Array.from(a),__,"")}else if(isDef(b.jsonprefix)){var c=io.readStreamJSON(b.file,d=>d.substring(2).startsWith(b.jsonprefix));w=stringify(c,__,
"")}else w=io.readFileString(b.file,S),toBoolean(b._shebang)&&(w=w.replace(/^#!.*\n/,""));else w=io.readFileString(b.file,S),toBoolean(b._shebang)&&(w=w.replace(/^#!.*\n/,""))}else if(b.jsondesc&&k(-1,"ERROR: jsondesc only available for file input."),b.jsonprefix&&k(-1,"ERROR: jsonprefix only available for file input."),isDef(b.cmd))w=C(b.cmd,!0);else if(isString(b.data))w=b.data;else if(isDef(b.url)){b.urlmethod=_$(b.urlmethod,"urlmethod").isString().default("GET");c=v(_$(b.urlparams).isString().default("{}"));
let d;isDef(b.urldata)&&(d=v(b.urldata));switch(b.urlmethod.toLowerCase()){case "post":w=$rest(c).post(b.url,d);break;case "put":w=$rest(c).put(b.url,d);break;case "delete":w=$rest(c).delete(b.url,d);break;default:w=$rest(c).get(b.url)}isObject(w)&&(w=stringify(w,__,""))}else"pm"!=b.input&&(w=[],io.pipeLn(d=>{try{isDef(P[b.type])?P[b.type](N(d),clone(B))&&w.push(d):w.push(d)}catch(g){printErr("ERROR: "+g)}return!1}),w=w.join("\n"));M||(isUnDef(b.type)&&(isDef(b.file)&&(c=b.file.substring(b.file.lastIndexOf(".")),
L.has(c)&&(b.type=L.get(c))),isUnDef(b.type)&&(c=w.trim(),c.startsWith("{")||c.startsWith("[")?b.type="json":c.startsWith("(")?b.type="slon":c.startsWith("<")?b.type="xml":isString(c)&&0<c.length?1<c.substring(0,c.indexOf("\n")).split(",").length?b.type="csv":c.substring(0,0<c.indexOf(": "))&&(b.type="yaml"):k(-1,"Please provide the input type."))),isDef(b.type)&&G.has(b.type)?G.get(b.type)(w,B):(isString(b.type)&&printErr("WARN: "+b.type+" input type not supported. Using json."),G.get("json")(w,
B)),delete b.__origr)};isDef(b["-debug"])&&printErr("DEBUG: "+colorify(b));if(isNumber(b.loop))for(;;)toBoolean(b.loopcls)&&isDef(b.outfile)&&(global.__oafp_streams[b.outfile].close(),global.__oafp_streams[b.outfile]=io.writeFileStream(b.outfile,toBoolean(b.outfileappend))),z(),sleep(1E3*b.loop,!0);else z();isDef(global.__oafp_streams)&&Object.keys(global.__oafp_streams).forEach(a=>global.__oafp_streams[a].s.close())}};oafp(_params);
