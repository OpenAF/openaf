var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20240217, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("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")))};

const oafp=b=>{if(!isUnDef(b)&&!isDef(b.____ojob)){var B=a=>{for(var c=Object.keys(u),d=0;d<c.length;d++){var f=c[d];isDef(b[f])&&(a=u[f](a))}return a},y=(a,c)=>{if(isString(a))return B(a);c.__path&&(a=$path(a,c.__path.trim()),delete c.__path);c.__from&&(a=$from(a).query(af.fromNLinq(c.__from.trim())),delete c.__from);c.__sql&&(a=$sql(a,c.__sql.trim()),delete c.__sql);return a=B(a)},g=(a,c,d)=>{a=isString(a)?a.trim().startsWith("{")&&a.trim().endsWith("}")?y(jsonParse(a,__,__,!0),c):y(a,c):d?y([a],
c)[0]:y(a,c);isDef(b.outputkey)&&(a=$$({}).set(b.outputkey,a));printErrnl("\r"+" ".repeat(_$(void 0).default("(processing data...)").length)+"\r");z.has(c.__format)?z.get(c.__format)(a,c):$o(a,c)},r=(a,c)=>{var d=af.fromString2Bytes(""),f=af.newOutputStream();$sh(a).cb((e,h,k)=>{ioStreamCopy(f,e);e=f.toByteArray();0<e.length&&(d=e)}).get();return c?af.fromBytes2String(d):d},l=(a,c)=>{isUnDef(c)&&(c="exit: "+a);if(isUnDef(ow.oJob)&&!toBoolean(b.noexit))0!=a&&printErr(c),exit(a);else throw c;},t=()=>
{__initializeCon();b.help=_$(b.help,"help").isString().default("");switch(b.help.toLowerCase()){case "filters":var a="docs/FILTERS.md";break;case "template":a="docs/TEMPLATE.md";break;case "examples":a="docs/EXAMPLES.md";break;default:a="docs/USAGE.md"}var c=(getOPackPath("oafproc")||".")+"/"+a;io.fileExists(c)?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c))):print(ow.format.withMD(io.readFileString(c)))):
isDef(global._oafphelp)&&isDef(global._oafphelp[a])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[a])):print(ow.format.withMD(global._oafphelp[a]))):print("Check https://github.com/OpenAF/oafp/blob/master/src/"+a);l(0)},m=()=>{var a=(getOPackPath("oafproc")||".")+"/.package.yaml";a={oafp:{version:io.fileExists(a)?io.readFileYAML(a).version:"(not available)",inputs:Array.from(v.keys()).filter(c=>
"?"!=c).sort(),transforms:Object.keys(u).filter(c=>"transforms"!=c).sort(),outputs:Array.from(z.keys()).filter(c=>"?"!=c).sort()},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},
os:{name:String(java.lang.System.getProperty("os.name")),version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};
return stringify(a,__,"")};ow.loadFormat();(""==b["-h"]||isString(b.help)&&0<b.help.length)&&t();b.format=b.output||b.format||b.out;b.type=b.input||b.type||b.in;b.out=b.format;b.output=b.format;b.in=b.type;b.input=b.type;if(isUnDef(b.file)&&isUnDef(b.cmd)){t=__;for(var w in b)if(""===b[w]){t=w;break}b.file=t}w=new Map([[".json","json"],[".ndjson","ndjson"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"]]);t=new Set(["csv","ndjson"]);
var E={lines:(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));if(!b.linesjoin&&isString(a))0!=a.trim().length&&(0<a.trim().length&&(a=a.trim().split(/\r?\n/)),g(a,c,!0)),A=!0;else return!0},ndjson:(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(b.ndjsonjoin)return!0;isUnDef(global.__ndjsonbuf)&&0!=a.length&&a.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=
a.length&&!a.trim().endsWith("}")){global.__ndjsonbuf+=a.trim();return}0<global.__ndjsonbuf.length&&(a=global.__ndjsonbuf+a,global.__ndjsonbuf=__)}0==a.length||0<a.length&&"{"!=a.trim().substring(0,1)?(g(jsonParse(global.__ndjsonbuf,__,__,!0),c,!0),A=!0,global.__ndjsonbuf=__):(g(jsonParse(a,__,__,!0),c,!0),A=!0)}},u={transforms:a=>{if(toBoolean(b.transforms))return Object.keys(u).filter(c=>"transforms"!=c).sort()},jsonschemagen:a=>{if(toBoolean(b.jsonschemagen))return ow.loadObj(),ow.obj.schemaGenerator(a)},
jsonschemacmd:a=>u.jsonschema(a),jsonschema:a=>{isMap(a)||l(-1,"jsonschema is only supported with a map.");isUnDef(b.jsonschema)&&isUnDef(b.jsonschemacmd)&&l(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var c;if(isDef(b.jsonschemacmd)){var d=$sh(b.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:l(-1,"Error executing the command '"+b.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(b.jsonschema);isMap(c)||l(-1,"The schema provided is not a valid JSON schema.");
ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(a),errors:c.errors}},sortmapkeys:a=>{if(toBoolean(b.sortmapkeys)&&isObject(a)){let c=(d,f)=>{let e=Object.keys(d).sort(),h={};for(let k=0;k<e.length;k++){let n=e[k],q=d[n];Array.isArray(q)?h[n]=q.map(x=>"object"===typeof x&&null!==x&&void 0!==x?sortMapKeys(x,f):x):h[n]=f&&"object"===typeof q&&null!==q&&void 0!==q?c(q,f):q}return h};return c(a,!0)}return a},searchkeys:a=>isObject(a)?searchKeys(a,b.searchkeys):a,searchvalues:a=>
isObject(a)?searchValues(a,b.searchvalues):a,maptoarray:a=>toBoolean(b.maptoarray)&&isMap(a)?$m4a(a,b.maptoarraykey):a,arraytomap:a=>toBoolean(b.arraytomap)&&isArray(a)?$a4m(a,b.arraytomapkey,toBoolean(b.arraytomapkeepkey)):a,flatmap:a=>toBoolean(b.flatmap)&&isObject(a)?ow.loadObj().flatMap(a,b.flatmapkey):a,merge:a=>{if(toBoolean(b.merge)&&isArray(a)&&1<a.length){for(var c,d=0;d<a.length;d++)c=0==d?a[d]:merge(c,a[d]);return c}return a},correcttypes:a=>{toBoolean(b.correcttypes)&&isObject(a)&&traverse(a,
(c,d,f,e)=>{switch(descType(d)){case "number":isString(d)&&(e[c]=Number(d));break;case "string":"true"==d.trim().toLowerCase()||"false"==d.trim().toLowerCase()?e[c]=toBoolean(d):d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?e[c]=new Date(d):d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&(e[c]=new Date(d))}});return a},removenulls:a=>{toBoolean(b.removenulls)&&traverse(a,(c,d,f,e)=>{(isNull(d)||
isUnDef(d))&&delete e[c]});return a},removedups:a=>{if(toBoolean(b.removedups)){if(isArray(a)){var c=new Set,d=[];a.forEach(f=>{var e=f;isObject(f)&&(e=sortMapKeys(e));e=stringify(e,__,!0);c.has(e)||(c.add(e),d.push(f))});return d}l(-1,"removedups is only supported for arrays")}return a},sqlfilter:a=>{if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":__flags.SQL_QUERY_METHOD="nlinq";break;case "advanced":__flags.SQL_QUERY_METHOD="h2";break;default:__flags.SQL_QUERY_METHOD="auto"}return a},
llmprompt:a=>{if(isString(b.llmprompt)){b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);var c=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system","envs").get(b.llmenv)),d="json",f=!0;isString(b.input)&&("md"==b.input&&(d="markdown",f=!1),"mdtable"==b.input&&(d="markdown table",f=!1),"hsperf"==b.input&&(d="java hsperf file"),"raw"==b.input&&(d="raw",f=!1));c=c.withContext(f?stringify(a,__,!0):a,isDef(b.llmcontext)?b.llmcontext:
`${d} input data`);return!isString(b.output)||"md"!=b.output&&"mdtable"!=b.output&&"raw"!=b.output?c=c.promptJSON(b.llmprompt):c=c.prompt(b.llmprompt)}return a},splitlines:a=>toBoolean(b.splitlines)&&isString(a)?a.split(/\r?\n/):a},z=new Map([["?",(a,c)=>{a=Array.from(z.keys()).filter(d=>"?"!=d).sort();$o(a,c)}],["pm",(a,c)=>{$o(a,c)}],["key",(a,c)=>{$o(a,c)}],["ctable",(a,c)=>{$o(a,c)}],["stable",(a,c)=>{$o(a,c)}],["table",(a,c)=>{$o(a,c)}],["log",(a,c)=>{isString(a)&&toBoolean(b.logprintall)?print(a.replace(/\n$/,
"")):(c=a,isMap(a)&&(c=[a]),isArray(c)&&c.forEach(d=>{if(isMap(d)){let f=isDef(d["@timestamp"])?d["@timestamp"]:__,e=isDef(d.level)?d.level:__;d=isDef(d.message)?d.message:__;isDef(f)&&24<f.length&&(f=f.substring(0,23)+"Z");(isDef(d)||isDef(f))&&print(ansiColor("BOLD",f)+(isDef(e)?" | "+e:"")+" | "+d)}}))}],["raw",(a,c)=>{isString(a)?print(a):sprint(a)}],["ini",(a,c)=>{isString(a)||(ow.loadJava(),c=new ow.java.ini,print(c.put(a).save()))}],["mdyaml",(a,c)=>{isArray(a)?a.forEach((d,f)=>{$o(d,merge(c,
{__format:"yaml"}));f<a.length-1&&print("---\n")}):$o(a,merge(c,{__format:"yaml"}))}],["mdtable",(a,c)=>{isArray(a)&&(ow.loadTemplate(),print(ow.template.md.table(a)))}],["template",(a,c)=>{isString(a)||(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(b.template)&&l(-1,"For output=handlebars you need to provide a template=someFile.hbs"),tprint(io.readFileString(b.template),a))}],["openmetrics",(a,c)=>{isString(a)||(ow.loadMetrics(),
a=ow.metrics.fromObj2OpenMetrics(a,b.metricsprefix,b.metricstimestamp),a=a.split("\n").map(d=>{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).join("\n"),$o(a,c))}],["pjson",(a,c)=>{c.__format="prettyjson";$o(a,c)}],["base64",(a,c)=>{a=isString(a)?a:stringify(a);toBoolean(b.base64gzip)?print(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a))))):print(af.fromBytes2String(af.toBase64Bytes(a)))}],
["sql",(a,c)=>{(!isArray(a)||1>a.length)&&l(-1,"sql is only supported for filled arrays/lists");b.sqltable=_$(b.sqltable,"sqltable").isString().default("data");b.sqlicase=toBoolean(_$(b.sqlicase,"sqlicase").isString().default("false"));b.sqlnocreate=toBoolean(_$(b.sqlnocreate,"sqlnocreate").isString().default("false"));ow.loadObj();b.sqlnocreate||print(ow.obj.fromObj2DBTableCreate(b.sqltable,a,__,!b.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(a[0]));var f=b.sqlicase?d.join(",").toUpperCase():
'"'+d.join('", "')+'"';print(a.map(e=>{var h=ow.obj.flatMap(e);e=[];for(var k in d)e.push(h[d[k]]);k=d.map(n=>{n=h[n];isString(n)&&(n="'"+n.replace(/'/g,"''")+"'");isNull(n)&&(n="null");return n});return"INSERT INTO "+(b.sqlicase?b.sqltable:'"'+b.sqltable+'"')+" ("+f+") VALUES ("+k.join(",")+");"}).join("\n"))}],["xls",(a,c)=>{if(!isString(a)){try{includeOPack("plugin-XLS")}catch(h){l(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");
if(isMap(a)){ow.loadObj();var d=ow.obj.flatMap(a);var f=Object.keys(d).map(h=>({key:h,value:d[h]}))}isArray(a)&&(f=a);traverse(f,(h,k,n,q)=>{isString(k)&&k.startsWith("=")&&(q[h]="'"+k)});a=!1;c=b.xlsfile;isUnDef(b.xlsfile)&&(a=!0,b.xlsfile=io.createTempFile("oafp",".xlsx"));c=new XLS(isDef(c)&&io.fileExists(c)?c:__);var e=c.getSheet(_$(b.xlssheet,"xlssheet").isString().default("data"));b.xlsformat=_$(b.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');
b.xlsformat.trim().startsWith("{")&&(b.xlsformat=jsonParse(b.xlsformat,!0));b.xlsformat.trim().startsWith("(")&&(b.xlsformat=af.fromSLON(b.xlsformat));ow.format.xls.setTable(c,e,"A",1,f,__,b.xlsformat);c.writeFile(b.xlsfile);c.close();b.xlsopenwait=_$(b.xlsopenwait,"xlsopenwait").isNumber().default(5E3);b.xlsopen=toBoolean(_$(b.xlsopen,"xlsopen").isString().default("true"));b.xlsopen&&(ow.format.isWindows()?($sh("start "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&
($sh("open "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)))}}]]),v=new Map([["?",(a,c)=>{a=Array.from(v.keys()).filter(d=>"?"!=d).sort();g(a,c)}],["pm",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));isDef(__pm._map)&&(a=__pm._map);isDef(__pm._list)&&(a=__pm._list);g(a,c)}],["jsonschema",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));a=jsonParse(a,__,__,!0);isMap(a)||l(-1,"jsonschema is only supported with a map.");ow.loadObj();a=ow.obj.schemaSampleGenerator(a);g(a,
c)}],["yaml",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));a=af.fromYAML(a);g(a,c)}],["xml",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));b.xmlignored=_$(b.xmlignored,"xmlignored").isString().default(__);b.xmlprefix=_$(b.xmlprefix,"xmlprefix").isString().default(__);b.xmlfiltertag=toBoolean(_$(b.xmlfiltertag,"xmlfiltertag").isString().default(__));0<=a.indexOf("<?xml")&&(a=a.substring(a.indexOf("?>")+2).trim());0<=a.indexOf("<!DOCTYPE")&&(a=a.substring(a.indexOf(">")+
1).trim());a=af.fromXML2Obj(a,b.xmlignored,b.xmlprefix,!b.xmlfiltertag);g(a,c)}],["lines",(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));printErrnl(_$(void 0).default("(processing data...)"));b.linesjoin?(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=r(b.cmd,!0)),a=a.split(/\r?\n/),g(a,c)):(a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(r(b.cmd)):af.fromString2InputStream(a),
ioStreamReadLines(a,d=>{g(d,clone(c),!0)}),a.close())}],["ndjson",(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));printErrnl(_$(void 0).default("(processing data...)"));global.__ndjsonbuf=__;var d=(e,h)=>{isUnDef(global.__ndjsonbuf)&&0!=e.length&&e.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=e.length&&!e.trim().endsWith("}")){global.__ndjsonbuf+=e.trim();return}0<global.__ndjsonbuf.length&&(e=global.__ndjsonbuf+
e,global.__ndjsonbuf=__)}0==e.length||0<e.length&&"{"!=e.trim().substring(0,1)?(h(e),global.__ndjsonbuf=__):h(e)},f=e=>{var h=[];e.split("\n").filter(k=>0<k.length).forEach(k=>d(k,n=>h.push(jsonParse(n,__,__,toBoolean(b.ndjsonfilter)))));return h};b.ndjsonjoin?(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=r(b.cmd,!0)),g(f(a),c)):(a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(r(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,
e=>{d(e,h=>g(jsonParse(h,__,__,!0),clone(c),!0))}),a.close())}],["md",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));__conConsole=__ansiColorFlag=!0;isUnDef(b.format)&&isUnDef(c.__format)&&(b.format="md",c.__format="md");g(a,c)}],["mdtable",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));ow.loadTemplate();a=ow.template.md.fromTable(a);g(a,c)}],["raw",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));g(a,c)}],["ini",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));
ow.loadJava();var d=new ow.java.ini;a=isDef(b.file)?d.loadFile(b.file).get():d.load(a).get();g(a,c)}],["sql",(a,c)=>{isString(a)?g(af.fromSQL(a).ast,c):g(a,c)}],["xls",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));try{includeOPack("plugin-XLS")}catch(f){l(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}b.xlssheet=_$(b.xlssheet,"xlssheet").isString().default(0);b.xlsevalformulas=toBoolean(_$(b.xlsevalformulas,"xlsevalformulas").isString().default(!0));
b.xlscol=_$(b.xlscol,"xlscol").isString().default("A");b.xlsrow=_$(b.xlsrow,"xlsrow").isString().default(1);plugin("XLS");if(isDef(b.file)||isDef(b.cmd)){a=new XLS(isDef(b.cmd)?r(b.cmd):b.file);var d=a.getSheet(b.xlssheet);d=a.getTable(d,b.xlsevalformulas,b.xlscol,b.xlsrow);a.close();isDef(d)&&isMap(d)&&(d=d.table);g(d,c)}else l(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],["csv",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));if(isDef(b.file)||
isDef(b.cmd)){var d=isDef(b.cmd)?af.fromBytes2InputStream(r(b.cmd)):io.readFileStream(b.file);a=$csv(b.inputcsv).fromInStream(d).toOutArray();d.close()}else a=$csv(b.inputcsv).fromInString(a).toOutArray();g(a,c)}],["hsperf",(a,c)=>{if(isDef(b.file)||isDef(b.cmd)){printErrnl(_$(void 0).default("(processing data...)"));ow.loadJava();var d=isDef(b.cmd)?ow.java.parseHSPerf(r(b.cmd)):ow.java.parseHSPerf(b.file);d.__ts=new Date;var f=0,e=0;d.sun.gc.generation.forEach(h=>{h.space.forEach(k=>{e+=Number(k.used);
f=isNumber(k.capacity)?f+Number(k.capacity):f;d.sun.gc["__percUsed_"+k.name]=100*k.used/k.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;a=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);d.sun.gc.__ygc=isDef(a)?Number(a.invocations):0;d.sun.gc.__ygct=isDef(a)?Number(a.time/1E9):0;a=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name",
"").at(0);d.sun.gc.__fgc=isDef(a)?Number(a.invocations):0;d.sun.gc.__fgct=isDef(a)?Number(a.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/1E9;d.java.__mem={total:f,used:e,free:f-e,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-d.sun.gc.metaspace.used};g(d,c)}else l(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["base64",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));
a=toBoolean(b.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(a,!0))):af.fromBytes2String(af.fromBase64(a));g(a,c)}],["llm",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&l(-1,"llmoptions not defined and "+b.llmenv+" not found.");printErrnl(_$(void 0).default("(processing data...)"));var d=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system","envs").get(b.llmenv));
d="md"==b.output||"mdtable"==b.output||"raw"==b.output?d.prompt(a):d.promptJSON(a);g(jsonParse(d,__,__,isString(d)),c)}],["json",(a,c)=>{printErrnl(_$(void 0).default("(processing data...)"));g(jsonParse(a,__,__,isString(a)),c)}]]);b.format=_$(b.format,"format").isString().default(__);__initializeCon();String(java.lang.System.getProperty("os.name")).match(/Windows/)||__con.getTerminal().settings.set("sane");var C={__format:b.format,__from:b.from,__sql:b.sql,__path:b.path,__csv:b.csv,__pause:b.pause,
__key:b.__key};isDef(b.inputcsv)&&(b.inputcsv=b.inputcsv.trim().startsWith("{")?jsonParse(b.inputcsv,!0):af.fromSLON(b.inputcsv));isDef(b.csv)&&(b.csv=b.csv.trim().startsWith("{")?jsonParse(b.csv,!0):af.fromSLON(b.csv));var F=!1;if(""==b["-v"]||isString(b.version)&&0<b.version.length)F=!0,m();var p="",A=!1;if(F)p=m();else if(b.jsonprefix=_$(b.jsonprefix,"jsonprefix").isString().default(__),b.jsondesc=toBoolean(_$(b.jsondesc,"jsondesc").isString().default("false")),isDef(b.file)){if(io.fileExists(b.file)||
l(-1,"ERROR: File not found: '"+b.file+"'"),!t.has(b.type))if("json"==b.type||isUnDef(b.type))if(b.jsondesc){var D=new Set;io.readStreamJSON(b.file,a=>{a=a.substring(2);isDef(b.jsonprefix)?a.startsWith(b.jsonprefix)&&D.add(a):D.add(a);return!1});p=stringify(Array.from(D),__,"")}else isDef(b.jsonprefix)?(m=io.readStreamJSON(b.file,a=>a.substring(2).startsWith(b.jsonprefix)),p=stringify(m,__,"")):p=io.readFileString(b.file);else p=io.readFileString(b.file)}else b.jsondesc&&l(-1,"ERROR: jsondesc only available for file input."),
b.jsonprefix&&l(-1,"ERROR: jsonprefix only available for file input."),isDef(b.cmd)?p=r(b.cmd,!0):"pm"!=b.input&&(p=[],io.pipeLn(a=>{isDef(E[b.type])?E[b.type](B(a),clone(C))&&p.push(a):p.push(a);return!1}),p=p.join("\n"));A||(isUnDef(b.type)&&(isDef(b.file)&&(m=b.file.substring(b.file.lastIndexOf(".")),w.has(m)&&(b.type=w.get(m))),isUnDef(b.type)&&(m=p.trim(),m.startsWith("{")||m.startsWith("[")?b.type="json":m.startsWith("<")?b.type="xml":isString(m)&&0<m.length?1<m.substring(0,m.indexOf("\n")).split(",").length?
b.type="csv":m.substring(0,0<m.indexOf(": "))&&(b.type="yaml"):l(-1,"Please provide the input type."))),isDef(v.has(b.type))?v.get(b.type)(p,C):(printErr("WARN: "+b.type+" input type not supported. Using json."),v.get("json")(p,C)))}};oafp(params);
