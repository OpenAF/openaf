var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20250306, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64(""))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("")))};
var _params=processExpr(" ");
const oafp=b=>{if(!isUnDef(b)&&!isDef(b.____ojob)){isDef($sec().procMap)&&(b=$sec().procMap(b));var P=a=>{for(var c=Object.keys(G),d=0;d<c.length;d++){var h=c[d];isDef(b[h])&&(a=G[h](a))}return a},L=(a,c)=>{b.__origr=a;c.__ifrom&&(a=$from(a).query(af.fromNLinq(c.__ifrom.trim())),delete c.__ifrom);if(c.__isql){var d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}if(isArray(a)&&0<a.length)if(isString(b.isqlfiltertables)){var h=$sql();
d=v(b.isqlfiltertables);isArray(d)&&(d.forEach(g=>{isUnDef(g.table)&&l(-1,"One 'table' not defined in isqlfiltertables");g.path=_$(g.path,"isqlfiltertables table "+g.table+" path").isString().default("@");var e=$path(a,g.path);isArray(e)&&(h=h.table(g.table,e))}),a=h.closeQuery(c.__isql.trim()))}else a=$sql(a,c.__isql.trim(),d);delete c.__isql}c.__path&&(a=$path(a,c.__path.trim()),delete c.__path);if(isString(a))return P(a);a=P(a);c.__from&&(a=$from(a).query(af.fromNLinq(c.__from.trim())),delete c.__from);
if(c.__sql){d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(a)&&0<a.length&&(isString(b.sqlfiltertables)?(h=$sql(),d=v(b.sqlfiltertables),isArray(d)&&(d.forEach(g=>{isUnDef(g.table)&&l(-1,"One 'table' not defined in sqlfiltertables");g.path=_$(g.path,"sqlfiltertables table "+g.table+" path").isString().default("@");var e=$path(a,g.path);isArray(e)&&(h=h.table(g.table,e))}),a=h.closeQuery(c.__sql.trim()))):
a=$sql(a,c.__sql.trim(),d));delete c.__sql}c.__opath&&(a=$path(a,c.__opath.trim()),delete c.__opath);return a},n=(a,c,d)=>{c=clone(c);toBoolean(b.color)?__conConsole=!0:isDef(b.color)&&(__conAnsi=!1);if(!isString(a))a=d?L([a],c)[0]:L(a,c);else if(isDef(b.in)&&"raw"!=b.in||isUnDef(b.in))d=a.trim(),a=d.startsWith("{")&&d.endsWith("}")||d.startsWith("[")&&d.endsWith("]")&&/^\[\s*\{/.test(d)?L(jsonParse(a,__,__,!0),c):L(a,c);isDef(b.outputkey)&&(a=$$({}).set(b.outputkey,a));isDef(b.outkey)&&(a=$$({}).set(b.outkey,
a));M();isUnDef(c.__format)&&(c.__format=getEnvsDef("OAFP_OUTPUT",c.__format,"mtree"));J.has(c.__format)?J.get(c.__format)(a,c):w(a,c,__)},B=(a,c)=>{var d=af.fromString2Bytes(""),h=af.newOutputStream();$sh(a).cb((g,e,f)=>{ioStreamCopy(h,g);g=h.toByteArray();0<g.length&&(d=g)}).get();return c?af.fromBytes2String(d):d},v=(a,c)=>{if("[object Object]"==Object.prototype.toString.call(a)||Array.isArray(a))return a;if(!isString(a)||""==a||isNull(a))return"";a=a.trim();var d;isDef(af.fromJSSLON)&&(d=af.fromJSSLON(a));
isUnDef(d)?d=a.startsWith("{")?jsonParse(a,__,__,!0):af.fromSLON(a):isString(d)&&c&&(d=af.fromYAML(d));return d},N=(a,c,d,h)=>{d=_$(d).isString().default("_oafp_fn_");c=splitBySepWithEnc(c," ",[['"','"'],["'","'"]]);let g=[];$ch("__oaf::chart").create();if(1<c.length){for(let e=0;e<c.length;e++)if(0==e)g.push(c[e]);else{let f=splitBySepWithEnc(c[e],":",[['"','"'],["'","'"]]).map((k,m)=>{if(0==m){if(k.startsWith("-"))return k;global[d+e]=()=>{if(isString(h)){var r=$ch("__oaf::chart").get({name:h});
r=isUnDef(r)?[]:r.data;var u=$path(a,k);if(isArray(u))return u.forEach((x,A)=>{isArray(r[A])?r[A].push(x):r[A]=[x]}),u=r.pop(),$ch("__oaf::chart").set({name:h},{name:h,data:r}),u[0]}else return $path(a,k)};return d+e}return k}).join(":");g.push(f)}return g.join(" ")}return""},q=a=>{if("undefined"!==typeof a)if("undefined"===typeof b.outfile)if(toBoolean(b.loopcls)&&cls(),isDef(b.pipe)){var c=isMap(b.pipe)?b.pipe:v(b.pipe,!0);isMap(c)&&(c.data=a,oafp(c))}else print(a);else"undefined"===typeof global.__oafp_streams&&
(global.__oafp_streams={}),"undefined"!==typeof global.__oafp_streams[b.outfile]?(c=toBoolean(b.outfileappend))?ioStreamWrite(global.__oafp_streams[b.outfile].s,a+(c?"\n":"")):io.writeFileBytes(b.outfile,isString(a)?af.fromString2Bytes(a):a):io.writeFileBytes(b.outfile,isString(a)?af.fromString2Bytes(a):a)},w=(a,c,d)=>{"undefined"!==typeof a&&(a=$o(a,c,d,!0),isDef(a)&&q(a))},Q=(a,c)=>{a=_$(a).isMap().default({});return isDef(a.secKey)?(aMap=clone(a),aMap.secRepo=_$(aMap.secRepo).default(getEnv("OAFP_SECREPO")),
aMap.secBucket=_$(aMap.secBucket).default(getEnv("OAFP_SECBUCKET")),aMap.secPass=_$(aMap.secPass).default(getEnv("OAFP_SECPASS")),aMap.secMainPass=_$(aMap.secMainPass).default(getEnv("OAFP_SECMAINPASS")),aMap.secFile=_$(aMap.secFile).default(getEnv("OAFP_SECFILE")),a=$sec(aMap.secRepo,aMap.secBucket,aMap.secPass,aMap.secMainPass,aMap.secFile).get(aMap.secKey),delete aMap.secRepo,delete aMap.secBucket,delete aMap.secPass,delete aMap.secMainPass,delete aMap.secFile,delete aMap.secKey,isDef(c)?$$(aMap).set(c,
merge($$(aMap).get(c),a)):merge(aMap,a)):a},t=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||toBoolean(b.chartcls)||printErrnl(_$(a).default("(processing data...)"))},M=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||toBoolean(b.chartcls)||printErrnl("\r"+" ".repeat(_$(a).default("(processing data...)").length)+"\r")};if(0<=Object.keys(b).indexOf("-f")){let a=Object.keys(b).length;var D=Object.keys(b).indexOf("-f");a>D+1&&0<Object.keys(b)[D+1].length&&(b.paramsfile=Object.keys(b)[D+
1],delete b[b.paramsfile]);delete b["-f"]}if(isDef(b.paramsfile)){if("-"==b.paramsfile){var T=[];io.pipeLn(a=>{T.push(a);return!1});var H=T.join("\n")}else io.fileExists(b.paramsfile)&&(H=io.readFileString(b.paramsfile));isString(H)&&(_margs=v(H,!0),isMap(_margs)&&Object.keys(_margs).forEach(a=>{isUnDef(b[a])&&(b[a]=_margs[a])}))}Object.keys(b).forEach(a=>{if(0<b[a].length){var c=a.toLowerCase();a!=c&&isUnDef(b[c])&&(b[c]=b[a],delete b[a])}});var l=(a,c)=>{isUnDef(c)&&(c="exit: "+a);if(isUnDef(ow.oJob)&&
!toBoolean(b.noexit))0!=a&&printErr(c),exit(a);else throw c;};D=()=>{__initializeCon();b.help=_$(b.help,"help").isString().default("");switch(b.help.toLowerCase()){case "filters":var a="docs/FILTERS.md";break;case "template":a="docs/TEMPLATE.md";break;case "examples":a="docs/EXAMPLES.md";break;case "readme":case "usage":a="docs/USAGE.md";break;default:a=b.help.toLowerCase(),a=isDef(E[a])?"docs/"+a+".md":"docs/USAGE.md"}var c=(getOPackPath("oafproc")||".")+"/"+a;let d="";if("docs/USAGE.md"==a&&0<Object.keys(E).length){d=
"\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let h in E)d+="| "+h+" | help="+h+" |\n"}isDef(c)&&io.fileExists(c)?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c)+d)):q(isDef(b.out)&&"raw"==b.out?io.readFileString(c)+d:ow.format.withMD(io.readFileString(c)+d))):isDef(global._oafphelp)&&isDef(global._oafphelp[a])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&
toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[a]+d)):q(isDef(b.out)&&"raw"==b.out?global._oafphelp[a]+d:ow.format.withMD(global._oafphelp[a]+d))):isString(E[b.help])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(E[b.help])):q(isDef(b.out)&&"raw"==b.out?E[b.help]:ow.format.withMD(E[b.help]))):q("Check https://github.com/OpenAF/oafp/blob/master/src/"+a);l(0)};var U=()=>{var a=
(getOPackPath("oafproc")||".")+"/.package.yaml";a={oafp:{version:io.fileExists(a)?io.readFileYAML(a).version:"(not available/embedded)",inputs:Array.from(I.keys()).filter(c=>"?"!=c).sort(),transforms:Object.keys(G).filter(c=>"transforms"!=c).sort(),outputs:Array.from(J.keys()).filter(c=>"?"!=c).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",version:""})},
java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},os:{name:String(java.lang.System.getProperty("os.name")),version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},
store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};return stringify(a,__,"")};ow.loadFormat();b.format=b.output||b.format||b.out;b.type=b.input||b.type||b.in;b.out=b.format;b.output=b.format;b.in=b.type;b.input=b.type;if("undefined"==typeof b.file&&"undefined"==typeof b.cmd&&"undefined"==typeof b.data&&"undefined"==typeof b.url){H=
__;for(var z in b)if("undefined"==typeof H&&""===b[z]&&"-debug"!=z&&"-v"!=z&&"-examples"!=z){H=z;break}b.file=H}b.debug=toBoolean(b.debug);isDef(b["-debug"])&&(b.debug=!0);if("[object Object]"==Object.prototype.toString.call(b.data)||Array.isArray(b.data))b.data=stringify(b.data,__,"");var O=new Map([[".json","json"],[".ndjson","ndjson"],[".ndslon","ndslon"],[".slon","slon"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"],[".toml",
"toml"],[".jwt","jwt"]]),R=new Set(["csv","ndjson","ndslon"]),S={lines:(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));if(!b.linesjoin&&isString(a))0!=a.trim().length&&(0<a.trim().length&&(a=a.trim().split(/\r?\n/)),n(a,c,!0)),K=!0;else return!0},javagc:(a,c)=>{isBoolean(b.javagcjoin)||(b.javagcjoin=toBoolean(_$(b.javagcjoin,"javagcjoin").isString().default(__)));if(b.javagcjoin)return!0;if(isUnDef(global.__javagc_buffer)||1048576<global.__javagc_buffer.length)global.__javagc_buffer=
"";ow.loadFormat();global.__javagc_buffer+=a;a=(d=>{try{let h=[/([^ ]+) (\d+\.\d+): \[GC \((.*?)\)(.+?)\[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/s,/([^ ]+) (\d+\.\d+): \[GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), (\d+\.\d+) secs\]/,/([^ ]+) (\d+\.\d+): \[Full GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] \[ParOldGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), \[Metaspace: (\d+K)->(\d+K)\(.*?\)\], (\d+\.\d+) secs\]/,
/([^ ]+) (\d+\.\d+): \[GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/,/([^ ]+) (\d+\.\d+): \[Full GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] \[ParOldGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), \[Metaspace: (\d+K)->(\d+K)\(.*?\)\], (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/,/^\[(.+)\]\s+GC\((\d+)\)\s*(.*?)\s*(\d+[GMK])->(\d+[GMK])\((\d+[GMK])\)\s*(\d+\.\d+)ms/,
/^\[(.+)\]\s+GC\((\d+)\)\s*(.*?)\s*Metaspace:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)\s*NonClass:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)\s*Class:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)/,/^\[(.+)\]\s+GC\((\d+)\)\s*(Allocation Failure)\s*(.*?)\s+(\d+[KMGT])->(\d+[KMGT])\((\d+[KMGT])\)\s+(\d+\.\d+)ms/];for(let g=0;g<h.length;g++){let e=d.match(h[g]);if(e){let f={};d.startsWith("[")?(e[1].split("][").forEach(k=>{k.match(/^\d+\.\d+s$/)?f.sinceStart=parseFloat(k.replace(/s$/,
"")):k.match(/\d{4}-\d{2}-\d{2}T/)&&(f.timestamp=ow.format.toDate(k,"yyyy-MM-dd'T'HH:mm:ss.SSSZ"))}),f.gcId=parseInt(e[2]),f.gcType=e[3].trim(),""==f.gcType&&(f.gcType="none"),f.durationSecs=parseFloat(e[e.length-1])/1E3,5===g?(f.heapBeforeGC=ow.format.fromBytesAbbreviation(e[4]+"B"),f.heapAfterGC=ow.format.fromBytesAbbreviation(e[5]+"B"),f.heapTotal=ow.format.fromBytesAbbreviation(e[6]+"B")):5<g&&(6==g?(f.metaUsedBeforeGC=ow.format.fromBytesAbbreviation(e[4]+"B"),f.metaTotalBeforeGC=ow.format.fromBytesAbbreviation(e[5]+
"B"),f.metaUsedAfterGC=ow.format.fromBytesAbbreviation(e[6]+"B"),f.metaTotalAfterGC=ow.format.fromBytesAbbreviation(e[7]+"B"),f.nonClassUsedBeforeGC=ow.format.fromBytesAbbreviation(e[8]+"B"),f.nonClassTotalBeforeGC=ow.format.fromBytesAbbreviation(e[9]+"B"),f.nonClassUsedAfterGC=ow.format.fromBytesAbbreviation(e[10]+"B"),f.nonClassTotalAfterGC=ow.format.fromBytesAbbreviation(e[11]+"B"),f.classUsedBeforeGC=ow.format.fromBytesAbbreviation(e[12]+"B"),f.classTotalBeforeGC=ow.format.fromBytesAbbreviation(e[13]+
"B"),f.classUsedAfterGC=ow.format.fromBytesAbbreviation(e[14]+"B"),f.classTotalAfterGC=ow.format.fromBytesAbbreviation(e[15]+"B")):(f.heapBeforeGC=ow.format.fromBytesAbbreviation(e[4]+"B"),f.heapAfterGC=ow.format.fromBytesAbbreviation(e[5]+"B"),f.heapTotal=ow.format.fromBytesAbbreviation(e[6]+"B")))):(f.timestamp=ow.format.toDate(e[1],"yyyy-MMdd'T'HH:mm:ss.SSSZ"),f.sinceStart=parseFloat(e[2]),f.gcType=e[3],f.durationSecs=parseFloat(e[e.length-1]),0===g||6===g?(f.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(e[4]+
"B"),f.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(e[5]+"B"),f.beforeGC=ow.format.fromBytesAbbreviation(e[6]+"B"),f.afterGC=ow.format.fromBytesAbbreviation(e[7]+"B"),6===g&&d.includes("Allocation Failure")&&(f.gcCause="Allocation Failure")):1===g||3===g?(f.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(e[4]+"B"),f.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(e[5]+"B"),f.ParOldGenBeforeGC=ow.format.fromBytesAbbreviation(e[6]+"B"),f.ParOldGenAfterGC=ow.format.fromBytesAbbreviation(e[7]+
"B"),f.beforeGC=ow.format.fromBytesAbbreviation(e[8]+"B"),f.afterGC=ow.format.fromBytesAbbreviation(e[9]+"B"),f.metaspaceBeforeGC=ow.format.fromBytesAbbreviation(e[10]+"B"),f.metaspaceAfterGC=ow.format.fromBytesAbbreviation(e[11]+"B")):2===g?(f.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(e[4]+"B"),f.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(e[5]+"B"),f.beforeGC=ow.format.fromBytesAbbreviation(e[6]+"B"),f.afterGC=ow.format.fromBytesAbbreviation(e[7]+"B"),f.userTime=parseFloat(e[8]),
f.sysTime=parseFloat(e[9]),f.realTime=parseFloat(e[10])):6===g&&(f.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(e[5]+"B"),f.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(e[6]+"B"),f.beforeGC=ow.format.fromBytesAbbreviation(e[7]+"B"),f.afterGC=ow.format.fromBytesAbbreviation(e[8]+"B"),f.durationSecs=parseFloat(e[9]),e[10]&&(f.userTime=parseFloat(e[10]),f.sysTime=parseFloat(e[11]),f.realTime=parseFloat(e[12])),f.gcCause="Allocation Failure"));return f}}}catch(h){printErr(h),l(-2,"Error parsing Java GC log: "+
h)}})(a);isMap(a)&&(n(a,c,!0),global.__javagc_buffer="")},ndjson:(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(b.ndjsonjoin)return!0;isUnDef(global.__ndjsonbuf)&&0!=a.length&&a.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=a.length&&!a.trim().endsWith("}")){global.__ndjsonbuf+=a.trim();return}0<global.__ndjsonbuf.length&&(a=global.__ndjsonbuf+a,global.__ndjsonbuf=__)}0==a.length||0<a.length&&
"{"!=a.trim().substring(0,1)?(n(jsonParse(global.__ndjsonbuf,__,__,!0),c,!0),K=!0,global.__ndjsonbuf=__):(n(jsonParse(a,__,__,!0),c,!0),K=!0)},ndslon:(a,c)=>{isBoolean(b.ndslonjoin)||(b.ndslonjoin=toBoolean(_$(b.ndslonjoin,"ndslonjoin").isString().default(__)));if(b.ndslonjoin)return!0;isUnDef(global.__ndslonbuf)&&0!=a.length&&a.trim().startsWith("(")&&(global.__ndslonbuf="");if(isDef(global.__ndslonbuf)){if(0!=a.length&&!a.trim().endsWith(")")){global.__ndslonbuf+=a.trim();return}0<global.__ndslonbuf.length&&
(a=global.__ndslonbuf+a,global.__ndslonbuf=__)}0==a.length||0<a.length&&"("!=a.trim().substring(0,1)?(n(af.fromSLON(global.__ndslonbuf),c,!0),K=!0,global.__ndslonbuf=__):(n(af.fromSLON(String(a)),c,!0),K=!0)}},G={transforms:a=>{if(toBoolean(b.transforms))return Object.keys(G).filter(c=>"transforms"!=c).sort()},cmlt:a=>{if(toBoolean(b.cmlt)){a=isArray(a)?a:[a];b.cmltch=_$(b.cmltch,"cmltch").default("(type: simple)");var c=v(b.cmltch);if(isMap(c))return isUnDef(c.type)&&l(-1,"cmltch.type is not defined."),
isDef(c.lib)&&loadLib(c.lib),0>$ch().list().indexOf("oafp::cmltdata")&&("remote"==c.type?$ch("oafp::cmltdata").createRemote(c.url):$ch("oafp::cmltdata").create(c.type,c.options),c=Number(_$(b.cmltsize,"cmltsize").isNumber().default(100))-1,0<c&&$ch("oafp::cmltdata").subscribe(ow.ch.utils.getHousekeepSubscriber("oafp::cmltdata",c))),a.forEach(d=>$ch("oafp::cmltdata").set({t:nowNano()},d)),$ch("oafp::cmltdata").getAll();l(-1,"Invalid cmltch parameter")}},diff:a=>{var c=v(b.diff);if(isMap(c)){isDef(c.a)&&
isDef(c.b)||l(-1,"diff.a path and diff.b path are required.");loadDiff();let d=$path(a,c.a);a=$path(a,c.b);let h=__;toBoolean(b.color)&&(isUnDef(b.difftheme)&&isDef(getEnv("OAFP_DIFFTHEME"))&&(b.difftheme=getEnv("OAFP_DIFFTHEME")),h=v(_$(b.difftheme,"difftheme").isString().default("")),h=merge({added:"GREEN",removed:"RED",common:"FAINT",linenum:"ITALIC",linediv:"FAINT",linesep:"|"},h));let g=(e,f)=>{if(toBoolean(b.color)){isUnDef(f)&&(f="");var k=new Set;if(isArray(e)){let m=1,r=toBoolean(b.diffnlines),
u=0;r&&(e.forEach(A=>{u+=A.value.split("\n").length}),u=String(u).length+1);let x=A=>{let p;p=r&&""!=f?ansiColor(h.linenum,0<A?$ft("% "+u+"d",m):" ".repeat(u))+ansiColor(h.linediv,`${h.linesep}`):"";m+=A;return p};e.forEach((A,p)=>{p=A.value;isString(p)&&(""!=f?(p=p.split(f),""==p[p.length-1]&&p.pop()):p=[p]);k.add(A.added?p.map(F=>x(1)+ansiColor(h.added,(""!=f?"+":"")+F)).join(ansiColor("RESET",f)):A.removed?p.map(F=>x(0)+ansiColor(h.removed,(""!=f?"-":"")+F)).join(ansiColor("RESET",f)):p.map(F=>
x(1)+ansiColor(h.common,(""!=f?" ":"")+F)).join(ansiColor("RESET",f)))})}return Array.from(k).join(ansiColor("RESET",f))}return $from(e).select({count:__,added:!1,removed:!1,value:[]})};return isString(d)&&isString(a)?toBoolean(b.diffwords)?g(JsDiff.diffWords(d,a,c.options)):toBoolean(b.diffwordswithspace)?g(JsDiff.diffWordsWithSpace(d,a,c.options)):toBoolean(b.difflines)?g(JsDiff.diffLines(d,a,c.options),"\n"):toBoolean(b.diffsentences)?g(JsDiff.diffSentences(d,a,c.options),"\n"):g(JsDiff.diffChars(d,
a,c.options)):isArray(d)&&isArray(a)&&!toBoolean(b.color)?g(JsDiff.diffArrays(d,a,c.options)):g(JsDiff.diffJson(d,a,c.options),"\n")}},jsonschemagen:a=>{if(toBoolean(b.jsonschemagen))return ow.loadObj(),ow.obj.schemaGenerator(a)},jsonschemacmd:a=>G.jsonschema(a),jsonschema:a=>{isMap(a)||l(-1,"jsonschema is only supported with a map.");isUnDef(b.jsonschema)&&isUnDef(b.jsonschemacmd)&&l(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var c;if(isDef(b.jsonschemacmd)){var d=
$sh(b.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:l(-1,"Error executing the command '"+b.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(b.jsonschema);isMap(c)||l(-1,"The schema provided is not a valid JSON schema.");ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(a),errors:c.errors}},sortmapkeys:a=>{if(toBoolean(b.sortmapkeys)&&isObject(a)){let c=(d,h)=>{let g=Object.keys(d).sort(),e={};for(let f=0;f<g.length;f++){let k=g[f],m=d[k];Array.isArray(m)?e[k]=m.map(r=>
"object"===typeof r&&null!==r&&void 0!==r?sortMapKeys(r,h):r):e[k]=h&&"object"===typeof m&&null!==m&&void 0!==m?c(m,h):m}return e};return c(a,!0)}return a},searchkeys:a=>isObject(a)?searchKeys(a,b.searchkeys):a,searchvalues:a=>isObject(a)?searchValues(a,b.searchvalues):a,maptoarray:a=>toBoolean(b.maptoarray)&&isMap(a)?$m4a(a,b.maptoarraykey):a,arraytomap:a=>toBoolean(b.arraytomap)&&isArray(a)?$a4m(a,b.arraytomapkey,toBoolean(b.arraytomapkeepkey)):a,flatmap:a=>toBoolean(b.flatmap)&&isObject(a)?ow.loadObj().flatMap(a,
b.flatmapsep):a,merge:a=>{if(toBoolean(b.merge)&&isArray(a)&&1<a.length){for(var c,d=0;d<a.length;d++)c=0==d?a[d]:merge(c,a[d]);return c}return a},correcttypes:a=>{toBoolean(b.correcttypes)&&isObject(a)&&(ow.loadFormat(),traverse(a,(c,d,h,g)=>{switch(descType(d)){case "number":isString(d)&&(g[c]=Number(d));break;case "string":if("true"==d.trim().toLowerCase()||"false"==d.trim().toLowerCase())g[c]=toBoolean(d);else{if(isDef(ow.format.fromISODate)){if(d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\d+Z$/)){g[c]=
ow.format.fromISODate(d);break}}else if(d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)){g[c]=new Date(d);break}d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?g[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?g[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&(g[c]=new Date(d))}}}));return a},removenulls:a=>{toBoolean(b.removenulls)&&traverse(a,(c,d,h,g)=>{(isNull(d)||isUnDef(d))&&delete g[c]});return a},removeempty:a=>toBoolean(b.removeempty)&&isArray(a)?a.filter(c=>isDef(c)&&!isNull(c)):a,trim:a=>
{toBoolean(b.trim)&&traverse(a,(c,d,h,g)=>{isString(d)&&(g[c]=d.trim())});return a},removedups:a=>{if(toBoolean(b.removedups)){if(isArray(a)){var c=new Set,d=[];a.forEach(h=>{var g=h;isObject(h)&&(g=sortMapKeys(g));g=stringify(g,__,!0);c.has(g)||(c.add(g),d.push(h))});return d}l(-1,"removedups is only supported for arrays")}return a},llmprompt:a=>{if(isString(b.llmprompt)){b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);
var c=$llm(Q(isDef(b.llmoptions)?b.llmoptions:$sec("system","envs").get(b.llmenv)));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&c.getGPT().setConversation(io.readFileJSON(b.llmconversation));var d="json",h=!0;isString(b.input)&&("md"==b.input&&(d="markdown",h=!1),"mdtable"==b.input&&(d="markdown table",h=!1),"hsperf"==b.input&&(d="java hsperf file"),"raw"==b.input&&(d="raw",h=!1));c=c.withContext(h?stringify(a,__,!0):a,isDef(b.llmcontext)?b.llmcontext:`${d} input data`);if(isString(b.output)&&
("md"==b.output||"mdtable"==b.output||"raw"==b.output))return a=c.prompt(b.llmprompt),isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),""),a;a=c.promptJSON(b.llmprompt);isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),"");return a}return a},splitlines:a=>toBoolean(b.splitlines)&&isString(a)?a.split(/\r?\n/):a,regression:a=>{if(isString(b.regression)){ow.loadAI();var c=ow.ai.regression(),d=_$(b.regressionpath,"regressionpath").isString().default("@");
let h=v(_$(b.regressionoptions,"regressionoptions").isString().default("{order:2,precision:5}"));d=$path(a,d);if(isArray(d)){if(isString(b.regressionx)){let e=$path(a,b.regressionx);d=d.map((f,k)=>[e[k],f])}else d=d.map((e,f)=>[f+1,e]);let g;switch(b.regression){case "exp":g=c.exponential(d,h);break;case "poly":g=c.polynomial(d,h);break;case "power":g=c.power(d,h);break;case "log":g=c.logarithmic(d,h);break;default:g=c.linear(d,h)}return isDef(g)&&isDef(g.points)?(isString(b.regressionforecast)&&
(a=$path(a,b.regressionforecast),isArray(a)?a.forEach(e=>{g.points.push(g.predict(e))}):l(-1,"Invalid array of x for regression forecast")),g.points.map(e=>({x:e[0],y:e[1]}))):g}l(-1,"Invalid data for regression analysis")}return a},normalize:a=>{if(isString(b.normalize)){var c=v(b.normalize);if(isMap(c)){ow.loadAI();if(isMap(a))return ow.ai.normalize.withSchema(a,c,!0);if(isArray(a))return a.map(d=>ow.ai.normalize.withSchema(d,c,!0))}else l(-1,"Invalid normalize schema")}else l(-1,"Invalid normalize schema")},
denormalize:a=>{if(isString(b.denormalize)){var c=v(b.denormalize);if(isMap(c)){ow.loadAI();isUnDef(ow.ai.normalize.denormalizeWithSchema)&&l(-1,"This version of OpenAF does not support denormalizeWithSchema");if(isMap(a))return ow.ai.normalize.denormalizeWithSchema(a,c,!1);if(isArray(a))return a.map(d=>ow.ai.normalize.denormalizeWithSchema(d,c,!1))}else l(-1,"Invalid denormalize schema")}else l(-1,"Invalid denormalize schema")},kmeans:a=>{isNumber(b.kmeans)||(b.kmeans=5);isArray(a)||l(-1,"For kmeans transform you need to provide an array as input");
ow.loadAI();return ow.ai.cluster({type:"kmeans",numberOfClusters:Number(b.kmeans)}).classify(a)},getlist:a=>{if(isObject(a)&&(toBoolean(b.getlist)||isNumber(b.getlist))){var c=!1,d,h=isNumber(b.getlist)?b.getlist:1;traverse(a,(g,e,f,k)=>{!c&&isArray(e)&&(h--,0==h&&(c=!0),d=e)});return c?d:a}},set:a=>{var c=v(b.set);!isMap(c)&&isUnDef(c.a)&&isUnDef(c.b)&&l(-1,"set.a path and set.b path are required.");isUnDef(pForEach)&&l(-1,"This version of OpenAF does not support the set transform");isString(c.a)||
l(-1,"set.a path is not a string.");isString(c.b)||l(-1,"set.b path is not a string.");let d=$path(a,c.a);a=$path(a,c.b);isArray(d)||l(-1,"set.a path result is not an array.");isArray(a)||l(-1,"set.b path result is not an array.");let h;if(isString(b.setkeys)){ow.loadObj();var g=b.setkeys.split(",").map(e=>e.trim());h=e=>stringify(isObject(e)?sortMapKeys(ow.obj.filterKeys(g,e),!0):e,__,"");c=e=>pForEach(e,h).reduce((f,k)=>f.concat(k),[])}else h=e=>stringify(isObject(e)?sortMapKeys(e,!0):e,__,""),
c=e=>pForEach(e,h).reduce((f,k)=>f.concat(k),[]);switch(b.setop){case "union":let e=new Set(c(d));return d.concat(a.filter(p=>!e.has(h(p))));case "diffa":let f=new Set(c(a));return d.filter(p=>!f.has(h(p)));case "diffb":let k=new Set(c(d));return a.filter(p=>!k.has(h(p)));case "diffab":let m=new Set(c(d)),r=new Set(c(a));return d.filter(p=>!r.has(h(p))).concat(a.filter(p=>!m.has(h(p))));case "diff":let u=new Set(c(d)),x=new Set(c(a));return d.map(p=>Object.assign({"*":x.has(h(p))?__:"a"},p)).concat(a.map(p=>
Object.assign({"*":u.has(h(p))?__:"b"},p))).filter(p=>isDef(p["*"]));default:let A=new Set(c(a));return d.filter(p=>A.has(h(p)))}},forcearray:a=>isMap(a)?[a]:a,spacekeys:a=>{isMap(a)&&traverse(a,(c,d,h,g)=>{0<=c.indexOf(" ")&&(g[c.replace(/ /g,b.spacekeys||"_")]=d,delete g[c])});return a},numformat:a=>{traverse(a,(c,d,h,g)=>{isTNumber(d)&&isString(b.numformat)&&(g[c]=$ft(b.numformat,d))});return a},xjs:a=>{if(isString(b.xjs)&&io.fileExists(b.xjs)){var c=io.readFileString(b.xjs);if(isString(c))return(new Function("args",
c+"; return args"))(a)}return a},xpy:a=>isString(b.xpy)&&io.fileExists(b.xpy)?(a=$py(b.xpy,{args:a},["args"]),$pyStop(),a):a,xfn:a=>{if(isString(b.xfn))return(new Function("args","return "+b.xfn))(a)},xrjs:a=>{if(isString(b.xrjs)&&isArray(a)&&io.fileExists(b.xrjs)){var c=io.readFileString(b.xrjs);if(isString(c))return c=new Function("args",c+"; return args"),pForEach(a,c)}return a},xrpy:a=>isString(b.xrpy)&&isArray(a)&&io.fileExists(b.xrpy)?($pyStart(),a=pForEach(a,c=>$py(b.xrpy,{args:c},["args"])),
$pyStop(),a):a,xrfn:a=>{if(isString(b.xrfn)&&isArray(a)){let c=new Function("args","return "+b.xrfn);return pForEach(a,c)}return a},val2icon:a=>{var c=["\ud83d\udd73\ufe0f","\u2705","\u274c"],d=["\u254d","\u2713","\u2715"];if(isDef(b.val2icon)){switch(b.val2icon){case "simple":var h=d;break;default:case "default":h=c}ow.loadFormat();traverse(a,(g,e,f,k)=>{isUnDef(e)||isNull(e)?k[g]=h[0]:isBoolean(e)&&(k[g]=e?h[1]:h[2])})}return a},field2date:a=>{let c=b.field2date.split(",").map(d=>d.trim());traverse(a,
(d,h,g,e)=>{if(0<=c.indexOf(0<g.length&&!g.startsWith("[")?g.substring(1)+"."+d:d)&&isNumber(h)&&0<h)try{e[d]=isString(h)?ow.format.fromISODate(h):new Date(h)}catch(f){printErr(f)}});return a},field2si:a=>{let c=b.field2si.split(",").map(d=>d.trim());traverse(a,(d,h,g,e)=>{0<=c.indexOf(0<g.length&&!g.startsWith("[")?g.substring(1)+"."+d:d)&&isNumber(h)&&(e[d]=ow.format.toAbbreviation(h))});return a},field2byte:a=>{let c=b.field2byte.split(",").map(d=>d.trim());traverse(a,(d,h,g,e)=>{0<=c.indexOf(0<
g.length&&!g.startsWith("[")?g.substring(1)+"."+d:d)&&isNumber(h)&&(e[d]=ow.format.toBytesAbbreviation(h))});return a}},J=new Map([["?",(a,c)=>{a=Array.from(J.keys()).filter(d=>"?"!=d).sort();w(a,c)}],["pm",(a,c)=>{w(a,c)}],["key",(a,c)=>{w(a,c)}],["html",(a,c)=>{let d;c=!1;b.htmlopen=toBoolean(_$(b.htmlopen,"htmlopen").isString().default("true"));b.htmlwait=_$(b.htmlwait,"htmlwait").isNumber().default(2500);b.htmlopen&&(d=io.createTempFile("oafp_",".html"));ow.loadTemplate();b.htmldark=toBoolean(_$(b.htmldark,
"htmldark").isString().default("false"));isString(a)?(a=ow.template.html.genStaticVersion(ow.template.parseMD2HTML(a,!toBoolean(b.htmlpart),!toBoolean(b.htmlcompact),__,b.htmldark)),a=a.replace("<html>",'<html><meta charset="utf-8">')):(a=ow.template.html.parseMap(a,!0,b.htmldark),a='<html><meta charset="utf-8"><style>'+a.css+"</style><body"+(b.htmldark?' class="njsmap_dark"':"")+">"+a.out+"</body></html>");b.htmlopen&&(io.writeFileString(d,a),c=openInBrowser("file:///"+d.replace(/\\/g,"/")));c?sleep(b.htmlwait,
!0):q(a)}],["ctable",(a,c)=>{w(a,c)}],["stable",(a,c)=>{w(a,c)}],["table",(a,c)=>{w(a,c)}],["json",(a,c)=>{w(a,c)}],["yaml",(a,c)=>{w(a,c)}],["cyaml",(a,c)=>{w(a,c)}],["cjson",(a,c)=>{w(a,c)}],["slon",(a,c)=>{w(a,c)}],["cslon",(a,c)=>{w(a,c)}],["ctree",(a,c)=>{w(a,c)}],["tree",(a,c)=>{w(a,c)}],["mtree",(a,c)=>{"undefined"==typeof __flags.TREE.mono&&(c.__format="ctree");w(a,c)}],["btree",(a,c)=>{"undefined"==typeof __flags.TREE.mono&&(c.__format="btree");w(a,c)}],["res",(a,c)=>{w(a,c)}],["key",(a,
c)=>{w(a,c)}],["text",(a,c)=>{w(a,c)}],["csv",(a,c)=>{w(a,c)}],["map",(a,c)=>{w(a,c)}],["md",(a,c)=>{w(toBoolean(b.mdtemplate)?$t(a):a,c)}],["log",(a,c)=>{if(isString(a)&&toBoolean(b.logprintall))q(a.replace(/\n$/,""));else if(c=a,isMap(a)&&(c=[a]),isArray(c)){isUnDef(b.logtheme)&&isDef(getEnv("OAFP_LOGTHEME"))&&(b.logtheme=getEnv("OAFP_LOGTHEME"));a=v(_$(b.logtheme,"logtheme").isString().default(""));a=merge({errorLevel:"RED,BOLD",warnLevel:"YELLOW",timestamp:"BOLD"},a);var d=ansiColor(a.timestamp,
"").replace("\u001b[m",""),h=ansiColor(a.errorLevel,"").replace("\u001b[m",""),g=ansiColor(a.warnLevel,"").replace("\u001b[m","");c.forEach(e=>{if(isMap(e)){let f=isDef(e["@timestamp"])&&isString(e["@timestamp"])?e["@timestamp"]:__,k=isDef(e.level)?e.level:__;e=isDef(e.message)?e.message:__;let m="";isDef(k)&&(0<=k.toLowerCase().indexOf("err")&&(m=h),0<=k.toLowerCase().indexOf("warn")&&(m=g));isDef(f)&&24<f.length&&(f=f.substring(0,23)+"Z");(isDef(e)||isDef(f))&&q([d,f,isDef(k)?"\u001b[m | "+m+k:
"","\u001b[m | ",m,e,"\u001b[m"].join(""))}})}}],["raw",(a,c)=>{isString(a)?q(a):q(stringify(a,__,""))}],["lines",(a,c)=>{isArray(a)?a.forEach(d=>q(d)):q(a)}],["ini",(a,c)=>{isString(a)||(ow.loadJava(),c=new ow.java.ini,q(c.put(a).save()))}],["toml",(a,c)=>{isUnDef(af.toTOML)&&l(-1,"TOML support not found.");if(isMap(a))q(af.toTOML(a));else if(isArray(a))q(af.toTOML({list:a}));else return __}],["mdyaml",(a,c)=>{isArray(a)?a.forEach((d,h)=>{w(d,merge(c,{__format:"yaml"}));h<a.length-1&&q("---\n")}):
w(a,merge(c,{__format:"yaml"}))}],["mdtable",(a,c)=>{isArray(a)&&(ow.loadTemplate(),q(ow.template.md.table(a)))}],["template",(a,c)=>{isString(a)||(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(b.template)&&isUnDef(b.templatepath)&&l(-1,"For out=template you need to provide a template=someFile.hbs or templatepath=..."),b.templatedata=_$(b.templatedata,"templatedata").isString().default("@"),c=isDef(b.template)?toBoolean(b.templatetmpl)?
b.template:io.readFileString(b.template):$path(b.__origr,b.templatepath),q($t(c,$path(a,b.templatedata))))}],["openmetrics",(a,c)=>{isString(a)?l(-1,"For out=openmetrics input needs to be an array or map."):(ow.loadMetrics(),a=ow.metrics.fromObj2OpenMetrics(a,b.metricsprefix,b.metricstimestamp),a=a.split("\n").map(d=>{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).filter(d=>
0<d.length).join("\n"),q(a))}],["pjson",(a,c)=>{c.__format="prettyjson";w(a,c)}],["ndjson",(a,c)=>{isArray(a)?a.forEach(d=>q(stringify(d,__,""))):isMap(a)?q(stringify(a,__,"")):w(a,c)}],["ndslon",(a,c)=>{isArray(a)?a.forEach(d=>q(af.toSLON(d))):isMap(a)?q(af.toSLON(a)):w(a,c)}],["base64",(a,c)=>{a=isString(a)?a:stringify(a);toBoolean(b.base64gzip)?q(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a))))):q(af.fromBytes2String(af.toBase64Bytes(a)))}],["gb64json",(a,c)=>{a=isString(a)?
a:stringify(a);q(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a)))))}],["jwt",(a,c)=>{isMap(a)?(isUnDef(b.jwtsecret)&&isUnDef(b.jwtprivkey)&&l(-1,"For out=jwt you need to provide a jwtsecret or a jwtprivkey"),ow.loadServer(),isDef(b.jwtprivkey)?(ow.loadJava(),c=new ow.java.cipher,q(ow.server.jwt.sign(c.readKey4File(b.jwtprivkey,!0,b.jwtalg),a))):q(ow.server.jwt.sign(b.jwtsecret,a))):l(-1,"For out=jwt input needs to be a map.")}],["grid",(a,c)=>{isUnDef(b.grid)&&l(-1,"For out=grid you need to provide a grid=...");
c=v(_$(b.grid,"grid").isString().$_());isArray(c)&&0<c.length&&isArray(c[0])?(c.forEach((d,h)=>{d.forEach((g,e)=>{if(isUnDef(g.type)||"empty"!=g.type){if(isDef(g.cmd)){var f=$sh(g.cmd).getJson(0);f=isDef(f)&&isDef(f.stdout)?f.stdout:""}else f=a;if("chart"==g.type||"bar"==g.type)e="_chrt"+(h+1)+"."+(e+1),g.obj=("chart"==g.type?e+" ":"")+N(f,g.obj,e),isUnDef(g.title)&&(g.title="Chart "+e);isDef(g.path)?(g.obj=$path(f,g.path),isUnDef(g.title)&&(g.title=g.path)):isString(f)?g.obj=f:isObject(f)&&"chart"!=
g.type&&(g.obj=$path(f,"@"))}else g.obj=""})}),c=ow.format.string.grid(c,__,__," ",!0),q(c)):l(-1,"Invalid grid parameter: '"+stringify(b.grid,__,"")+"'")}],["envs",(a,c)=>{a=isArray(a)?a.map(g=>isObject(g)?ow.loadObj().flatMap(g,"_"):g):ow.loadObj().flatMap(a,"_");c=g=>0<=String(g).indexOf(" ")?'"'+g+'"':g;isUnDef(b.envscmd)&&(b.envscmd=ow.format.isWindows()?"set":"export");b.envscmd=String(b.envscmd);isUnDef(b.envsprefix)&&(b.envsprefix="_OAFP_");b.envsprefix=String(b.envsprefix);toBoolean(b.envsnoprefix)&&
(b.envsprefix="");var d=new Set,h;for(h in a)d.add(b.envscmd+(0<b.envscmd.length?" ":"")+(b.envsprefix+h.replace(/[^a-zA-Z0-9_]/g,"_"))+"="+c(a[h]));q(Array.from(d).join("\n"))}],["cmd",(a,c)=>{isString(b.outcmd)||l(-1,'For out=cmd you need to provide a outcmd="..."');toBoolean(b.outcmdtmpl)&&(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers());let d=h=>{var g=isString(h)?h:stringify(h,__,"");if(toBoolean(b.outcmdparam))try{var e=$sh(b.outcmd.replace(/([^\\]?){}/g,
"$1"+g)).get(0)}catch(f){sprintErr(f)}else e=toBoolean(b.outcmdtmpl)?$sh($t(b.outcmd,h)).get(0):$sh(b.outcmd,g).get(0);toBoolean(b.outcmdnl)?(0<e.stdout.length&&print(e.stdout),0<e.stderr.length&&printErr(e.stderr)):(0<e.stdout.length&&printnl(e.stdout),0<e.stderr.length&&printErrnl(e.stderr))};isArray(a)?toBoolean(b.outcmdjoin)?d(a):toBoolean(b.outcmdseq)?a.forEach(d):isDef(pForEach)?pForEach(a,h=>{d(h)}):parallel4Array(a,h=>{d(h)}):(isString(a),d(a))}],["chart",(a,c)=>{isUnDef(b.chart)&&l(-1,'For out=chart you need to provide a chart="<units> [<path[:color][:legend]>...]"');
isUnDef(splitBySepWithEnc)&&l(-1,"output=chart is not supported in this version of OpenAF");a=N(a,b.chart);0<a.length&&(a=printChart("oafp "+a),toBoolean(b.chartcls)&&cls(),q(a))}],["schart",(a,c)=>{isUnDef(b.schart)&&l(-1,'For out=schart you need to provide a schart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&l(-1,"Output=schart is not supported in this version of OpenAF");a=N(a,b.schart,"_oafp_sfn_","soafp");0<a.length&&q(printChart("soafp "+a))}],["ch",(a,c)=>{isUnDef(b.ch)&&
l(-1,'For out=ch you need to provide a ch="(type: ...)"');isUnDef(b.chkey)&&l(-1,'For out=ch you need to provide a chkey="key1, key2"');a=isMap(a)?[a]:a;b.ch=v(b.ch);isMap(b.ch)?(isUnDef(b.ch.type)&&l(-1,"ch.type is not defined."),isDef(b.ch.lib)&&loadLib(b.ch.lib),"remote"==b.ch.type?$ch("oafp::outdata").createRemote(b.ch.url):$ch("oafp::outdata").create(b.ch.type,isDef($sec().procMap)?$sec().procMap(b.ch.options):b.ch.options),toBoolean(b.chunset)?$ch("oafp::outdata").unsetAll(b.chkey.split(",").map(d=>
d.trim()),a):$ch("oafp::outdata").setAll(b.chkey.split(",").map(d=>d.trim()),a),$ch("oafp::outdata").destroy()):l(-1,"Invalid ch parameter")}],["db",(a,c)=>{(!isArray(a)||1>a.length)&&l(-1,"db is only supported for filled arrays/lists");b.dbtable=_$(b.dbtable,"outdbtable").isString().default("data");b.dbnocreate=toBoolean(_$(b.dbnocreate,"outdbnocreate").isString().default("false"));b.dbicase=toBoolean(_$(b.dbicase,"outdbicase").isString().default("false"));b.dbbatchsize=_$(b.dbbatchsize,"dbbatchsize").isNumber().default(__);
ow.loadObj();try{isString(b.dbjdbc)||l(-1,"dbjdbc URL is not defined.");isDef(b.dblib)&&loadLib("jdbc-"+b.dblib+".js");var d=new DB(b.dbjdbc,b.dbuser,b.dbpass,b.dbtimeout);if(!b.dbnocreate)try{var h=ow.obj.fromObj2DBTableCreate(b.dbtable,a,__,!b.dbicase);d.u(h);d.commit()}catch(m){d.rollback(),l(-1,"Error creating table: "+m)}var g=Object.keys(ow.obj.flatMap(a[0]));var e=b.dbicase?g.join(",").toUpperCase():'"'+g.join('", "')+'"';let k="";var f=a.map(m=>{var r=ow.obj.flatMap(m);m=[];for(var u in g)m.push(r[g[u]]);
u=g.map(x=>String(r[x]));m="INSERT INTO "+(b.dbicase?b.dbtable:'"'+b.dbtable+'"')+" ("+e+") VALUES ("+u.map(x=>"?").join(", ")+")";m.length>k.length&&(k=String(m));return u});d.usArray(k,f,b.dbbatchsize)}catch(k){isDef(d)&&d.rollback(),printErr(k),l(-1,"Error connecting to the database: "+k)}finally{isDef(d)&&(d.commit(),d.close())}}],["sql",(a,c)=>{(!isArray(a)||1>a.length)&&l(-1,"sql is only supported for filled arrays/lists");b.sqltable=_$(b.sqltable,"sqltable").isString().default("data");b.sqlicase=
toBoolean(_$(b.sqlicase,"sqlicase").isString().default("false"));b.sqlnocreate=toBoolean(_$(b.sqlnocreate,"sqlnocreate").isString().default("false"));ow.loadObj();b.sqlnocreate||q(ow.obj.fromObj2DBTableCreate(b.sqltable,a,__,!b.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(a[0]));var h=b.sqlicase?d.join(",").toUpperCase():'"'+d.join('", "')+'"';q(a.map(g=>{var e=ow.obj.flatMap(g);g=[];for(var f in d)g.push(e[d[f]]);f=d.map(k=>{k=e[k];isString(k)&&(k="'"+k.replace(/'/g,"''")+"'");isNull(k)&&(k=
"null");return k});return"INSERT INTO "+(b.sqlicase?b.sqltable:'"'+b.sqltable+'"')+" ("+h+") VALUES ("+f.join(",")+");"}).join("\n"))}],["xml",(a,c)=>{q(af.fromObj2XML(a,!0,b.outxmlprefix))}],["pxml",(a,c)=>{a=af.fromObj2XML(a,!0,b.pxmlprefix);q('<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n'+new XMLList(a))}],["xls",(a,c)=>{if(!isString(a)){try{includeOPack("plugin-XLS")}catch(e){l(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");
if(isMap(a)){ow.loadObj();var d=ow.obj.flatMap(a);var h=Object.keys(d).map(e=>({key:e,value:d[e]}))}isArray(a)&&(h=a);traverse(h,(e,f,k,m)=>{isString(f)&&f.startsWith("=")&&(m[e]="'"+f)});a=!1;c=b.xlsfile;isUnDef(b.xlsfile)&&(a=!0,b.xlsfile=io.createTempFile("oafp",".xlsx"));c=new XLS(isDef(c)&&io.fileExists(c)?c:__);var g=c.getSheet(_$(b.xlssheet,"xlssheet").isString().default("data"));b.xlsformat=_$(b.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');
b.xlsformat=v(b.xlsformat);ow.format.xls.setTable(c,g,"A",1,h,__,b.xlsformat);c.writeFile(b.xlsfile);c.close();b.xlsopenwait=_$(b.xlsopenwait,"xlsopenwait").isNumber().default(5E3);b.xlsopen=toBoolean(_$(b.xlsopen,"xlsopen").isString().default("true"));b.xlsopen&&(ow.format.isWindows()?($sh("start "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)))}}]]),I=new Map([["?",(a,c)=>{a=Array.from(I.keys()).filter(d=>
"?"!=d).sort();n(a,c)}],["pm",(a,c)=>{t();isDef(__pm._map)&&(a=__pm._map);isDef(__pm._list)&&(a=__pm._list);n(a,c)}],["key",(a,c)=>{t();isString(a)||l(-1,"key is only supported with a string.");n($get(a),c)}],["jsonschema",(a,c)=>{t();a=jsonParse(a,__,__,!0);isMap(a)||l(-1,"jsonschema is only supported with a map.");ow.loadObj();a=ow.obj.schemaSampleGenerator(a);n(a,c)}],["yaml",(a,c)=>{t();a=af.fromYAML(a);n(a,c)}],["xml",(a,c)=>{t();b.xmlignored=_$(b.xmlignored,"xmlignored").isString().default(__);
b.xmlprefix=_$(b.xmlprefix,"xmlprefix").isString().default(__);b.xmlfiltertag=toBoolean(_$(b.xmlfiltertag,"xmlfiltertag").isString().default(__));0<=a.indexOf("<?xml")&&(a=a.substring(a.indexOf("?>")+2).trim());0<=a.indexOf("<!DOCTYPE")&&(a=a.substring(a.indexOf(">")+1).trim());a=af.fromXML2Obj(a,b.xmlignored,b.xmlprefix,!b.xmlfiltertag);n(a,c)}],["lines",(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));t();let d=__,h=[];b.linesvisualheadsep=
toBoolean(_$(b.linesvisualheadsep,"linesvisualheadsep").isString().default(__));let g=!1,e=!1;isUnDef(b.linesvisualsepre)&&(b.linesvisualsepre=b.linesvisualheadsep?"\\s+":" \\s+");let f=m=>{m=m.split("\n").map(u=>{let x="",A=0;for(let p=0;p<u.length;p++)if("\t"===u[p]){let F=8-A%8;x+=" ".repeat(F);A+=F}else x+=u[p],A++;return x}).join("\n");if(g&&e){var r={};h.forEach((u,x)=>{r[d[x]]=m.substring(u,x+1<h.length?h[x+1]-1:__).trim()});return r}g||(d=[]);m.split(new RegExp(b.linesvisualsepre)).reduce((u,
x)=>{if(0!=x.trim().length){g||d.push(x);if(!b.linesvisualheadsep&&!g||g&&b.linesvisualheadsep&&!e)x=m.substring(u).match(new RegExp(ow.format.escapeRE(x)+"("+b.linesvisualsepre+"|$)")),!isNull(x)&&isDef(x.index)?(h.push(u+x.index),u+=x[0].length):l(-1,"Problem with linesvisual to find header positioning.");return u}},0);g?b.linesvisualheadsep&&!e&&(e=!0):(g=!0,b.linesvisualheadsep||(e=!0));return __};if(b.linesjoin)if(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=
B(b.cmd,!0)),a=a.split(/\r?\n/),toBoolean(b.linesvisual)){var k=[];a.forEach(m=>{0!=m.length&&(m=f(m),isDef(m)&&k.push(m))});n(k,c)}else n(a,c);else a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(B(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,m=>{toBoolean(b.linesvisual)?(m=f(m),isDef(m)&&n(m,clone(c),!0)):n(m,clone(c),!0)}),a.close()}],["ndjson",(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));
t();global.__ndjsonbuf=__;noOut=!0;var d=(g,e)=>{isUnDef(global.__ndjsonbuf)&&0!=g.length&&g.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=g.length&&!g.trim().endsWith("}")){global.__ndjsonbuf+=g.trim();return}0<global.__ndjsonbuf.length&&(g=global.__ndjsonbuf+g,global.__ndjsonbuf=__)}0==g.length||0<g.length&&"{"!=g.trim().substring(0,1)?(noOut=!1,e(g),global.__ndjsonbuf=__):0<g.trim().length&&(noOut=!1,e(g))},h=g=>{var e=[];g.split("\n").filter(f=>0<f.length).forEach(f=>
d(f,k=>e.push(jsonParse(k,__,__,toBoolean(b.ndjsonfilter)))));return e};b.ndjsonjoin?(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=B(b.cmd,!0)),n(h(a),c)):(a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(B(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,g=>{d(g,e=>n(jsonParse(e,__,__,!0),clone(c),!0))}),a.close());noOut&&M()}],["ndslon",(a,c)=>{isBoolean(b.ndslonjoin)||(b.ndslonjoin=toBoolean(_$(b.ndslonjoin,
"ndslonjoin").isString().default(__)));t();global.__ndslonbuf=__;noOut=!0;var d=(g,e)=>{isUnDef(global.__ndslonbuf)&&0!=g.length&&g.trim().startsWith("(")&&(global.__ndslonbuf="");if(isDef(global.__ndslonbuf)){if(0!=g.length&&!g.trim().endsWith(")")){global.__ndslonbuf+=g.trim();return}0<global.__ndslonbuf.length&&(g=global.__ndslonbuf+g,global.__ndslonbuf=__)}0==g.length||0<g.length&&"{"!=g.trim().substring(0,1)?(noOut=!1,e(g),global.__ndslonbuf=__):0<g.trim().length&&(noOut=!1,e(g))},h=g=>{var e=
[];g.split("\n").filter(f=>0<f.length).forEach(f=>d(f,k=>e.push(af.fromSLON(k))));return e};b.ndslonjoin?(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=B(b.cmd,!0)),n(h(a),c)):(a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(B(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,g=>{d(g,e=>n(af.fromSLON(e),clone(c),!0))}),a.close());noOut&&M()}],["md",(a,c)=>{t();__conConsole=__ansiColorFlag=!0;isUnDef(b.format)&&
isUnDef(c.__format)&&(b.format="md",c.__format="md");n(a,c)}],["mdtable",(a,c)=>{t();ow.loadTemplate();if(toBoolean(b.inmdtablejoin)){var d=new Set,h=new Set,g=()=>{0<h.size&&(d.add(ow.template.md.fromTable(Array.from(h).join("\n"))),h.clear())};a.split("\n").forEach(e=>{/^\|.+\|$/.test(e.trim())?h.add(e.trim()):g()});g();n(Array.from(d),c)}else h=ow.template.md.fromTable(a),n(h,c)}],["ask",(a,c)=>{var d=[];a=af.fromJSSLON(a);isDef(askStruct)&&isArray(a)&&(__conConsole=!0,__con.getTerminal().settings.set("-icanon min 1 -echo"),
d=askStruct(a),__con.getTerminal().settings.set("icanon echo"),print(""));n(d,c)}],["raw",(a,c)=>{t();n(a,c)}],["ini",(a,c)=>{t();ow.loadJava();var d=new ow.java.ini;a=isDef(b.file)?d.loadFile(b.file).get():d.load(a).get();n(a,c)}],["jwt",(a,c)=>{ow.loadServer();if(toBoolean(b.injwtverify)){isUnDef(b.injwtsecret)&&isUnDef(b.injwtpubkey)&&l(-1,"injwtsecret or injwtpubkey is not defined.");try{if(isDef(b.injwtpubkey)){ow.loadJava();var d=new ow.java.cipher;ow.server.jwt.verify(d.readKey4File(b.injwtpubkey,
!1,b.injwtalg),a.trim())}else ow.server.jwt.verify(b.injwtsecret,a.trim());var h=!0}catch(g){isDef(g.javaException)&&printErr(g.javaException.getMessage()),h=!1}}a=ow.server.jwt.decode(a);isDef(h)&&(a.__verified=h);!toBoolean(b.injwtraw)&&isDef(a)&&isMap(a.claims)&&(isDef(a.claims.exp)&&(a.claims.exp=new Date(1E3*a.claims.exp)),isDef(a.claims.iat)&&(a.claims.iat=new Date(1E3*a.claims.iat)),isDef(a.claims.nbf)&&(a.claims.nbf=new Date(1E3*a.claims.nbf)));n(a,c)}],["sql",(a,c)=>{isString(a)?toBoolean(b.sqlparse)?
(isUnDef(ow.format.sqlFormat)&&l(-1,"SQL parse not available."),n(ow.format.sqlFormat(a,isDef(b.sqloptions)?v(b.sqloptions):__),c)):n(af.fromSQL(a).ast,c):n(a,c)}],["openmetrics",(a,c)=>{isString(a)?(ow.loadMetrics(),n(ow.metrics.fromOpenMetrics2Array(a),c)):n(a,c)}],["ch",(a,c)=>{t();isUnDef(b.inch)&&l(-1,"inch is not defined.");b.inch=v(b.inch);if(isMap(b.inch)){isUnDef(b.inch.type)&&l(-1,"inch.type is not defined.");isDef(b.inch.lib)&&loadLib(b.inch.lib);"remote"==b.inch.type?$ch("oafp::indata").createRemote(b.inch.url):
$ch("oafp::indata").create(b.inch.type,isDef($sec().procMap)?$sec().procMap(b.inch.options):b.inch.options);var d=v(a,!0);toBoolean(b.inchall)||0==a.trim().length?n($ch("oafp::indata").getAll(isMap(d)?d:__),c):n($ch("oafp::indata").get(isMap(d)?d:__),c);$ch("oafp::indata").destroy()}else l(-1,"inch is not a valid map.")}],["db",(a,c)=>{if(isString(a)){t();isString(b.indbjdbc)||l(-1,"indbjdbc URL is not defined.");try{isDef(b.indblib)&&loadLib("jdbc-"+b.indblib+".js");var d=new DB(b.indbjdbc,b.indbuser,
b.indbpass,b.indbtimeout);d.convertDates(!0);if(toBoolean(b.indbexec)){var h=d.u(a);n({affectedRows:h},c);d.commit()}else if(toBoolean(b.indbstream)){var g=d.qsRS(a);try{for(;g.next();){h={};for(var e=1;e<=g.getMetaData().getColumnCount();e++){var f=g.getObject(e);switch(g.getMetaData().getColumnType(e)){case java.sql.Types.BIGINT:case java.sql.Types.INTEGER:case java.sql.Types.TINYINT:case java.sql.Types.SMALLINT:case java.sql.Types.NUMERIC:f=Number(f);break;case java.sql.Types.DOUBLE:case java.sql.Types.FLOAT:case java.sql.Types.REAL:case java.sql.Types.DECIMAL:f=
Number(f);break;case java.sql.Types.BOOLEAN:f=!!f;break;case java.sql.Types.TIME:case java.sql.Types.DATE:case java.sql.Types.TIMESTAMP:f=new Date(f.getTime());break;case java.sql.Types.NULL:f=null;break;default:f=String(f)}h[g.getMetaData().getColumnName(e)]=f}n(h,c)}}catch(k){l(-1,"Error streaming SQL: "+k.message)}finally{d.closeStatement(a),g.close()}}else h=d.q(a),isMap(h)&&isArray(h.results)?n(h.results,c):l(-1,"Invalid DB result: "+stringify(h))}catch(k){printErr(k.message),isDef(d)&&d.rollback(),
l(-1,"Error executing SQL: "+k.message)}finally{isDef(d)&&(d.rollback(),d.close())}}else l(-1,"db is only supported with a SQL string.")}],["xls",(a,c)=>{t();try{includeOPack("plugin-XLS")}catch(k){l(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");var d=a=!1;b.inxlsdesc=toBoolean(_$(b.inxlsdesc,"inxlsdesc").isString().default(!1));b.inxlsdesc&&(isUnDef(b.inxlssheet)?d=!0:a=!0);b.inxlssheet=_$(b.inxlssheet||b.xlssheet,"xlssheet").isString().default(0);
b.inxlsevalformulas=toBoolean(_$(b.inxlsevalformulas||b.xlsevalformulas,"xlsevalformulas").isString().default(!0));b.inxlscol=_$(b.inxlscol||b.xlscol,"xlscol").isString().default("A");b.inxlsrow=_$(b.inxlsrow||b.xlsrow,"xlsrow").isString().default(1);if(isDef(b.file)||isDef(b.cmd)){var h=new XLS(isDef(b.cmd)?B(b.cmd):b.file);if(d)f=h.getSheetNames();else if(d=h.getSheet(b.inxlssheet),a){var g=h.getCellValues(d,!1),e=[];Object.keys(g).forEach(k=>{k=Object.keys(g[k]);k.length>e.length&&(e=k)});f=[];
Object.keys(g).map(k=>{var m={" ":k};e.forEach(r=>m[r]=isNull(g[k][r])||"BLANK"==g[k][r].type?"___":"###");f.push(m)});isUnDef(b.format)&&isUnDef(c.__format)&&(b.format="ctable",c.__format="ctable")}else{var f=h.getTable(d,b.inxlsevalformulas,b.inxlscol,b.inxlsrow);isDef(f)&&isMap(f)&&(f=f.table)}h.close();n(f,c)}else l(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],["csv",(a,c)=>{t();isUnDef(b.inputcsv)&&isDef(b.incsv)&&(b.inputcsv=b.incsv);if(isDef(b.file)||
isDef(b.cmd)){var d=isDef(b.cmd)?af.fromBytes2InputStream(B(b.cmd)):io.readFileStream(b.file);a=$csv(b.inputcsv).fromInStream(d).toOutArray();d.close()}else a=$csv(b.inputcsv).fromInString(a).toOutArray();n(a,c)}],["javathread",(a,c)=>{t();if(isDef(b.javathreadpid)){ow.loadJava();try{var d=ow.java.jcmd(b.javathreadpid,"Thread.print");d=d.split("\n").filter(e=>e.startsWith('"'))}catch(e){l(-1,"Error getting Java thread dump: "+e.message)}}else isString(a)?d=a.split("\n"):l(-1,"javathreads is only supported with a raw input or javathreadpid=.");
var h=(e,f)=>{if(null===e||void 0===e)return"";if(isBoolean(e))return!!e;if(isNumber(e))return Number(e);if(f){var k=String(e);_$(k,"aStr").isString().$_();e=k.trim().match(/[\d\.]+[a-zA-Z]+/g);f=0;if(isArray(e)&&0!==e.length){for(u in e){var m=e[u].match(/(\d+(?:\.\d+)?)\s*([a-zA-Z]+)/);if(isArray(m)&&0<m.length){k=Number(m[1]);m=String(m[2]);var r={ms:1,s:1E3,m:6E4,h:36E5,d:864E5,w:6048E5,M:2592E6,y:31536E6};f=isDef(r[m])?f+k*r[m]:f+k}}var u=f}else u=parseFloat(k);return u}return String(e)};ow.loadFormat();
var g=[];d.forEach(e=>{if(e.startsWith('"')){var f=java.util.regex.Pattern.compile('^\\"(?<threadName>[^"]+)\\"(?:\\s+#(?<threadId>\\d+))?(?:\\s+\\[(?<threadIndex>\\d+)\\])?(?:\\s+(?<daemon>daemon))?(?:\\s+prio=(?<prio>\\d+))?\\s+os_prio=(?<osPrio>\\d+)(?:\\s+cpu=(?<cpu>[0-9.]+ms))?(?:\\s+elapsed=(?<elapsed>[0-9.]+s))?(?:\\s+tid=(?<tid>0x[a-fA-F0-9]+))?(?:\\s+nid=(?<nid>0x[a-fA-F0-9]+|\\d+|\\S+))?(?:\\s+(?<state>.*?))?(?:\\s+\\[(?<address>[^\\]]+)\\])?\\s*$').matcher(e);f.find()?(e={threadGroup:h(f.group("threadName")).replace(/[^a-zA-z]?\d+$/,
""),threadName:h(f.group("threadName")),threadId:h(f.group("threadId")),threadIndex:h(f.group("threadIndex")),daemon:h(f.group("daemon")),prio:h(f.group("prio")),osPrio:h(f.group("osPrio")),cpu_ms:h(f.group("cpu"),!0),elapsed_ms:h(f.group("elapsed"),!0),tid:h(f.group("tid")),nid:h(f.group("nid")),state:h(f.group("state")),address:h(f.group("address"))},g.push(e)):g.push({error:"Could not parse line: "+e})}});n(g,c)}],["javagc",(a,c)=>{isBoolean(b.javagcjoin)||(b.javagcjoin=toBoolean(_$(b.javagcjoin,
"javagcjoin").isString().default(__)));var d=h=>{try{let g=[/([^ ]+) (\d+\.\d+): \[(GC) \((.*?)\)(.+?)\[PSYoungGen: (\d+K)->(\d+K)\((.*?)\)\] (\d+K)->(\d+K)\((.*?)\), (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/s,/([^ ]+) (\d+\.\d+): \[(GC) \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\((.*?)\)\] (\d+K)->(\d+K)\((.*?)\), (\d+\.\d+) secs\]/,/([^ ]+) (\d+\.\d+): \[(Full GC) \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\((.*?)\)\] \[ParOldGen: (\d+K)->(\d+K)\((.*?)\)\] (\d+K)->(\d+K)\((.*?)\), \[Metaspace: (\d+K)->(\d+K)\((.*?)\)\], (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/,
/([^ ]+) (\d+\.\d+): \[(Full GC) \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\((.*?)\)\] \[ParOldGen: (\d+K)->(\d+K)\((.*?)\)\] (\d+K)->(\d+K)\((.*?)\), \[Metaspace: (\d+K)->(\d+K)\((.*?)\)\], (\d+\.\d+) secs\]/,/([^ ]+) (\d+\.\d+): \[(GC) \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\((.*?)\)\] (\d+K)->(\d+K)\((.*?)\), (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/,/^\[(.+)\]\s+GC\((\d+)\)\s*(.*?)\s*(\d+[GMK])->(\d+[GMK])\((\d+[GMK])\)\s*(\d+\.\d+)ms/,/^\[(.+)\]\s+GC\((\d+)\)\s*(.*?)\s*Metaspace:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)\s*NonClass:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)\s*Class:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)/,
/^\[(.+)\]\s+GC\((\d+)\)\s*(Allocation Failure)\s*(.*?)\s+(\d+[KMGT])->(\d+[KMGT])\((\d+[KMGT])\)\s+(\d+\.\d+)ms/];for(let e=0;e<g.length;e++){let f=h.match(g[e]);if(f){let k={};if(h.startsWith("["))f[1].split("][").forEach(m=>{m.match(/^\d+\.\d+s$/)?k.sinceStart=parseFloat(m.replace(/s$/,"")):m.match(/\d{4}-\d{2}-\d{2}T/)&&(k.timestamp=ow.format.toDate(m,"yyyy-MM-dd'T'HH:mm:ss.SSSZ"))}),k.gcId=parseInt(f[2]),k.gcType=f[3].trim(),""==k.gcType&&(k.gcType="none"),k.durationSecs=parseFloat(f[f.length-
1])/1E3,5===e?(k.heapBeforeGC=ow.format.fromBytesAbbreviation(f[4]+"B"),k.heapAfterGC=ow.format.fromBytesAbbreviation(f[5]+"B"),k.heapTotal=ow.format.fromBytesAbbreviation(f[6]+"B")):5<e&&(6==e?(k.metaUsedBeforeGC=ow.format.fromBytesAbbreviation(f[4]+"B"),k.metaTotalBeforeGC=ow.format.fromBytesAbbreviation(f[5]+"B"),k.metaUsedAfterGC=ow.format.fromBytesAbbreviation(f[6]+"B"),k.metaTotalAfterGC=ow.format.fromBytesAbbreviation(f[7]+"B"),k.nonClassUsedBeforeGC=ow.format.fromBytesAbbreviation(f[8]+"B"),
k.nonClassTotalBeforeGC=ow.format.fromBytesAbbreviation(f[9]+"B"),k.nonClassUsedAfterGC=ow.format.fromBytesAbbreviation(f[10]+"B"),k.nonClassTotalAfterGC=ow.format.fromBytesAbbreviation(f[11]+"B"),k.classUsedBeforeGC=ow.format.fromBytesAbbreviation(f[12]+"B"),k.classTotalBeforeGC=ow.format.fromBytesAbbreviation(f[13]+"B"),k.classUsedAfterGC=ow.format.fromBytesAbbreviation(f[14]+"B"),k.classTotalAfterGC=ow.format.fromBytesAbbreviation(f[15]+"B")):(k.heapBeforeGC=ow.format.fromBytesAbbreviation(f[4]+
"B"),k.heapAfterGC=ow.format.fromBytesAbbreviation(f[5]+"B"),k.heapTotal=ow.format.fromBytesAbbreviation(f[6]+"B")));else if(k.timestamp=ow.format.toDate(f[1],"yyyy-MM-dd'T'HH:mm:ss.SSSZ"),k.sinceStart=parseFloat(f[2]),k.gcType=f[3]+" "+f[4],4>=e){h=5;k.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(f[h++]+"B");k.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(f[h++]+"B");k.PSYoungGenTotal=ow.format.fromBytesAbbreviation(f[h++]+"B");if(2==e||3==e)k.ParOldGenBeforeGC=ow.format.fromBytesAbbreviation(f[h++]+
"B"),k.ParOldGenAfterGC=ow.format.fromBytesAbbreviation(f[h++]+"B"),k.ParOldGenTotal=ow.format.fromBytesAbbreviation(f[h++]+"B");k.heapBeforeGC=ow.format.fromBytesAbbreviation(f[h++]+"B");k.heapAfterGC=ow.format.fromBytesAbbreviation(f[h++]+"B");k.heapTotal=ow.format.fromBytesAbbreviation(f[h++]+"B");if(2==e||3==e)k.metaBeforeGC=ow.format.fromBytesAbbreviation(f[h++]+"B"),k.metaAfterGC=ow.format.fromBytesAbbreviation(f[h++]+"B"),k.metaTotal=ow.format.fromBytesAbbreviation(f[h++]+"B");k.durationSecs=
parseFloat(f[h++]);if(0==e||2==e||4==e)k.userTime=parseFloat(f[h++]),k.sysTime=parseFloat(f[h++]),k.realTime=parseFloat(f[h++])}return k}}}catch(g){printErr(g),l(-2,"Error parsing Java GC log: "+g)}};ow.loadFormat();t();if(isString(a)){a=a.split("\n");let h=/^(\[\d+|\d{4}-\d{2}-\d{2}T)/,g=[],e=[];for(let f of a)h.test(f)?(0<e.length&&g.push(e.join("\n")),e=[f]):e.push(f);0<e.length&&g.push(e.join("\n"));d=g.map(d).filter(f=>isMap(f));b.javagcjoin?n(d,c,!0):d.forEach(f=>n(f,c,!0))}else l(-1,"javagc is only supported with a string input.")}],
["hsperf",(a,c)=>{if(isDef(b.file)||isDef(b.cmd)){t();ow.loadJava();var d=isDef(b.cmd)?ow.java.parseHSPerf(B(b.cmd)):ow.java.parseHSPerf(b.file);d.__ts=new Date;var h=0,g=0;d.sun.gc.generation.forEach(e=>{e.space.forEach(f=>{g+=Number(f.used);h=isNumber(f.capacity)?h+Number(f.capacity):h;d.sun.gc["__percUsed_"+f.name]=100*f.used/f.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;
a=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);d.sun.gc.__ygc=isDef(a)?Number(a.invocations):0;d.sun.gc.__ygct=isDef(a)?Number(a.time/1E9):0;a=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name","").at(0);d.sun.gc.__fgc=isDef(a)?Number(a.invocations):0;d.sun.gc.__fgct=isDef(a)?Number(a.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/1E9;d.java.__mem={total:h,used:g,free:h-g,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,
metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-d.sun.gc.metaspace.used};n(d,c)}else l(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["rawhex",(a,c)=>{b.inrawhexline=_$(b.inrawhexline,"inrawhexline").isNumber().default(__);t();a=isDef(b.file)||isDef(b.cmd)?isDef(b.cmd)?B(b.cmd):io.readFileBytes(b.file):af.fromString2Bytes(a);a=ow.format.string.toHexArray(a,b.inrawhexline);a.forEach(d=>{d.characters=d.characters.replace(/[\x00-\x1F\x80-\xFF]/g,".")});n(a,
c)}],["base64",(a,c)=>{t();a=toBoolean(b.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(a,!0))):af.fromBytes2String(af.fromBase64(a));n(a,c)}],["gb64json",(a,c)=>{t();a=af.fromBytes2String(io.gunzip(af.fromBase64(a,!0)));n(a,c)}],["oaf",(a,c)=>{isString(a)||l(-1,"oaf is only supported with a string.");t();a=af.eval(a);n(a,c)}],["oafp",(a,c)=>{a=v(a,!0);var d="_oafp_key_"+genUUID();isMap(a)?(a.out="key",a.__key=d,a.__inception=!0,oafp(a),a=$get(d),$unset(d),n(a,c)):isArray(a)?($set(d,!0),
a=pForEach(a,(h,g)=>{g=d+"_"+String(g);h.out="key";h.__key=g;h.__inception=!0;try{oafp(h);var e=$get(g);$unset(g)}catch(f){sprintErr(f)}finally{return e}},__,isDef(b.inoafpseq)?toBoolean(b.inoafpseq):__),n(a,c)):l(-1,"oafp input data needs to be a map or an array.")}],["sh",(a,c)=>{t();a=v(a,!0);if(isString(a))a=$sh(a).get(0);else{isMap(a)||l(-1,"For in=sh the input data needs to a string or a map");var d=$sh();isUnDef(a.cmd)&&l(-1,"For in=sh the input data needs to a string or a map with the a 'cmd'");
d=d.sh(a.cmd);isDef(a.envs)&&(d=d.envs(a.envs,a.envsall));isDef(a.prefix)&&(d=d.prefix(a.prefix));isDef(a.pwd)&&(d=d.pwd(a.pwd));switch(b.inshformat){case "raw":a=d.get(0);break;case "yaml":a=d.getYaml(0);break;default:a=d.getJson(0)}}n(a,c)}],["llm",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&l(-1,"llmoptions not defined and "+b.llmenv+" not found.");t();
var d=$llm(Q(isDef(b.llmoptions)?v(b.llmoptions):$sec("system","envs").get(b.llmenv)));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&d.getGPT().setConversation(io.readFileJSON(b.llmconversation));let h;isString(b.llmimage)&&(b.llmimage.toLowerCase().match(/^https?:\/\//)?h=af.fromBytes2String(af.toBase64Bytes(af.fromInputStream2Bytes($rest().get2Stream(b.llmimage)))):io.fileExists(b.llmimage)&&(h=af.fromBytes2String(af.toBase64Bytes(io.readFileBytes(b.llmimage)))));a="md"==b.output||
"mdtable"==b.output||"raw"==b.output?isDef(h)?d.promptImage(a,h):d.prompt(a):isDef(h)?d.promptImage(a,h,__,__,__,__,!0):d.promptJSON(a);isDef(b.llmconversation)&&(d=d.getGPT().getConversation(),d.push({role:"assistant",content:stringify(a,__,"")}),io.writeFileJSON(b.llmconversation,d,""));n(jsonParse(a,__,__,isString(a)),c)}],["llmmodels",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&
!isString(getEnv(b.llmenv))&&l(-1,"llmoptions not defined and "+b.llmenv+" not found.");t();a=$llm(Q(isDef(b.llmoptions)?v(b.llmoptions):$sec("system","envs").get(b.llmenv)));isUnDef(a.getModels)&&l(-1,"OpenAF support for llm model listing API not found.");n(a.getModels(),c)}],["javas",(a,c)=>{b.javasinception=toBoolean(b.javasinception);t();plugin("JMX");a=(new JMX).getLocals().Locals;b.javasinception||(a=a.filter(d=>d.id!=getPid()));n(a,c)}],["jmx",(a,c)=>{b.jmxop=_$(b.jmxop,"jmxop").oneOf(["all",
"get","query","domains"]).default("all");isUnDef(b.jmxurl)&&isUnDef(b.jmxpid)&&l(-1,"jmxurl or jmxpid is not defined.");t();plugin("JMX");ow.loadJava();let d;isUnDef(b.jmxurl)?(ow.loadServer(),d=new ow.java.JMX((new JMX).attach2Local(b.jmxpid).URL)):d=new ow.java.JMX(b.jmxurl,b.jmxuser,b.jmxpass,b.jmxprovider);let h;switch(b.jmxop){case "domains":h=d.getDomains();break;case "query":isString(a)?h=d.queryNames(a):l(-1,"Input needs to be a JMX query string (e.g. java.lang:*)");break;case "get":isString(a)?
h=d.getObject(a):l(-1,"Input needs to be a JMX object name (e.g. java.lang:type=Memory)");break;default:case "all":h=d.getAll()}n(h,c)}],["snmp",(a,c)=>{_$(b.insnmp,"insnmp").isString().$_();b.insnmpcommunity=_$(b.insnmpcommunity,"insnmpcommunity").isString().default("public");b.insnmptimeout=_$(b.insnmptimeout,"insnmptimeout").isNumber().default(__);b.insnmpretries=_$(b.insnmpretries,"insnmpretries").isNumber().default(__);b.insnmpversion=_$(b.insnmpversion,"insnmpversion").isString().default(__);
b.insnmpsec=v(_$(b.insnmpsec,"insnmpsec").isString().default(__));t();plugin("SNMP");var d=new SNMP(b.insnmp,b.insnmpcommunity,b.insnmptimeout,b.insnmpversion,b.insnmpsec),h={};h=v(a,!0);if(isString(h))h=h.split("\n").map(e=>e.trim()).filter(e=>0<e.length),1==h.length?(h=d.get(a),isMap(h)&&(h=h[a])):h=pForEach(h,e=>{var f=d.get(e);isMap(f)&&(f=f[e]);return f});else{a=isMap(h);ow.loadObj();var g=e=>d.get(e)[e];if(a){let e=[];traverse(h,(f,k,m,r)=>{isString(k)&&e.push({o:r,k:f,v:k})});pForEach(e,f=>
f.o[f.k]=g(f.v))}else h=pForEach(h,e=>g(e))}n(h,c)}],["ls",(a,c)=>{t();if(isString(a)){var d=toBoolean(b.lsposix);isDef(b.file)&&(a=b.file);var h=io.fileExists(a),g;h&&(g=io.fileInfo(a));if(h&&g.isFile)switch(isDef(b.lsext)?b.lsext:g.filename.replace(/^.*\./,"").toLowerCase()){case "tgz":case "gz":a=io.listFilesTAR(a,!0);break;case "tar":a=io.listFilesTAR(a);break;default:plugin("ZIP"),a=$m4a((new ZIP).list(a))}else a=toBoolean(b.lsrecursive)?listFilesRecursive(a,d):io.listFiles(a,d).files;n(a,c)}else l(-1,
"ls is only supported with a string.")}],["toml",(a,c)=>{t();isUnDef(af.fromTOML)&&l(-1,"TOML support not found.");n(af.fromTOML(a),c)}],["slon",(a,c)=>{t();n(af.fromSLON(a),c)}],["json",(a,c)=>{t();n(jsonParse(a,__,__,isString(a)),c)}]]),E={};isString(b.libs)&&(b.libs=b.libs.split(",").map(a=>a.trim()).filter(a=>0<a.length));isDef(__flags.OAFP)&&isArray(__flags.OAFP.libs)&&isArray(b.libs)?b.libs=__flags.OAFP.libs.concat(b.libs):b.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(b.libs)&&b.libs.forEach(a=>
{try{if(a.startsWith("@"))if(/^@([^\/]+)\/(.+)\.js$/.test(a)){var c=a.match(/^@([^\/]+)\/(.+)\.js$/),d=getOPackPath(c[1])+"/"+c[2]+".js";io.fileExists(d)?loadLib(d):l(-1,"ERROR: Library '"+a+"' not found.")}else l(-1,"ERROR: Library '"+a+"' does not have the correct format (@oPack/library.js).");else{var h=require("oafp_"+a+".js");if(isDef(h.oafplib)){var g=h.oafplib(clone(b),n,w,{_runCmd2Bytes:B,_fromJSSLON:v,_msg:"(processing data...)",_showTmpMsg:t,_clearTmpMsg:M,_chartPathParse:N,_exit:l,_print:q,
_o$o:w});isMap(g)&&(isArray(g.fileExtensions)&&g.fileExtensions.forEach(e=>{var f=e.ext;e=e.type;O.has(f)?b.debug&&printErr("WARN: Extension '"+f+"' already exists."):O.set(f,e)}),isArray(g.fileExtensionsNoMem)&&g.fileExtensionsNoMem.forEach(e=>{e=e.ext;R.has(e)?b.debug&&printErr("WARN: Extension '"+e+"' already exists."):R.add(e)}),isArray(g.input)&&g.input.forEach(e=>{var f=e.type;e=e.fn;I.has(f)?b.debug&&printErr("WARN: Input type '"+f+"' already exists."):I.set(f,e)}),isArray(g.inputLine)&&g.inputLine.forEach(e=>
{var f=e.type;e=e.fn;isUnDef(_inputLinesFns[f])?S[f]=e:b.debug&&printErr("WARN: Input type '"+f+"' already exists.")}),isArray(g.transform)&&g.transform.forEach(e=>{var f=e.type;e=e.fn;isUnDef(G[f])?G[f]=e:b.debug&&printErr("WARN: Transform '"+f+"' already exists.")}),isArray(g.output)&&g.output.forEach(e=>{var f=e.type;e=e.fn;J.has(f)?b.debug&&printErr("WARN: Output type '"+f+"' already exists."):J.set(f,e)}),isString(g.help)&&(E[a.toLowerCase()]=g.help))}else printErr("WARN: Library '"+a+"' does not have oafplib.")}}catch(e){printErr("WARN: Library '"+
a+"' error: "+e)}});(""==b["-h"]||isString(b.help)&&0<b.help.length)&&D();b.format=_$(b.format,"format").isString().default(__);__initializeCon();z=!String(java.lang.System.getProperty("os.name")).match(/Windows/);D=getEnv("OAFP_RESET");var V=getEnv("OAFP_CODESET");isDef(D)&&(z=toBoolean(D)?!1:!0);z&&isDef(__con)&&__con.getTerminal().settings.set("sane");if(isDef(b.secKey)){toBoolean(b.secEnv)&&(b.secRepo="system",b.secBucket="envs");b.secRepo=_$(b.secRepo,"secRepo").isString().default(getEnv("OAFP_SECREPO"));
b.secBucket=_$(b.secBucket,"secBucket").isString().default(getEnv("OAFP_SECBUCKET"));b.secPass=_$(b.secPass,"secPass").isString().default(getEnv("OAFP_SECPASS"));b.secMainPass=_$(b.secMainPass,"secMainPass").isString().default(getEnv("OAFP_SECMAINPASS"));b.secFile=_$(b.secFile,"secFile").isString().default(getEnv("OAFP_SECFILE"));let a=$sec(b.secRepo,b.secBucket,b.secPass,b.secMainPass,b.secFile).get(secKey);isDef(a)&&Object.keys(a).forEach(c=>b[c]=a[c])}var C={__format:b.format,__from:b.from,__ifrom:b.ifrom,
__isql:b.isql,__sql:b.sql,__path:b.path,__opath:b.opath,__csv:b.csv,__pause:b.pause,__key:b.__key};isDef(b.inputcsv)&&(b.inputcsv=v(b.inputcsv));isDef(b.incsv)&&(b.incsv=v(b.incsv));isDef(b.csv)&&(b.csv=v(b.csv));var W=!1;if(""==b["-v"]||toBoolean(b.version))W=!0,U();if(""==b["-examples"]||isString(b.examples)&&0<b.examples.length)b.url="https://ojob.io/oafp-examples.yaml",b.in="yaml",isString(b.examples)&&0<b.examples.length?("?"!=b.examples.trim()&&(C.__format="template"),C.__path="data",b.templatepath=
"tmpl",0<b.examples.indexOf("::")?(z=b.examples.split("::").filter(a=>0<a.length),C.__sql=1==z.length?"select * where c like '"+z[0]+"'":"select * where c like '"+z[0]+"' and s like '"+z[1]+"'"):"?"==b.examples.trim()?(C.__path="data.sort(map(&concat(c,concat('::',s)),[]))",b.removedups=!0):C.__sql="select * where d like '%"+b.examples+"%' or s like '%"+b.examples+"%' or c like '%"+b.examples+"%'"):(C.__path="data[].{category:c,subCategory:s,description:d}",C.__from="sort(category,subCategory,description)",
C.__format="ctable"),delete b["-examples"];var y="",K=!1;isDef(b.outfile)&&("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"===typeof global.__oafp_streams[b.outfile]&&toBoolean(b.outfileappend)&&(global.__oafp_streams[b.outfile]={s:io.writeFileStream(b.outfile,toBoolean(b.outfileappend))}));isString(b.chs)&&(z=af.fromJSSLON(b.chs),isArray(z)||(z=[z]),z.forEach(a=>{isMap(a)?isString(a.name)&&isString(a.type)?$ch(a.name).create(a.type,a.options):l(-1,"ERROR: chs must have a name and a type."):
l(-1,"ERROR: chs must be an object or array of objects with name and a type")}));z=()=>{if(W)y=U();else if(b.jsonprefix=_$(b.jsonprefix,"jsonprefix").isString().default(__),b.jsondesc=toBoolean(_$(b.jsondesc,"jsondesc").default("false")),isDef(b.insecure)&&toBoolean(b.insecure)&&ow.loadJava().setIgnoreSSLDomains(),isDef(b.file)){if(0>b.file.indexOf("::")&&!io.fileExists(b.file)&&l(-1,"ERROR: File not found: '"+b.file+"'"),!R.has(b.type))if("json"==b.type||isUnDef(b.type))if(b.jsondesc){var a=new Set;
io.readStreamJSON(b.file,d=>{d=d.substring(2);isDef(b.jsonprefix)?d.startsWith(b.jsonprefix)&&a.add(d):a.add(d);return!1});y=stringify(Array.from(a),__,"")}else if(isDef(b.jsonprefix)){var c=io.readStreamJSON(b.file,d=>d.substring(2).startsWith(b.jsonprefix));y=stringify(c,__,"")}else y=io.readFileString(b.file,V),toBoolean(b._shebang)&&(y=y.replace(/^#!.*\n/,""));else y=io.readFileString(b.file,V),toBoolean(b._shebang)&&(y=y.replace(/^#!.*\n/,""))}else if(b.jsondesc&&l(-1,"ERROR: jsondesc only available for file input."),
b.jsonprefix&&l(-1,"ERROR: jsonprefix only available for file input."),isDef(b.cmd))y=B(b.cmd,!0);else if(isString(b.data))y=b.data;else if(isDef(b.url)){b.urlmethod=_$(b.urlmethod,"urlmethod").isString().default("GET");c=v(_$(b.urlparams).isString().default("{}"));let d;isDef(b.urldata)&&(d=v(b.urldata));switch(b.urlmethod.toLowerCase()){case "post":y=$rest(c).post(b.url,d);break;case "put":y=$rest(c).put(b.url,d);break;case "delete":y=$rest(c).delete(b.url,d);break;case "head":y=$rest(c).head(b.url,
d);break;default:y=$rest(c).get(b.url)}isObject(y)&&(y=stringify(y,__,""))}else"pm"!=b.input&&(y=[],io.pipeLn(d=>{try{isDef(S[b.type])?S[b.type](P(d),clone(C))&&y.push(d):y.push(d)}catch(h){printErr("ERROR: "+h)}return!1}),y=y.join("\n"));K||(isUnDef(b.type)&&(isDef(b.file)&&(c=b.file.substring(b.file.lastIndexOf(".")),O.has(c)&&(b.type=O.get(c))),isUnDef(b.type)&&(c=y.trim(),c.startsWith("{")||c.startsWith("[")?b.type="json":c.startsWith("(")?b.type="slon":c.startsWith("<")?b.type="xml":isString(c)&&
0<c.length?1<c.substring(0,c.indexOf("\n")).split(",").length?b.type="csv":c.substring(0,0<c.indexOf(": "))&&(b.type="yaml"):l(-1,"Please provide the input type."))),isDef(b.type)&&I.has(b.type)?I.get(b.type)(y,C):(isString(b.type)&&printErr("WARN: "+b.type+" input type not supported. Using json."),I.get("json")(y,C)),delete b.__origr)};b.debug&&printErr("DEBUG: "+colorify(b));if(isNumber(b.loop))for(;;)toBoolean(b.loopcls)&&isDef(b.outfile)&&isDef(global.__oafp_streams[b.outfile])&&(global.__oafp_streams[b.outfile].close(),
global.__oafp_streams[b.outfile]=io.writeFileStream(b.outfile,toBoolean(b.outfileappend))),z(),sleep(1E3*b.loop,!0);else z();isDef(global.__oafp_streams)&&Object.keys(global.__oafp_streams).forEach(a=>global.__oafp_streams[a].s.close())}};oafp(_params);
