var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20240702, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64("H4sIAAAAAAAA/+09y3IbSXJ3fkUZsxENakFwpJnZ2ICXY1MiNeIEH1qR2pmxVoFtdBeBFvsBdTX4mNFc7aMPvm3Y4aMv/gCf/DH+AfsTnK+qrm40SEGL3QhHWAcR6K7KqsrKyncWPlNnc53vP1fzsoi0MUW5peDf1qNHr0041Y8ejdS4CC/n6s1lkuq36k0xr5IiN2/HW1sX4ZU2KsxVks8X1UAtzCJM0zsVqjisQmWqchFVi1Irs4hmKjTqnSnyAXSIVVWGubksysyopFJVgVD0+0VyHaY6r9r9kxzeF9VMlwr7hJUqSnWd4HDJjyHOZ6guZloViwomwr0jgDjRCmZd6VLDiLOyWExn6tuTw/OXYTUbqPPfHiMcXn9gVH6c5O9pdoCL6yTW3jR1aQhimJoCwYbzeZpggwLmP9za+lodXcK6x4ikMUKlT3umyHTr0Y/JHP+ORvW7BMYuKm/UmWaUqpskTXE4fTvXUcXjwVevJS/KVHGS786TuR7CVM54i1RYru4JuzHmrdwDnC/0eKiezXR0RYOniakMNE+LG0Q4rDql5+F1mKThJAVM8xCw8s8+UychbJA8GW1tfZAJqA/qQJuoTOy3rQ878s994G/QZWeGZAeNzmcwaDUDnMRFtMiQGvD9TKdzer+P+5nDpl9rdRPe4brMcheYNNGLUX09nA6FDMxAVTqbp2Gltwkq4p+gIvXQFwA3D0ujVT+59HeFUYxbtTA65t5RFqulOQEAAoR0xH3gib7V0aKChyoqsgxf8bSuFhPYnXSAE7/S5Ta2neqKkE1QoiKvYD2GxiO6XjHeQAZD2DgvXIfMnLoxPSEUOCTKrVlOjJyqfqwvw0VajVRUlVpwBEDr9gymupsvISjGg0z0WpV3Qm3hoip2Yl0RBQrGyyLjNeSW8/C5m8OZRGotgQkhufC6YJ12jtjbvE8F43R6P6K5PPygDnMkXMOoLcooyaequKSvCFXa0d6Xqk9nwoxoBYDaBIgGUBzG12Ee2aU46BVDxll9e352unt+fHYKh68E6oTtnhdAMDhUQO0ClYcZk0eAaw6IPkJgkPza8H4xApHWAKmAGZmnXQ4MTwhjXFie9iBCInPN+ANuhZu4Bw8GBPvZ+e/sEcauMDAdWOx8pe+4B1BHkgt/ysL5LrIJC91yKhj/Mrmt5+yog6AwQKLsBkRkMC1AN2VSAenjZBpwuHMNCDixBlwSuAAkBiAYcStv9/AJAWiB5264MfkK+PMQkdAA7JM3v3bnE49e81SOgSaM2inHjPkiBZ60DA1JUfNbHdtJwsmqWS32XpRC9690VSb6WguV0GlqTP/1q2PbI9PVrLCYge8Bci/XkFHP52FWVXMlzWXzYQpxcnkJohO4KQ3zzeEFkwSAgmMSZmYVaH0LclNRG10xD65FO8B3EvcXQKzVthXVNSPJvXMki6HlrhgvrJvvVjB4QwFwrWjuaVHM7QGwxEf7QC8Ek6gHIXuY3NGTfJFN8BhdKqNhv2Nv5A8CMkrNEgUSRJRJMoxljxHQbMnnOQImm6s+EAZS3TbSInEC6hrdRbL7aTJB8M9QdAC4NMkSlOh8/C4BXaaCAwRPHGKLl2F0RQcZJmxgqiVLoQqPCqpzgWFWjhLR6jihaA25pUPDONvRtyHyP/z6Ha4gjBBDrPghyYPAmoTGmxEpjK4XIQPfwJozWlAboAGMRMv84qYoY5TkQQQCe1qUd6A0LSb2S4B0wqrSR0wCh70GWmRNpEOJiGZhPtWe7oVKKbK5mpdVRZEC4hwYxM01bgx1Nev0TfLLAgCAsvZcmLTV2UCxvLMruyxSUMFIUpWwh6CKI9MfD0CVhBM5JsyOQSqMSQN9jjomNVDmLq/CW1gTanR4us1od/ddpg2+HhbldLcCwVYmYTqcVVmKvX8oFnRkCH1MG3gAFnQSxkm+1/ub3vivHWXAqzF8lqeeOo8v6q/Ef8cIf+yklyFBB7M3BpQ1pg9ig8ZrtGdlLXV+DRwpONt//nL86vD88GKPTxmKOO4Hn4CViOIEvbMkD5HNw2vc4KTCRaAmy9sDH+LEgB54h89h0cJ3+8j5SJEE9ncHCEHtGfgtzKOGWmrUH+E8w/S12d7aAg2W1OD/+vd/+O//+EeljpyOZLa2joUaPSWM3sAwoHAJj2roSapvtXqnBdLBJbopSqfzJxXQk5U/20O3gWEKFA0sAEitRPUP+A5pErhUhDimWYyF4khfr2fc1tm3Gpr6stqOR+5XX5ISIh+JAYs+SYJv1lD28JjlOm20MNcEAFUQq4h2aI7xhHWdg6fP1PuFZinMpiYOTW2mk199iUYm6nsNkQP0K/NDauOPUzDFWD8gA8PAVl/yECB85TtCf8Sb0C9RigGZ0de9+v0YqKbcffzkC6svJygLTo92X5YFtKkS7FIvV+bHuuJ9C8aGBo5whoLvG2BVuUg6JU+lL2oEhi2HXJdAm8oQ0xMVAaleRr6paH+jIoYOaEIDcV9iZ4H7nZ6oi+IKZdK3311si/DJRbed0hTAKgdKYjnrbEqUB8R6c40MgP5S5zSjrmlYAm9NgU0uQviQwQRSOQ145owKoKXOrwNi9/BZ2GGwbcFQF5zHMdmmZKV2ADWe4tRnmn8AtGGtalEi83XCA7fYcqY0Rh2G7GDBQQxkEAH/vGMlHN4AKdHZBMmOf6Y/1npkFhMKTsLyKi5ucp8UsrhiFc9/z4+8VnnsSOb0wCca0oJDpFnniZFTJicYVo973bBAYUnM5TSyTDD20BXgWYcoNR1ATw9DacbNoL2n2yFeIlA/iJMqkM8MQogCCBvtICOqD+r5GYyZIHn67YCR8vAw/wx13MjUbOOEH+B5QiVVLwzZVSC+W5gqwxvo9TJEeJ405u1KiWF4kqpWdGznmb7FtdvzVOrQd8YA6yqRuukvMN5rPNuwatA/CjkmTtwDpDDWUZKRwECjDBhRaHmqMsgUD3lLEM1mphE94hsoiRwRNNj0BXrW4C9wc5qxvk0q2tTQiI5BAFOhENqre5gK2rof1BmcT9i3DMUjGNIGBgC+kZElA4vZP79Q/f0JHPUwqtQ5KxMX5BGAXhMNcJFvxGSEI9SqyBDsxdnJsb8ftylzju+Pz28bW9bBT8NJNIT2tzzNW4IH+/99DbFrOXchN1Q/7N/X0Mno//nXP/6zuKfC1CMGEIMXM9gkp4cxvdY6ITkGYktQLMyjdEHmR35n/UtOfR023GAX90rWD6uEKx0dQC3usXoKCqQOc7HdUWr51qiQo0et7H9wimjfaO0BBO160Piq8RHjdOlx5+hIi3XL2s52Jr0/lrop8oD0kFJnoJnEbFKSsWNJuNnhgzonQQMfUK9tj+Rbr+RPEVcOApuz2L1jFcu5UHEsnRKRkzNiCSMeCqIsrVbjHOyfBXAxlLQ1vtljxMyg1ih5F1DGXS5SZg9o3MkoRYmMifXBj93hMJ3Pwh2wSUF2R0B3Oo3t2AT+3QIkGJusdJbFeqWGZiDiGylYyzNshF+ZIU5kEvKOFC+d47lKkx+1vy2vNBozKLvd60DkY1tu0MRCVYMRBYa2oDZab4ZhMnSNhtjrnBqKAphcXvoT2O8eJQgDFstEoSqYyFfCIbCgUvs+fobK3gV0T8KurjpvfJDqqISlLOyD0AnzBXDWFDCTglkvbAYEj4A1er73BsXHW+tmCT0vC7wFsVqRig8Qg6GoKFNdkVryQZ3yXnYTCByIWEwGMLGE8oq8TaLst2VA1N1UBeguOcZtLtESbbo8yIQ0HQqp2wZ0Cze0UnGj4/JQOYBRk5hFXy3YQn/HLM1RSxZyZVmUZIWBuDNVa/SIVKqaDjxjnnGOwwd1+4CFOXvOaH3+fK279c83X9DL7zneIerbDdcH7xYOGJJSJ06MhopfsxhSDu22wLhXGYxifGoR2yG3NHHpHdk4YASIawpIGLqIfBPXq0cMQKZlkSx5wNKM7NDbyt8W9IbBG2iZzavA94RJZyOOQttXhmPjoNTTsIytzeqJXRmQwTbZQaeVIQ191a8NEs8uIpFNEfLMoUgRX4EoBM6MIM/9kh0Bu1UVjN/1ZTVuNYsNkRfIF2uITiw1HrVwXb/7JAk5AzOH3iNkPAZONosvKtc3MjuaiUZUt1bKi0msHbXryA1ZHw/D/RqymOgM2aZVBDqlzQpm/yeKFKAyGy/xxnoJhj1bCH6DPqr4YTkAAT4doGdooOYFcE3A1by4weAdulygjzsbTSRYkS3CmocnZWgxf1j8c1MFbdMkImlNGpQjmRpcvkjTj4bHjckozO3xlAkyfEK2VcDYgiBnLZCJ8XFGflzmlz6zJLlCbYnUQDtv+3lFIakhW/ysgJ21gEvzjwFflBVrl93oqU1i7IGjUFMr5rG7MDyAmXWrCBIo51GNPXNiaLuYmQWJcDKC6TkR/56ciGd+YNbzI9buDXllRZczPccsFxoOvga0+318fz43H+g9FfNpILMd/pomV1reiJIMCCymmnI9aEkB6svCZKMl31mk0zsXPfMHIxXBs7Ctbe1Ym8f/UardiSuyy45uj7PKaUn0iAN4gVFRnaLa0UOfdmjhKxZwPyAwwxkOfLgXjHOayu6TLUju04bPFISa8b0eola0ZCRoImfn2DYpi5z49nVYJhz4NroSXxPh2NzvisWowQO+2GmZsNOs9hWJOWWiJOHXH0EuGNpgqnxx0XRMsI92f4WX1vqs0FTADAezmM/p8Ndq8JIDFwfHzAozDyPLcNjfep5MJaqmc/a81urVfX7XYupL1RlswHExNVVoZk1XCtlpNiwTqtkC9mAHXVdEcQSGVQeaMxqcoCClLG4bvsg/wU15H8VmsXPS0HbWSToNn809EO53gDY8hs9YtzK14OLIY7GeI3G+co/dBrdi2nOQT9UdduM519/vB0Nt2dv1wAkkgmGw7B5zDs/ujmQULXkf+yIQATM8WRFREppy+W5xrW2bmnOjmxBUmBUMnF3kl8ntku7DQnp7tavSc006Sjaa1gXd0c3oeShpHMk69AeqZ7yK29boZ1ubMHIP5T0Eh048ap8YZgfkJTi9ewFK+hnBfAFMIdWTEB019rmHD3Gq7jfcqg1/+iy81pKhs4djyRidEqLTJ9tM/1rleF3paP1gw86BnX/QijnDWTdDPKLh5TAp6OvudIHG3y66/+m/HdvZxaIJJHCugIKwGNREDQefYAqBDjgMqjvFkcSJj8++uXhxeHIYWEuhw3xAECQznRIV9MmSP0YHzgiOTjxQN2GZy/c7jeH4gaqSTAOJZfORmoDZtB2sigGLieheo//53/5TPXvRtC1r7a6VgXUzA5GAsfdoNh5twqOc5BHnjHXaVUDEl8l0IedCGAVjCoejeAlPcBcTkixAVHp9ZXi/diKm4ZTci5qj55RW1DR7rSpMmW4SY9PVPjzkGC+R2KE4QDwMtZOFRjSVvd5PONVRkF2bYGBTUn+ihNsA2cMwngQ//9zrgGnyBkxEiIXZJ5hkMlV6gNlIIxUghQOBYxbvcFaYavT4yRdf7kYztLWD7V57zw+errvn8WSs+sj5CBHbG9r/ePIunkRL/jvUCjF1DHUSzu5pSh+nLSIEjHd3QpCu/F4az0Nj7muM7ynRx3bA04V89Z4+rol0SZOJ3/w1OVZZ0y0TNMopH8o5z2KM4hXvigmxpMkuENwBt7MAMVq60kZkrODOSOJ2KLQ6QQ1VHZx4wgq6IgHTXIoyjIAOFW7ASL5UsyQf/e0bJKC3ozeoZcIfi/C3tuccXk9LDUNKb3kAEhNIsNF7d7n3iyfSa/ZkJFn8SrXpkxSUNSkUFYjN8CWEBDJhNc7b2ZsuUE/zRv++M7aLMplSog4CHSqnsktmqkcn7BfFPoGdgGQWyXA0iC+COE/XZdZOkilbA5wuAFTFgww9i97i97uLtdF7U22K6wMoyvXodk4iBizLZls4GI8lNyQOaqTHMdcR1C6NoXLwjY5AN22KFhEh8gq5O6dkvDh/8tWvBvDni19/ibL8xflXj5+AlMCUXFJOc9uHlCuSDTAuL8Ebc76YtByh+wqepaCikhsTIxHNzqqfJdNZpST2DGq4juBx7WcGqGE63fYGga/+COfUIxHPKrwEeqtmWXscijLAnvdfnD/CJb4630f6kAR7gH9AqzW41tqn48AZG7mJFiUFh7793Yk3J9b7l3cSc0wp0tpyNb/OgfL1vEDqtcpLHfjrINdj8h2vSbCUA7EZkiVQ74qkO3BiU2mtT9A6QUlXoTPayklyILlo6F6ggrpaZ5mBLa05+QK0xUWWIz9OaCnkI0VTTqKnwHlNezCDBlgzcDpdpGHpJ+s7I80SYh0LnOjqBrOEeWjD2PbAs9fEVm7QpgTq9783v0QnyBKbPz5fe1M3taOmFR96LqmbNslRbApMtPBqM5xOZjOtOHfEYuXHZD7ArKsB5lzZjK5Sw6kxGA7095m8yMTRUWFdTvByvcB4I1NWXliouOm3DYjO7gbOaJPeqRHb676zlgD+3dFLHnd7+cDl8adIYPaMbGaDGNbKM0dng95SNIhdMoAzUN1oXpNFksZLmQ81YFeIswyac97JPDDsuEA3BxepubMtybw20cbms/UpXTdEw8x4krkxO2SxMosOzL/a/+7F4ffrYp6zxTYlnxkas6o6bnvqAq9+Ohk6W8KIs43gLfNAm3Aj7G7p3J+vbXKajZmcZubiDg2N3qav2oo7TnazhXOY72ZPOaBnwB4IcVs5fkf7edF0lKFZKYnVXvkVLOYRhQX66KMOKXtTclkJc9tqRxwCHCiocyahH/nIoeMcW/meqW6HOONS+iG36Yt6hd0TL1ZE2QKIkW44nG0kJac23wzAiiorvjwB2ihnKZzLn9eUGxhfMLwr2F2u0WK4OMBN7EP38UJ8GAy2K0ojsomwS/SG1tGaBPc+3QzFASAmqE4pn5sK0zphIn52B84Xsx5b3tLEmRyU8shqXcMb2TckZmlUu7KHwta2HcoEO1kb/NiiqmRbDGLlBxEvGKYw4EgU1dhNUrTshgrQU6q3DX0Wc+AREViDI0d3tCD33K2o0f0S1RbsT4rGUz6Gv10Q2Y+8hBDOerXH9D03aIJ6jGCy8PYZ6S/HOp9WsxE+SLJFZhWqlB43O371OfY0V8n8u1lSadKyTnVYPk2L6OpliFoxZmya1spuXGOF4Xo1webIYWz7VSuVtJGRw4hLJImTMAUyV/2DyZMBRkCS8GACH+7O36cDdfoY/3+Z0peXYqnj51c6NrPkshqAzRCWV/TsvELmU8bwhRjdBXzYbh+e79fX0m43paYBIDPTeolZ2xQSfukXlll0WmbD6WfUbtt6nPV1mCK7B713KfZOO8DuXMsNXVOXNooAFuS6aewebrsbBGipPWshL7GleO6AM0wBFN++mRUL0FsmWtX1N1Sa3dvvOchlcePLZYSMjz4F7GOSWPVWn6zNJ2+zDfFJAJRMc45o+xyLOP2OWCBeQR3OtQqnNCPuaCMGy66VfSujRDvGP3A4HQjpaOunp6tVTlHoENFe75bD3WZNkNt9V+LdK7zvTzn2TFjfLVpNH0I+R6v5Ooc6kL2Z/agj4Su9NK7cmC3VGdAdtt+dLnLsBqILb3tgG4aSfOJFxD3JkSI2lUTfXe1DOzxx/rs1seNST6hbZK7HDaJWfcJfXf2GZefbyP92JZAzpj6N4aQTP6MOQ0AK17gjM2Z0lLjkQrxG9axa1cRoUKaS9QkjkjSWZFhMF6svupBMy80425e1XluiF80K0Eqd3Dw4fL7/+vhioA6/f3Z4PFBHp8/PXp0cfT9+fXp8tn+w9GAMOwTi5wcQUiBlnj/78vGvPx+os1f7z44PQQSdnV988+oQXnI77/vF4fcXLHYOntMRxJ17we6NTpJzBu4Cc+SrJKJsZls/VJu34iJpgqQ4o2RE7jsuMpN3bdpp7WVp4b1fFJU+wYKXhxG5fwwIgf/Gp2en49PX+O3k6PToZB8+8KOTw1dHzwgF8P1w6GZ8IFXVZZOJCeE4k4uLbqKFAXS4SuxSOTCHJgrneg0YWjpI/9NFmtaextYHmzJu2loqJRcCP3CZhR8bMoNTtdf7qd6xEcniQQMho+BD0Bkwa0G0ATNmAHu9vgeWZfyg3ssR7hIGyb72ylYNrw+YCHGDkAujirKKOETtsZdWQc+Fy+xdFXE9Ob7w8n8/jt1jEQjXL2+EHSA4ypLrNA5aeXNrhmIbShHfVlIXshhOpW2oL7UK7xnONpWyUFgMUyt2jz//HJgvMIWdx84iohY2BQLDMVnSIUoOsLhiXbxjRcTecDjcDNoRGmUNPGiWLacDgGHB93bsKZebhvByWxS7qkCI7ySp/VqSg0Cfa9SztsxJOpQgKs9sSUjk2VZY1UKZ55NA9anSBE8EV4KDpsXN6zqZG3J8rarbqqOYieFMTr46gSY/5+xnNxMVsrClIC2XtpDB64bBxbHBtfnxfmm96zKwjLsa/588HINsDoMslrfh04daHslCbQ2GAmLDa6JKVTsK8NrAHYbAqjoj1etTYG+kQEk4PB3YpPSRenUIqgcaA0U+Us/3j05BQ0EsAQGP1NHF/vHRM34QJ9eNBmA6jFQwCpjBH8kh2pMiKgnB2GRVmq8NMdr7b9BJQz4av2jFOxYCd4L6oNxVQXVd7CkmxEi4BsZlAxNvWfGvq9q2Xi0wcziY464wYmwiDEYjg5V6BaERnMGFr5FjVY2HXv+yuKXr2ijkTGlKB0fPn0ueUpcLcCl8c3wiqvm6TBUjOWnGhosrn9kcl+XimLb53ZmfhRgLk9xGulgPLy4bNTVNgUaYOjk7ODx21wGsdLU5/d6Xma4eBPEXoAQNxByn1LRkt0jTMAu3ByqgoiG+owu+SaIJXTWT2cRDcwP6azaQi4guxYRhECyeMX3tSt/xSx7C3q7hyqWweFIKwr2YmNTOkXRFqDjhZmMGkGBVWSuaZk+WXIRg8xZsoWNo7T7uKzmU9JliajbABk8xE4gPn4yzFDOpy2LWJcS6omZz1FfDpEW0qNBWf9ZHGebmCkfs/nmVPrWnqgG74eBwNeSd0G8/BnrTTTpQTwbqi4ECpLRrkx7wKzd1RfYwl75njgZ44gxusB2ihEuaGv7W9rAYb4tCU927bJ9BN1Z9M0skV8aCWbbymul9I/WHP/yBLoVAbXSv9+bx4Mngi7c9b0p7XIPVMcm9Hl2JhMnF/eDNlx++egvih2oNuPQCQK8sslmdprmWe4gG21DUbMNpmlSv1eHl67hNzNU91TFdTqZxBfu838y3GfgiN7q7Xr6Vw97I9kTkUUd6Jc5Uwbi1g7xwDQ3x8abtxnNBN5UJ+oyS5T+BsqDbpogLZ+CTA8+JIoisC7kLyMiF1fvNAp5/rX6Dp35EWtUo1VOwcb4GdqXe7GRJPvr8LX4Ib0dgLr7tDTHniJRVnVB1TpDkVQBCM9bRY/n7RP5+IX/xz+Su0obv6jFJMFR0rSVCaVRbkALFt2eKf7hPvgXjOd5dRnFe5Dsg+pLIdqkTb4wkehFGohVlk6Sz81V9ln7pDj/tVZNxqJg3YMvxsy3L0KIs3utFeBp3jBJ6CecJZcbvgFaKaW14K1tiDHy9GWKMW7gX7YydH+vQ9G2vh5jDW8jGNh1pmAJLqBaxHk3gbI7wWoLm6yKf8nuY+wi/9eg2ir2vfO5oyTSLP4FIs3gzJArAWlX+F52xeczx0Mk1NBkgzeINyCgiBn6NH6c0wluuxnHQV6a64BCJX85sZRzXHFSJMzVcIadjc3UtIQ9i9Pv1x3CFdPX9z7RadmbDUSDzsR4k785oIxxYnNUUuuomVFtSrW92XNIcw6frnh7g77xwC7TU8xTsdne9asCAAgmTBT/9TDcCXBaLPGauftSBjIHzMNU7RkdA9tcbUzwoeA1rx5KRNGANaYqG2047MX9tMo8nG/JN/YnJ+Guk4q+ZiL92Gv6Gk/BhfCm9aoweTyS+ChvKCmbN70FV0FSh3SfpHvjptuKxmuQF8HEuv1qm5bwQ4NQG99AS0tIx7EsdSyVZu1huecfxayqH5UskGwHqeJJQvkXnKWIwmIxI9/mg5mBjfJyNKvHWqN75Cda6t1273q227rpZusMqtnczkUOX+tqqQsSau66NyxV+8FLeieAxN4evH6noggN9negb665sVedRPA+LV2wOEp4NTjox+v9GMcQhpnutzRUw2WszfAEhtcRf+75ir9TTqaqeeEQaFBbZ4YJpZguDOgTIEp1Ls7PjuySPixvJfcXpLIf4vRm5e1NamWSeftQ1DbqFqzGVMbl6qHx7y1PK7QV5jEUpIggszgNQtFDT2vrsr3YnSb5rZluYLqJ+0Sfda+da2ZbbWzqaFcCasL9EXORG3pH6BQ/OxYpje1HvTut5nKDBNSGxwtDOxHCZI1ujcoc7sFmyGqAZ43ne6tCxsEBgbTLbWFnIX6ZowwDrstUQQ1sWPwdOv1y5AQ+RNy+VbhCI+ws3GmUb6xdt+JPcdMkGpae6xFQ7GLJXKt9lM8ve84waDebYbW0p9UiFi5gvH+7zSrbpaZSGCYzWPwnn/AAOcGKLmQ/wty3oqQ201+3oxuKyCQxvUmh8xzbxfsWQSvjHz8FIecoZ2N4QZjF5R4lxFkKLvr/BixrWJnC83mEzFE4XRXykH8X/pYZmQYn96Rl+hDnXBBd15KE6dDE+fi36CG0t7zh2kDy0VrZJJdcxCSa4XuPQ3rtUazaNqQlpBGDppTqQz+zRxnrvAfYdsIk4AEGPlRFIp3jbow4HHDpCIZHFvIeh9zMURqc2tYYIti/ms3gM6KLCbcXdcmDAk3cBt6nf+26DxLtMi66SQ7OV/JsEgm52R5ugj6lKC19zp9t87J0WZLaRpwuzl5eIjO72WJvIsNR8M0SGkCiMFDVdYPYTF0HjgpLOeB6rYZTs4K5myNwtG9Cs1pjpQpO68t+LpfHwN0kM9OpV7WOHOV/e8Bea2ISuSq2SkPNbMeJm42yprnR9LTJ2QZnaOTU7Kw7dNUraqI/vKfR/gUNNStBa2q7vWgnHQfE6eF9n3s/ACGXXpxkwhdi5ia0JIKiTPbMs4N1YdlIhVpzksSQrEkpsit1yHVYxXZ9m02K6oWhdMQVhm1ftyn3/GitXRovnn7mBLQiwdx03YrZLMSLvwpX1l+rd6rKZJQuwZTWWIkQuV9VeAsm331GflooqgOy1f/zNFVX6hEVFl4dUdEluG/7tkDb0Jbydf6KD2GzQQ2z+30XcdBF3+HQlSNWH1QzuRk+2P8CnJ/DpK/qEz77sePbV9tse/hoB3YJTb5tgfK8HKFDBm7fD24CctLf05S5gj+6dYjSCTYM69ujXvQ6jggpI1iaeDRbfdHpu+CFVEXjHrMN90Dxt5MlxN5ff40GZLXlRjHWj2BoC0B7wDh+igtiCvNcjRJKLX0tav7vXwUGtheDSSb6wl/qsvR32RpzN7Il36ZCnCNdBf7qIjC8jehqWcLTqDl7vdmidfu3IXfvT/g3DsBEYdwA9/tGHE7bT/PGh5h1J8pNPXQ6HJkw/smiv+Y07fhuLV9BVbbP2Bm2y3kZ+Dq1xXOzFTPCKzoz9sT13uzotvyjDUmzldmSVNBKX1nh2Hhh1eBvpdMe78Ix+xDLyMP/RxT+IDL/uxz+nuKKlzHe57QuOPF+97AetnRCpvLpvDwGSqtPHu5ZGilWyCWU4PC2qqshGqpfpOFlkvebzZySEVA/4aG/bzW1J53QlSO3LE5ym+SD27ilKQiBtjRNRGjqtE3WHAScYDRq5P60dtvzy4dmgJVehUOFUAFmFaN5e5vQ//YuNfBtyoIEEnG19JvnD/g+h2bw1DK9twSAKY93fglmG+UpDueQOheLWg93l+rWoLOgnQ+6F5oo/5EYz+UE9GqR9b4fzNHu/6sFURUNQvN/dI0jAqY9U0NdlJiCW2VNX48PZPN7VBHzN+RYBcr/0SvPP5P7uvSzGibLccISODAvv59c3csHuN0UxBUA2Nrxz7K5Om4CWPpzS692SXPP8gynAxPZ68GAoORLDBAilh7Jsr2cNePQNDPAqFPTV9Go8Uk5ha3k28UP8ofLTcWIKJmUrZUf8olvWtcrTkRveijn2bY+3PIb7rWG19CN0jd+fa48C34bco9fcsY52NcSH28pwrYZ23u435GgX5Sdbtxo/L7dnn7a78K/j8A/WqYDRxIncZjHZ8d7gb/K1YHLr0YgO1v2AcXj8CTzQizsmxm9Go4YLGs//H9UZKd7047r2Wk6DYu0FPlkhzTpcINB6z97M8EG9tPe70+/LxLoKk9S0bnRHCQIE0eNdGChK39rrEWp6RMvKQfb0l3VAy2ba3h5A7/cHX9qf98VfswjT5g8GUmOM7VH1gP2VqPaPE/8vknzNdUN7AAA="))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("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")))};

const oafp=b=>{if(!isUnDef(b)&&!isDef(b.____ojob)){Object.keys(b).forEach(a=>{if(0<b[a].length){var c=a.toLowerCase();a!=c&&isUnDef(b[c])&&(b[c]=b[a],delete b[a])}});var N=a=>{for(var c=Object.keys(E),d=0;d<c.length;d++){var f=c[d];isDef(b[f])&&(a=E[f](a))}return a},J=(a,c)=>{b.__origr=a;c.__ifrom&&(a=$from(a).query(af.fromNLinq(c.__ifrom.trim())),delete c.__ifrom);if(c.__isql){var d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";
break;default:d=__}if(isArray(a)&&0<a.length)if(isString(b.isqlfiltertables)){var f=$sql();d=t(b.isqlfiltertables);isArray(d)&&(d.forEach(e=>{isUnDef(e.table)&&k(-1,"One 'table' not defined in isqlfiltertables");e.path=_$(e.path,"isqlfiltertables table "+e.table+" path").isString().default("@");var h=$path(a,e.path);isArray(h)&&(f=f.table(e.table,h))}),a=f.closeQuery(c.__isql.trim()))}else a=$sql(a,c.__isql.trim(),d);delete c.__isql}c.__path&&(a=$path(a,c.__path.trim()),delete c.__path);if(isString(a))return N(a);
a=N(a);c.__from&&(a=$from(a).query(af.fromNLinq(c.__from.trim())),delete c.__from);if(c.__sql){d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(a)&&0<a.length&&(isString(b.sqlfiltertables)?(f=$sql(),d=t(b.sqlfiltertables),isArray(d)&&(d.forEach(e=>{isUnDef(e.table)&&k(-1,"One 'table' not defined in sqlfiltertables");e.path=_$(e.path,"sqlfiltertables table "+e.table+" path").isString().default("@");var h=
$path(a,e.path);isArray(h)&&(f=f.table(e.table,h))}),a=f.closeQuery(c.__sql.trim()))):a=$sql(a,c.__sql.trim(),d));delete c.__sql}c.__opath&&(a=$path(a,c.__opath.trim()),delete c.__opath);return a},l=(a,c,d)=>{c=clone(c);toBoolean(b.color)?__conConsole=!0:isDef(b.color)&&(__conAnsi=!1);a=isString(a)?a.trim().startsWith("{")&&a.trim().endsWith("}")?J(jsonParse(a,__,__,!0),c):J(a,c):d?J([a],c)[0]:J(a,c);isDef(b.outputkey)&&(a=$$({}).set(b.outputkey,a));isDef(b.outkey)&&(a=$$({}).set(b.outkey,a));Q();
G.has(c.__format)?G.get(c.__format)(a,c):(isUnDef(c.__format)&&(c.__format="tree"),y(a,c,__))},C=(a,c)=>{var d=af.fromString2Bytes(""),f=af.newOutputStream();$sh(a).cb((e,h,g)=>{ioStreamCopy(f,e);e=f.toByteArray();0<e.length&&(d=e)}).get();return c?af.fromBytes2String(d):d},t=a=>{if(!isString(a)||""==a||isNull(a))return"";a=a.trim();return a.startsWith("{")?jsonParse(a,__,__,!0):af.fromSLON(a)},K=(a,c,d,f)=>{d=_$(d).isString().default("_oafp_fn_");c=splitBySepWithEnc(c," ",[['"','"'],["'","'"]]);
let e=[];$ch("__oaf::chart").create();if(1<c.length){for(let h=0;h<c.length;h++)if(0==h)e.push(c[h]);else{let g=splitBySepWithEnc(c[h],":",[['"','"'],["'","'"]]).map((m,n)=>{if(0==n){if(m.startsWith("-"))return m;global[d+h]=()=>{if(isString(f)){var q=$ch("__oaf::chart").get({name:f});q=isUnDef(q)?[]:q.data;var v=$path(a,m);if(isArray(v))return v.forEach((z,w)=>{isArray(q[w])?q[w].push(z):q[w]=[z]}),v=q.pop(),$ch("__oaf::chart").set({name:f},{name:f,data:q}),v[0]}else return $path(a,m)};return d+
h}return m}).join(":");e.push(g)}return e.join(" ")}return""},p=a=>{"undefined"!==typeof a&&("undefined"===typeof b.outfile?(toBoolean(b.loopcls)&&cls(),print(a)):("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"!==typeof global.__oafp_streams[b.outfile]&&ioStreamWrite(global.__oafp_streams[b.outfile].s,a+(toBoolean(b.outfileappend)?"\n":""))))},y=(a,c,d)=>{"undefined"!==typeof a&&(a=$o(a,c,d,!0),isDef(a)&&p(a))},r=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||
toBoolean(b.chartcls)||printErrnl(_$(a).default("(processing data...)"))},Q=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||toBoolean(b.chartcls)||printErrnl("\r"+" ".repeat(_$(a).default("(processing data...)").length)+"\r")},k=(a,c)=>{isUnDef(c)&&(c="exit: "+a);if(isUnDef(ow.oJob)&&!toBoolean(b.noexit))0!=a&&printErr(c),exit(a);else throw c;},A=()=>{__initializeCon();b.help=_$(b.help,"help").isString().default("");switch(b.help.toLowerCase()){case "filters":var a="docs/FILTERS.md";break;
case "template":a="docs/TEMPLATE.md";break;case "examples":a="docs/EXAMPLES.md";break;case "readme":case "usage":a="docs/USAGE.md";break;default:a=b.help.toLowerCase(),a=isDef(D[a])?"docs/"+a+".md":"docs/USAGE.md"}var c=(getOPackPath("oafproc")||".")+"/"+a;let d="";if("docs/USAGE.md"==a&&0<Object.keys(D).length){d="\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let f in D)d+="| "+f+" | help="+f+" |\n"}isDef(c)&&io.fileExists(c)?(__conConsole=__ansiColorFlag=!0,
isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c)+d)):p(isDef(b.out)&&"raw"==b.out?io.readFileString(c)+d:ow.format.withMD(io.readFileString(c)+d))):isDef(global._oafphelp)&&isDef(global._oafphelp[a])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[a]+d)):p(isDef(b.out)&&"raw"==b.out?global._oafphelp[a]+d:ow.format.withMD(global._oafphelp[a]+
d))):isString(D[b.help])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(D[b.help])):p(isDef(b.out)&&"raw"==b.out?D[b.help]:ow.format.withMD(D[b.help]))):p("Check https://github.com/OpenAF/oafp/blob/master/src/"+a);k(0)},R=()=>{var a=(getOPackPath("oafproc")||".")+"/.package.yaml";a={oafp:{version:io.fileExists(a)?io.readFileYAML(a).version:"(not available/embedded)",inputs:Array.from(F.keys()).filter(c=>"?"!=c).sort(),
transforms:Object.keys(E).filter(c=>"transforms"!=c).sort(),outputs:Array.from(G.keys()).filter(c=>"?"!=c).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},
os:{name:String(java.lang.System.getProperty("os.name")),version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};
return stringify(a,__,"")};ow.loadFormat();b.format=b.output||b.format||b.out;b.type=b.input||b.type||b.in;b.out=b.format;b.output=b.format;b.in=b.type;b.input=b.type;if(isUnDef(b.file)&&isUnDef(b.cmd)){var H=__;for(let a in b)if(""===b[a]&&"-debug"!=a&&"-v"!=a&&"-examples"!=a){H=a;break}b.file=H}"[object Object]"==Object.prototype.toString.call(b.data)&&(b.data=stringify(b.data,__,""));var L=new Map([[".json","json"],[".ndjson","ndjson"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],[".ini","ini"],
[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"],[".toml","toml"]]),O=new Set(["csv","ndjson"]),P={lines:(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));if(!b.linesjoin&&isString(a))0!=a.trim().length&&(0<a.trim().length&&(a=a.trim().split(/\r?\n/)),l(a,c,!0)),M=!0;else return!0},ndjson:(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(b.ndjsonjoin)return!0;isUnDef(global.__ndjsonbuf)&&
0!=a.length&&a.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=a.length&&!a.trim().endsWith("}")){global.__ndjsonbuf+=a.trim();return}0<global.__ndjsonbuf.length&&(a=global.__ndjsonbuf+a,global.__ndjsonbuf=__)}0==a.length||0<a.length&&"{"!=a.trim().substring(0,1)?(l(jsonParse(global.__ndjsonbuf,__,__,!0),c,!0),M=!0,global.__ndjsonbuf=__):(l(jsonParse(a,__,__,!0),c,!0),M=!0)}},E={transforms:a=>{if(toBoolean(b.transforms))return Object.keys(E).filter(c=>"transforms"!=
c).sort()},cmlt:a=>{if(toBoolean(b.cmlt)){a=isArray(a)?a:[a];b.cmltch=_$(b.cmltch,"cmltch").default("(type: simple)");var c=t(b.cmltch);if(isMap(c))return isUnDef(c.type)&&k(-1,"cmltch.type is not defined."),isDef(c.lib)&&loadLib(c.lib),0>$ch().list().indexOf("oafp::cmltdata")&&("remote"==c.type?$ch("oafp::cmltdata").createRemote(c.url):$ch("oafp::cmltdata").create(c.type,c.options),c=Number(_$(b.cmltsize,"cmltsize").isNumber().default(100))-1,0<c&&$ch("oafp::cmltdata").subscribe(ow.ch.utils.getHousekeepSubscriber("oafp::cmltdata",
c))),a.forEach(d=>$ch("oafp::cmltdata").set({t:nowNano()},d)),$ch("oafp::cmltdata").getAll();k(-1,"Invalid cmltch parameter")}},diff:a=>{var c=t(b.diff);if(isMap(c)){isDef(c.filea)&&isDef(c.fileb)||isDef(c.a)&&isDef(c.b)||k(-1,"diff.a path and diff.b path are required.");loadDiff();let d=$path(a,c.a);a=$path(a,c.b);let f=__;toBoolean(b.color)&&(isUnDef(b.difftheme)&&isDef(getEnv("OAFP_DIFFTHEME"))&&(b.difftheme=getEnv("OAFP_DIFFTHEME")),f=t(_$(b.difftheme,"difftheme").isString().default("")),f=merge({added:"GREEN",
removed:"RED",common:"FAINT",linenum:"ITALIC",linediv:"FAINT",linesep:"|"},f));let e=(h,g)=>{if(toBoolean(b.color)){isUnDef(g)&&(g="");var m=new Set;if(isArray(h)){let n=1,q=toBoolean(b.diffnlines),v=0;q&&(h.forEach(w=>{v+=w.value.split("\n").length}),v=String(v).length+1);let z=w=>{let x;x=q&&""!=g?ansiColor(f.linenum,0<w?$ft("% "+v+"d",n):" ".repeat(v))+ansiColor(f.linediv,`${f.linesep}`):"";n+=w;return x};h.forEach((w,x)=>{x=w.value;isString(x)&&(""!=g?(x=x.split(g),""==x[x.length-1]&&x.pop()):
x=[x]);m.add(w.added?x.map(I=>z(1)+ansiColor(f.added,(""!=g?"+":"")+I)).join(ansiColor("RESET",g)):w.removed?x.map(I=>z(0)+ansiColor(f.removed,(""!=g?"-":"")+I)).join(ansiColor("RESET",g)):x.map(I=>z(1)+ansiColor(f.common,(""!=g?" ":"")+I)).join(ansiColor("RESET",g)))})}return Array.from(m).join(ansiColor("RESET",g))}return $from(h).select({count:__,added:!1,removed:!1,value:[]})};return isString(d)&&isString(a)?toBoolean(b.diffwords)?e(JsDiff.diffWords(d,a,c.options)):toBoolean(b.diffwordswithspace)?
e(JsDiff.diffWordsWithSpace(d,a,c.options)):toBoolean(b.difflines)?e(JsDiff.diffLines(d,a,c.options),"\n"):toBoolean(b.diffsentences)?e(JsDiff.diffSentences(d,a,c.options),"\n"):e(JsDiff.diffChars(d,a,c.options)):isArray(d)&&isArray(a)&&!toBoolean(b.color)?e(JsDiff.diffArrays(d,a,c.options)):e(JsDiff.diffJson(d,a,c.options),"\n")}},jsonschemagen:a=>{if(toBoolean(b.jsonschemagen))return ow.loadObj(),ow.obj.schemaGenerator(a)},jsonschemacmd:a=>E.jsonschema(a),jsonschema:a=>{isMap(a)||k(-1,"jsonschema is only supported with a map.");
isUnDef(b.jsonschema)&&isUnDef(b.jsonschemacmd)&&k(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var c;if(isDef(b.jsonschemacmd)){var d=$sh(b.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:k(-1,"Error executing the command '"+b.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(b.jsonschema);isMap(c)||k(-1,"The schema provided is not a valid JSON schema.");ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(a),errors:c.errors}},
sortmapkeys:a=>{if(toBoolean(b.sortmapkeys)&&isObject(a)){let c=(d,f)=>{let e=Object.keys(d).sort(),h={};for(let g=0;g<e.length;g++){let m=e[g],n=d[m];Array.isArray(n)?h[m]=n.map(q=>"object"===typeof q&&null!==q&&void 0!==q?sortMapKeys(q,f):q):h[m]=f&&"object"===typeof n&&null!==n&&void 0!==n?c(n,f):n}return h};return c(a,!0)}return a},searchkeys:a=>isObject(a)?searchKeys(a,b.searchkeys):a,searchvalues:a=>isObject(a)?searchValues(a,b.searchvalues):a,maptoarray:a=>toBoolean(b.maptoarray)&&isMap(a)?
$m4a(a,b.maptoarraykey):a,arraytomap:a=>toBoolean(b.arraytomap)&&isArray(a)?$a4m(a,b.arraytomapkey,toBoolean(b.arraytomapkeepkey)):a,flatmap:a=>toBoolean(b.flatmap)&&isObject(a)?ow.loadObj().flatMap(a,b.flatmapsep):a,merge:a=>{if(toBoolean(b.merge)&&isArray(a)&&1<a.length){for(var c,d=0;d<a.length;d++)c=0==d?a[d]:merge(c,a[d]);return c}return a},correcttypes:a=>{toBoolean(b.correcttypes)&&isObject(a)&&traverse(a,(c,d,f,e)=>{switch(descType(d)){case "number":isString(d)&&(e[c]=Number(d));break;case "string":"true"==
d.trim().toLowerCase()||"false"==d.trim().toLowerCase()?e[c]=toBoolean(d):d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?e[c]=new Date(d):d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&(e[c]=new Date(d))}});return a},removenulls:a=>{toBoolean(b.removenulls)&&traverse(a,(c,d,f,e)=>{(isNull(d)||isUnDef(d))&&delete e[c]});return a},trim:a=>{toBoolean(b.trim)&&traverse(a,(c,d,f,e)=>{isString(d)&&
(e[c]=d.trim())});return a},removedups:a=>{if(toBoolean(b.removedups)){if(isArray(a)){var c=new Set,d=[];a.forEach(f=>{var e=f;isObject(f)&&(e=sortMapKeys(e));e=stringify(e,__,!0);c.has(e)||(c.add(e),d.push(f))});return d}k(-1,"removedups is only supported for arrays")}return a},llmprompt:a=>{if(isString(b.llmprompt)){b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);var c=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system",
"envs").get(b.llmenv));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&c.getGPT().setConversation(io.readFileJSON(b.llmconversation));var d="json",f=!0;isString(b.input)&&("md"==b.input&&(d="markdown",f=!1),"mdtable"==b.input&&(d="markdown table",f=!1),"hsperf"==b.input&&(d="java hsperf file"),"raw"==b.input&&(d="raw",f=!1));c=c.withContext(f?stringify(a,__,!0):a,isDef(b.llmcontext)?b.llmcontext:`${d} input data`);if(isString(b.output)&&("md"==b.output||"mdtable"==b.output||"raw"==b.output))return a=
c.prompt(b.llmprompt),isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),""),a;a=c.promptJSON(b.llmprompt);isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),"");return a}return a},splitlines:a=>toBoolean(b.splitlines)&&isString(a)?a.split(/\r?\n/):a,regression:a=>{if(isString(b.regression)){ow.loadAI();var c=ow.ai.regression(),d=_$(b.regressionpath,"regressionpath").isString().default("@");let f=t(_$(b.regressionoptions,
"regressionoptions").isString().default("{order:2,precision:5}"));d=$path(a,d);if(isArray(d)){if(isString(b.regressionx)){let h=$path(a,b.regressionx);d=d.map((g,m)=>[h[m],g])}else d=d.map((h,g)=>[g+1,h]);let e;switch(b.regression){case "exp":e=c.exponential(d,f);break;case "poly":e=c.polynomial(d,f);break;case "power":e=c.power(d,f);break;case "log":e=c.logarithmic(d,f);break;default:e=c.linear(d,f)}return isDef(e)&&isDef(e.points)?(isString(b.regressionforecast)&&(a=$path(a,b.regressionforecast),
isArray(a)?a.forEach(h=>{e.points.push(e.predict(h))}):k(-1,"Invalid array of x for regression forecast")),e.points.map(h=>({x:h[0],y:h[1]}))):e}k(-1,"Invalid data for regression analysis")}return a},normalize:a=>{if(isString(b.normalize)){var c=t(b.normalize);if(isMap(c)){ow.loadAI();if(isMap(a))return ow.ai.normalize.withSchema(a,c,!0);if(isArray(a))return a.map(d=>ow.ai.normalize.withSchema(d,c,!0))}else k(-1,"Invalid normalize schema")}else k(-1,"Invalid normalize schema")},denormalize:a=>{if(isString(b.denormalize)){var c=
t(b.denormalize);if(isMap(c)){ow.loadAI();isUnDef(ow.ai.normalize.denormalizeWithSchema)&&k(-1,"This version of OpenAF does not support denormalizeWithSchema");if(isMap(a))return ow.ai.normalize.denormalizeWithSchema(a,c,!1);if(isArray(a))return a.map(d=>ow.ai.normalize.denormalizeWithSchema(d,c,!1))}else k(-1,"Invalid denormalize schema")}else k(-1,"Invalid denormalize schema")},kmeans:a=>{isNumber(b.kmeans)||(b.kmeans=5);isArray(a)||k(-1,"For kmeans transform you need to provide an array as input");
ow.loadAI();return ow.ai.cluster({type:"kmeans",numberOfClusters:Number(b.kmeans)}).classify(a)},getlist:a=>{if(isObject(a)&&(toBoolean(b.getlist)||isNumber(b.getlist))){var c=!1,d,f=isNumber(b.getlist)?b.getlist:1;traverse(a,(e,h,g,m)=>{!c&&isArray(h)&&(f--,0==f&&(c=!0),d=h)});return c?d:a}}},G=new Map([["?",(a,c)=>{a=Array.from(G.keys()).filter(d=>"?"!=d).sort();y(a,c)}],["pm",(a,c)=>{y(a,c)}],["key",(a,c)=>{y(a,c)}],["html",(a,c)=>{let d;c=!1;b.htmlopen=toBoolean(_$(b.htmlopen,"htmlopen").isString().default("true"));
b.htmlwait=_$(b.htmlwait,"htmlwait").isNumber().default(2500);b.htmlopen&&(d=io.createTempFile("oafp_",".html"));ow.loadTemplate();isString(a)?(a=ow.template.html.genStaticVersion(ow.template.parseMD2HTML(a,!toBoolean(b.htmlpart),!toBoolean(b.htmlcompact))),a=a.replace("<html>",'<html><meta charset="utf-8">')):(a=ow.template.html.parseMap(a,!0),a='<html><meta charset="utf-8"><style>'+a.css+"</style><body>"+a.out+"</body></html>");b.htmlopen&&(io.writeFileString(d,a),c=openInBrowser("file:///"+d.replace(/\\/g,
"/")));c?sleep(b.htmlwait,!0):p(a)}],["ctable",(a,c)=>{y(a,c)}],["stable",(a,c)=>{y(a,c)}],["table",(a,c)=>{y(a,c)}],["log",(a,c)=>{if(isString(a)&&toBoolean(b.logprintall))p(a.replace(/\n$/,""));else if(c=a,isMap(a)&&(c=[a]),isArray(c)){isUnDef(b.logtheme)&&isDef(getEnv("OAFP_LOGTHEME"))&&(b.logtheme=getEnv("OAFP_LOGTHEME"));let d=t(_$(b.logtheme,"logtheme").isString().default(""));d=merge({errorLevel:"RED,BOLD",warnLevel:"YELLOW",timestamp:"BOLD"},d);c.forEach(f=>{if(isMap(f)){let e=isDef(f["@timestamp"])?
f["@timestamp"]:__,h=isDef(f.level)?f.level:__;f=isDef(f.message)?f.message:__;let g;isDef(h)&&(0<=h.toLowerCase().indexOf("err")&&(g=d.errorLevel),0<=h.toLowerCase().indexOf("warn")&&(g=d.warnLevel));isDef(e)&&24<e.length&&(e=e.substring(0,23)+"Z");(isDef(f)||isDef(e))&&p(ansiColor(d.timestamp,e)+(isDef(h)?" | "+ansiColor(g,h):"")+" | "+ansiColor(g,f))}})}}],["raw",(a,c)=>{isString(a)?p(a):p(stringify(a))}],["ini",(a,c)=>{isString(a)||(ow.loadJava(),c=new ow.java.ini,p(c.put(a).save()))}],["toml",
(a,c)=>{isUnDef(af.toTOML)&&k(-1,"TOML support not found.");if(isMap(a))p(af.toTOML(a));else if(isArray(a))p(af.toTOML({list:a}));else return __}],["mdyaml",(a,c)=>{isArray(a)?a.forEach((d,f)=>{y(d,merge(c,{__format:"yaml"}));f<a.length-1&&p("---\n")}):y(a,merge(c,{__format:"yaml"}))}],["mdtable",(a,c)=>{isArray(a)&&(ow.loadTemplate(),p(ow.template.md.table(a)))}],["template",(a,c)=>{isString(a)||(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),
isUnDef(b.template)&&isUnDef(b.templatepath)&&k(-1,"For out=template you need to provide a template=someFile.hbs or templatepath=..."),b.templatedata=_$(b.templatedata,"templatedata").isString().default("@"),p($t(isUnDef(b.template)?$path(b.__origr,b.templatepath):io.readFileString(b.template),$path(a,b.templatedata))))}],["openmetrics",(a,c)=>{isString(a)?k(-1,"For out=openmetrics input needs to be an array or map."):(ow.loadMetrics(),a=ow.metrics.fromObj2OpenMetrics(a,b.metricsprefix,b.metricstimestamp),
a=a.split("\n").map(d=>{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).join("\n"),p(a))}],["pjson",(a,c)=>{c.__format="prettyjson";y(a,c)}],["ndjson",(a,c)=>{isArray(a)?a.forEach(d=>p(stringify(d,__,""))):isMap(a)?p(stringify(a,__,"")):y(a,c)}],["base64",(a,c)=>{a=isString(a)?a:stringify(a);toBoolean(b.base64gzip)?p(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a))))):
p(af.fromBytes2String(af.toBase64Bytes(a)))}],["gb64json",(a,c)=>{a=isString(a)?a:stringify(a);p(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a)))))}],["jwt",(a,c)=>{isMap(a)?(isUnDef(b.jwtsecret)&&isUnDef(b.jwtprivkey)&&k(-1,"For out=jwt you need to provide a jwtsecret or a jwtprivkey"),ow.loadServer(),isDef(b.jwtprivkey)?(ow.loadJava(),c=new ow.java.cipher,p(ow.server.jwt.sign(c.readKey4File(b.jwtprivkey,!0,b.jwtalg),a))):p(ow.server.jwt.sign(b.jwtsecret,a))):k(-1,"For out=jwt input needs to be a map.")}],
["grid",(a,c)=>{isUnDef(b.grid)&&k(-1,"For out=grid you need to provide a grid=...");c=t(_$(b.grid,"grid").isString().$_());isArray(c)&&0<c.length&&isArray(c[0])?(c.forEach((d,f)=>{d.forEach((e,h)=>{if(isUnDef(e.type)||"empty"!=e.type){if(isDef(e.cmd)){var g=$sh(e.cmd).getJson(0);g=isDef(g)&&isDef(g.stdout)?g.stdout:""}else g=a;if("chart"==e.type||"bar"==e.type)h="_chrt"+(f+1)+"."+(h+1),e.obj=("chart"==e.type?h+" ":"")+K(g,e.obj,h),isUnDef(e.title)&&(e.title="Chart "+h);isDef(e.path)?(e.obj=$path(g,
e.path),isUnDef(e.title)&&(e.title=e.path)):isString(g)?e.obj=g:isObject(g)&&"chart"!=e.type&&(e.obj=$path(g,"@"))}else e.obj=""})}),c=ow.format.string.grid(c,__,__," ",!0),p(c)):k(-1,"Invalid grid parameter: '"+stringify(b.grid,__,"")+"'")}],["envs",(a,c)=>{a=isArray(a)?a.map(e=>isObject(e)?ow.loadObj().flatMap(e,"_"):e):ow.loadObj().flatMap(a,"_");c=e=>0<=String(e).indexOf(" ")?'"'+e+'"':e;isUnDef(b.envscmd)&&(b.envscmd=ow.format.isWindows()?"set":"export");b.envscmd=String(b.envscmd);isUnDef(b.envsprefix)&&
(b.envsprefix="_OAFP_");b.envsprefix=String(b.envsprefix);var d=new Set,f;for(f in a)d.add(b.envscmd+(0<b.envscmd.length?" ":"")+(b.envsprefix+f.replace(/[^a-zA-Z0-9_]/g,"_"))+"="+c(a[f]));p(Array.from(d).join("\n"))}],["cmd",(a,c)=>{isString(b.outcmd)||k(-1,'For out=cmd you need to provide a outcmd="..."');let d=f=>{f=isString(f)?f:stringify(f,__,"");if(toBoolean(b.outcmdparam))try{var e=$sh(b.outcmd.replace(/([^\\]?){}/g,"$1"+f)).get(0)}catch(h){sprintErr(h)}else e=$sh(b.outcmd,f).get(0);toBoolean(b.outcmdnl)?
(0<e.stdout.length&&print(e.stdout),0<e.stderr.length&&printErr(e.stderr)):(0<e.stdout.length&&printnl(e.stdout),0<e.stderr.length&&printErrnl(e.stderr))};isArray(a)?toBoolean(b.outcmdjoin)?d(a):toBoolean(b.outcmdseq)?a.forEach(d):parallel4Array(a,f=>{d(f)}):(isString(a),d(a))}],["chart",(a,c)=>{isUnDef(b.chart)&&k(-1,'For out=chart you need to provide a chart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&k(-1,"output=chart is not supported in this version of OpenAF");a=K(a,
b.chart);0<a.length&&(a=printChart("oafp "+a),toBoolean(b.chartcls)&&cls(),p(a))}],["schart",(a,c)=>{isUnDef(b.schart)&&k(-1,'For out=schart you need to provide a schart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&k(-1,"Output=schart is not supported in this version of OpenAF");a=K(a,b.schart,"_oafp_sfn_","soafp");0<a.length&&p(printChart("soafp "+a))}],["ch",(a,c)=>{isUnDef(b.ch)&&k(-1,'For out=ch you need to provide a ch="(type: ...)"');isUnDef(b.chkey)&&k(-1,'For out=ch you need to provide a chkey="key1, key2"');
a=isMap(a)?[a]:a;b.ch=t(b.ch);isMap(b.ch)?(isUnDef(b.ch.type)&&k(-1,"ch.type is not defined."),isDef(b.ch.lib)&&loadLib(b.ch.lib),"remote"==b.ch.type?$ch("oafp::outdata").createRemote(b.ch.url):$ch("oafp::outdata").create(b.ch.type,b.ch.options),toBoolean(b.chunset)?$ch("oafp::outdata").unsetAll(b.chkey.split(",").map(d=>d.trim()),a):$ch("oafp::outdata").setAll(b.chkey.split(",").map(d=>d.trim()),a),$ch("oafp::outdata").destroy()):k(-1,"Invalid ch parameter")}],["db",(a,c)=>{(!isArray(a)||1>a.length)&&
k(-1,"db is only supported for filled arrays/lists");b.dbtable=_$(b.dbtable,"outdbtable").isString().default("data");b.dbnocreate=toBoolean(_$(b.dbnocreate,"outdbnocreate").isString().default("false"));b.dbicase=toBoolean(_$(b.dbicase,"outdbicase").isString().default("false"));b.dbbatchsize=_$(b.dbbatchsize,"dbbatchsize").isNumber().default(__);ow.loadObj();try{isString(b.dbjdbc)||k(-1,"dbjdbc URL is not defined.");isDef(b.dblib)&&loadLib("jdbc-"+b.dblib+".js");var d=new DB(b.dbjdbc,b.dbuser,b.dbpass,
b.dbtimeout);if(!b.dbnocreate)try{var f=ow.obj.fromObj2DBTableCreate(b.dbtable,a,__,!b.dbicase);d.u(f);d.commit()}catch(n){d.rollback(),k(-1,"Error creating table: "+n)}var e=Object.keys(ow.obj.flatMap(a[0]));var h=b.dbicase?e.join(",").toUpperCase():'"'+e.join('", "')+'"';let m="";var g=a.map(n=>{var q=ow.obj.flatMap(n);n=[];for(var v in e)n.push(q[e[v]]);v=e.map(z=>String(q[z]));n="INSERT INTO "+(b.dbicase?b.dbtable:'"'+b.dbtable+'"')+" ("+h+") VALUES ("+v.map(z=>"?").join(", ")+")";n.length>m.length&&
(m=String(n));return v});d.usArray(m,g,b.dbbatchsize)}catch(m){isDef(d)&&d.rollback(),printErr(m),k(-1,"Error connecting to the database: "+m)}finally{isDef(d)&&(d.commit(),d.close())}}],["sql",(a,c)=>{(!isArray(a)||1>a.length)&&k(-1,"sql is only supported for filled arrays/lists");b.sqltable=_$(b.sqltable,"sqltable").isString().default("data");b.sqlicase=toBoolean(_$(b.sqlicase,"sqlicase").isString().default("false"));b.sqlnocreate=toBoolean(_$(b.sqlnocreate,"sqlnocreate").isString().default("false"));
ow.loadObj();b.sqlnocreate||p(ow.obj.fromObj2DBTableCreate(b.sqltable,a,__,!b.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(a[0]));var f=b.sqlicase?d.join(",").toUpperCase():'"'+d.join('", "')+'"';p(a.map(e=>{var h=ow.obj.flatMap(e);e=[];for(var g in d)e.push(h[d[g]]);g=d.map(m=>{m=h[m];isString(m)&&(m="'"+m.replace(/'/g,"''")+"'");isNull(m)&&(m="null");return m});return"INSERT INTO "+(b.sqlicase?b.sqltable:'"'+b.sqltable+'"')+" ("+f+") VALUES ("+g.join(",")+");"}).join("\n"))}],["xml",(a,c)=>
{y(a,c)}],["pxml",(a,c)=>{a=af.fromObj2XML(a,!0);p('<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n'+new XMLList(a))}],["xls",(a,c)=>{if(!isString(a)){try{includeOPack("plugin-XLS")}catch(h){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");if(isMap(a)){ow.loadObj();var d=ow.obj.flatMap(a);var f=Object.keys(d).map(h=>({key:h,value:d[h]}))}isArray(a)&&(f=a);traverse(f,(h,g,m,n)=>{isString(g)&&g.startsWith("=")&&(n[h]="'"+g)});
a=!1;c=b.xlsfile;isUnDef(b.xlsfile)&&(a=!0,b.xlsfile=io.createTempFile("oafp",".xlsx"));c=new XLS(isDef(c)&&io.fileExists(c)?c:__);var e=c.getSheet(_$(b.xlssheet,"xlssheet").isString().default("data"));b.xlsformat=_$(b.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');b.xlsformat=t(b.xlsformat);ow.format.xls.setTable(c,e,"A",1,f,__,b.xlsformat);c.writeFile(b.xlsfile);c.close();b.xlsopenwait=_$(b.xlsopenwait,"xlsopenwait").isNumber().default(5E3);
b.xlsopen=toBoolean(_$(b.xlsopen,"xlsopen").isString().default("true"));b.xlsopen&&(ow.format.isWindows()?($sh("start "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)))}}]]),F=new Map([["?",(a,c)=>{a=Array.from(F.keys()).filter(d=>"?"!=d).sort();l(a,c)}],["pm",(a,c)=>{r();isDef(__pm._map)&&(a=__pm._map);isDef(__pm._list)&&(a=__pm._list);l(a,c)}],["key",(a,c)=>{r();isString(a)||k(-1,"key is only supported with a string.");
l($get(a),c)}],["jsonschema",(a,c)=>{r();a=jsonParse(a,__,__,!0);isMap(a)||k(-1,"jsonschema is only supported with a map.");ow.loadObj();a=ow.obj.schemaSampleGenerator(a);l(a,c)}],["yaml",(a,c)=>{r();a=af.fromYAML(a);l(a,c)}],["xml",(a,c)=>{r();b.xmlignored=_$(b.xmlignored,"xmlignored").isString().default(__);b.xmlprefix=_$(b.xmlprefix,"xmlprefix").isString().default(__);b.xmlfiltertag=toBoolean(_$(b.xmlfiltertag,"xmlfiltertag").isString().default(__));0<=a.indexOf("<?xml")&&(a=a.substring(a.indexOf("?>")+
2).trim());0<=a.indexOf("<!DOCTYPE")&&(a=a.substring(a.indexOf(">")+1).trim());a=af.fromXML2Obj(a,b.xmlignored,b.xmlprefix,!b.xmlfiltertag);l(a,c)}],["lines",(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));r();let d=__,f=[],e=g=>{g=g.split("\n").map(n=>{let q="",v=0;for(let z=0;z<n.length;z++)if("\t"===n[z]){let w=8-v%8;q+=" ".repeat(w);v+=w}else q+=n[z],v++;return q}).join("\n");if(isUnDef(d))return d=[],lastPos=0,isUnDef(b.linesvisualsepre)&&
(b.linesvisualsepre=" \\s+"),g.split(new RegExp(b.linesvisualsepre)).forEach(n=>{d.push(n);n=g.substring(lastPos).match(new RegExp(ow.format.escapeRE(n)+"("+b.linesvisualsepre+"|$)"));!isNull(n)&&isDef(n.index)?(f.push(lastPos+n.index),lastPos=n.index):k(-1,"Problem with linesvisual to find header positioning.")}),__;var m={};f.forEach((n,q)=>{m[d[q]]=g.substring(n,q+1<f.length?f[q+1]-1:__).trim()});return m};if(b.linesjoin)if(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&
(a=C(b.cmd,!0)),a=a.split(/\r?\n/),toBoolean(b.linesvisual)){var h=[];a.forEach(g=>{0!=g.length&&(g=e(g),isDef(g)&&h.push(g))});l(h,c)}else l(a,c);else a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,g=>{toBoolean(b.linesvisual)?(g=e(g),isDef(g)&&l(g,clone(c),!0)):l(g,clone(c),!0)}),a.close()}],["ndjson",(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));
r();global.__ndjsonbuf=__;var d=(e,h)=>{isUnDef(global.__ndjsonbuf)&&0!=e.length&&e.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=e.length&&!e.trim().endsWith("}")){global.__ndjsonbuf+=e.trim();return}0<global.__ndjsonbuf.length&&(e=global.__ndjsonbuf+e,global.__ndjsonbuf=__)}0==e.length||0<e.length&&"{"!=e.trim().substring(0,1)?(h(e),global.__ndjsonbuf=__):h(e)},f=e=>{var h=[];e.split("\n").filter(g=>0<g.length).forEach(g=>d(g,m=>h.push(jsonParse(m,__,__,toBoolean(b.ndjsonfilter)))));
return h};b.ndjsonjoin?(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=C(b.cmd,!0)),l(f(a),c)):(a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,e=>{d(e,h=>l(jsonParse(h,__,__,!0),clone(c),!0))}),a.close())}],["md",(a,c)=>{r();__conConsole=__ansiColorFlag=!0;isUnDef(b.format)&&isUnDef(c.__format)&&(b.format="md",c.__format="md");l(a,c)}],["mdtable",(a,c)=>{r();ow.loadTemplate();
a=ow.template.md.fromTable(a);l(a,c)}],["raw",(a,c)=>{r();l(a,c)}],["ini",(a,c)=>{r();ow.loadJava();var d=new ow.java.ini;a=isDef(b.file)?d.loadFile(b.file).get():d.load(a).get();l(a,c)}],["jwt",(a,c)=>{ow.loadServer();if(toBoolean(b.injwtverify)){isUnDef(b.injwtsecret)&&isUnDef(b.injwtpubkey)&&k(-1,"injwtsecret or injwtpubkey is not defined.");try{if(isDef(b.injwtpubkey)){ow.loadJava();var d=new ow.java.cipher;ow.server.jwt.verify(d.readKey4File(b.injwtpubkey,!1,b.injwtalg),a)}else ow.server.jwt.verify(b.injwtsecret,
a);var f=!0}catch(e){isDef(e.javaException)&&printErr(e.javaException.getMessage()),f=!1}}a=ow.server.jwt.decode(a);isDef(f)&&(a.__verified=f);!toBoolean(b.injwtraw)&&isDef(a)&&isMap(a.claims)&&(isDef(a.claims.exp)&&(a.claims.exp=new Date(1E3*a.claims.exp)),isDef(a.claims.iat)&&(a.claims.iat=new Date(1E3*a.claims.iat)),isDef(a.claims.nbf)&&(a.claims.nbf=new Date(1E3*a.claims.nbf)));l(a,c)}],["sql",(a,c)=>{isString(a)?toBoolean(b.sqlparse)?(isUnDef(ow.format.sqlFormat)&&k(-1,"SQL parse not available."),
l(ow.format.sqlFormat(a,isDef(b.sqloptions)?t(b.sqloptions):__),c)):l(af.fromSQL(a).ast,c):l(a,c)}],["openmetrics",(a,c)=>{isString(a)?(ow.loadMetrics(),l(ow.metrics.fromOpenMetrics2Array(a),c)):l(a,c)}],["ch",(a,c)=>{r();isUnDef(b.inch)&&k(-1,"inch is not defined.");b.inch=t(b.inch);if(isMap(b.inch)){isUnDef(b.inch.type)&&k(-1,"inch.type is not defined.");isDef(b.inch.lib)&&loadLib(b.inch.lib);"remote"==b.inch.type?$ch("oafp::indata").createRemote(b.inch.url):$ch("oafp::indata").create(b.inch.type,
b.inch.options);var d=t(a);toBoolean(b.inchall)||0==a.trim().length?l($ch("oafp::indata").getAll(isMap(d)?d:__),c):l($ch("oafp::indata").get(isMap(d)?d:__),c);$ch("oafp::indata").destroy()}else k(-1,"inch is not a valid map.")}],["db",(a,c)=>{if(isString(a)){r();isString(b.indbjdbc)||k(-1,"indbjdbc URL is not defined.");try{isDef(b.indblib)&&loadLib("jdbc-"+b.indblib+".js");var d=new DB(b.indbjdbc,b.indbuser,b.indbpass,b.indbtimeout);d.convertDates(!0);if(toBoolean(b.indbexec)){var f=d.u(a);l({affectedRows:f},
c);d.commit()}else f=d.q(a),isMap(f)&&isArray(f.results)?l(f.results,c):k(-1,"Invalid DB result: "+stringify(f))}catch(e){printErr(e.message),isDef(d)&&d.rollback(),k(-1,"Error executing SQL: "+e.message)}finally{isDef(d)&&(d.rollback(),d.close())}}else k(-1,"db is only supported with a SQL string.")}],["xls",(a,c)=>{r();try{includeOPack("plugin-XLS")}catch(f){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}b.xlssheet=_$(b.xlssheet,"xlssheet").isString().default(0);
b.xlsevalformulas=toBoolean(_$(b.xlsevalformulas,"xlsevalformulas").isString().default(!0));b.xlscol=_$(b.xlscol,"xlscol").isString().default("A");b.xlsrow=_$(b.xlsrow,"xlsrow").isString().default(1);plugin("XLS");if(isDef(b.file)||isDef(b.cmd)){a=new XLS(isDef(b.cmd)?C(b.cmd):b.file);var d=a.getSheet(b.xlssheet);d=a.getTable(d,b.xlsevalformulas,b.xlscol,b.xlsrow);a.close();isDef(d)&&isMap(d)&&(d=d.table);l(d,c)}else k(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],
["csv",(a,c)=>{r();if(isDef(b.file)||isDef(b.cmd)){var d=isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):io.readFileStream(b.file);a=$csv(b.inputcsv).fromInStream(d).toOutArray();d.close()}else a=$csv(b.inputcsv).fromInString(a).toOutArray();l(a,c)}],["hsperf",(a,c)=>{if(isDef(b.file)||isDef(b.cmd)){r();ow.loadJava();var d=isDef(b.cmd)?ow.java.parseHSPerf(C(b.cmd)):ow.java.parseHSPerf(b.file);d.__ts=new Date;var f=0,e=0;d.sun.gc.generation.forEach(h=>{h.space.forEach(g=>{e+=Number(g.used);f=isNumber(g.capacity)?
f+Number(g.capacity):f;d.sun.gc["__percUsed_"+g.name]=100*g.used/g.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;a=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);d.sun.gc.__ygc=isDef(a)?Number(a.invocations):0;d.sun.gc.__ygct=isDef(a)?Number(a.time/1E9):0;a=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name","").at(0);
d.sun.gc.__fgc=isDef(a)?Number(a.invocations):0;d.sun.gc.__fgct=isDef(a)?Number(a.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/1E9;d.java.__mem={total:f,used:e,free:f-e,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-d.sun.gc.metaspace.used};l(d,c)}else k(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["rawhex",(a,c)=>{b.inrawhexline=_$(b.inrawhexline,"inrawhexline").isNumber().default(__);
r();a=isDef(b.file)||isDef(b.cmd)?isDef(b.cmd)?C(b.cmd):io.readFileBytes(b.file):af.fromString2Bytes(a);a=ow.format.string.toHexArray(a,b.inrawhexline);a.forEach(d=>{d.characters=d.characters.replace(/[\x00-\x1F\x80-\xFF]/g,".")});l(a,c)}],["base64",(a,c)=>{r();a=toBoolean(b.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(a,!0))):af.fromBytes2String(af.fromBase64(a));l(a,c)}],["gb64json",(a,c)=>{r();a=af.fromBytes2String(io.gunzip(af.fromBase64(a,!0)));l(a,c)}],["oaf",(a,c)=>{isString(a)||
k(-1,"oaf is only supported with a string.");r();a=af.eval(a);l(a,c)}],["oafp",(a,c)=>{b.__inception=!0;a=t(a);var d="_oafp_key_"+genUUID();if(isMap(a))a.out="key",a.__key=d,a.__inception=!0,oafp(a),a=$get(d),$unset(d),l(a,c);else if(isArray(a)){ow.loadObj();$set(d,!0);var f=new ow.obj.syncArray;a=a.map((e,h)=>{var g=d+"_"+String(h);e.out="key";e.__key=g;e.__inception=!0;return $do(()=>{oafp(e);f.add($get(g));$unset(g)}).catch(m=>{sprintErr(m)})});$doWait($doAll(a));l(f.toArray(),c)}else k(-1,"oafp input data needs to be a map or an array.")}],
["sh",(a,c)=>{r();a=t(a);if(isString(a))a=$sh(a).get(0);else{isMap(a)||k(-1,"For in=sh the input data needs to a string or a map");var d=$sh();isUnDef(a.cmd)&&k(-1,"For in=sh the input data needs to a string or a map with the a 'cmd'");d=d.sh(a.cmd);isDef(a.envs)&&(d=d.envs(a.envs,a.envsall));isDef(a.prefix)&&(d=d.prefix(a.prefix));isDef(a.pwd)&&(d=d.pwd(a.pwd));switch(b.inshformat){case "raw":a=d.get(0);break;case "yaml":a=d.getYaml(0);break;default:a=d.getJson(0)}}l(a,c)}],["llm",(a,c)=>{b.llmenv=
_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&k(-1,"llmoptions not defined and "+b.llmenv+" not found.");r();var d=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system","envs").get(b.llmenv));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&d.getGPT().setConversation(io.readFileJSON(b.llmconversation));let f;isString(b.llmimage)&&(b.llmimage.toLowerCase().match(/^https?:\/\//)?
f=af.fromBytes2String(af.toBase64Bytes(af.fromInputStream2Bytes($rest().get2Stream(b.llmimage)))):io.fileExists(b.llmimage)&&(f=af.fromBytes2String(af.toBase64Bytes(io.readFileBytes(b.llmimage)))));a="md"==b.output||"mdtable"==b.output||"raw"==b.output?isDef(f)?d.promptImage(a,f):d.prompt(a):isDef(f)?d.promptImage(a,f,__,__,__,__,!0):d.promptJSON(a);isDef(b.llmconversation)&&(d=d.getGPT().getConversation(),d.push({role:"assistant",content:stringify(a,__,"")}),io.writeFileJSON(b.llmconversation,d,
""));l(jsonParse(a,__,__,isString(a)),c)}],["llmmodels",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&k(-1,"llmoptions not defined and "+b.llmenv+" not found.");r();a=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system","envs").get(b.llmenv));isUnDef(a.getModels)&&k(-1,"OpenAF support for llm model listing API not found.");l(a.getModels(),c)}],["ls",(a,c)=>
{r();if(isString(a)){var d=toBoolean(b.lsposix);isDef(b.file)&&(a=b.file);var f=io.fileExists(a),e;f&&(e=io.fileInfo(a));if(f&&e.isFile)switch(isDef(b.lsext)?b.lsext:e.filename.replace(/^.*\./,"").toLowerCase()){case "tgz":case "gz":a=io.listFilesTAR(a,!0);break;case "tar":a=io.listFilesTAR(a);break;default:plugin("ZIP"),a=$m4a((new ZIP).list(a))}else a=toBoolean(b.lsrecursive)?listFilesRecursive(a,d):io.listFiles(a,d).files;l(a,c)}else k(-1,"ls is only supported with a string.")}],["toml",(a,c)=>
{r();isUnDef(af.fromTOML)&&k(-1,"TOML support not found.");l(af.fromTOML(a),c)}],["slon",(a,c)=>{r();l(af.fromSLON(a),c)}],["json",(a,c)=>{r();l(jsonParse(a,__,__,isString(a)),c)}]]),D={};isString(b.libs)&&(b.libs=b.libs.split(",").map(a=>a.trim()).filter(a=>0<a.length));isDef(__flags.OAFP)&&isArray(__flags.OAFP.libs)&&isArray(b.libs)?b.libs=__flags.OAFP.libs.concat(b.libs):b.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(b.libs)&&b.libs.forEach(a=>{try{var c=require("oafp_"+a+".js");if(isDef(c.oafplib)){var d=
c.oafplib(clone(b),l,y,{_runCmd2Bytes:C,_fromJSSLON:t,_msg:"(processing data...)",_showTmpMsg:r,_clearTmpMsg:Q,_chartPathParse:K,_exit:k,_print:p,_o$o:y});isMap(d)&&(isArray(d.fileExtensions)&&d.fileExtensions.forEach(f=>{var e=f.ext;f=f.type;L.has(e)?printErr("WARN: Extension '"+e+"' already exists."):L.set(e,f)}),isArray(d.fileExtensionsNoMem)&&d.fileExtensionsNoMem.forEach(f=>{f=f.ext;O.has(f)?printErr("WARN: Extension '"+f+"' already exists."):O.add(f)}),isArray(d.input)&&d.input.forEach(f=>{var e=
f.type;f=f.fn;F.has(e)?printErr("WARN: Input type '"+e+"' already exists."):F.set(e,f)}),isArray(d.inputLine)&&d.inputLine.forEach(f=>{var e=f.type;f=f.fn;isUnDef(_inputLinesFns[e])?P[e]=f:printErr("WARN: Input type '"+e+"' already exists.")}),isArray(d.transform)&&d.transform.forEach(f=>{var e=f.type;f=f.fn;isUnDef(E[e])?E[e]=f:printErr("WARN: Transform '"+e+"' already exists.")}),isArray(d.output)&&d.output.forEach(f=>{var e=f.type;f=f.fn;G.has(e)?printErr("WARN: Output type '"+e+"' already exists."):
G.set(e,f)}),isString(d.help)&&(D[a.toLowerCase()]=d.help))}else printErr("WARN: Library '"+a+"' does not have oafplib.")}catch(f){printErr("WARN: Library '"+a+"' error: "+f)}});(""==b["-h"]||isString(b.help)&&0<b.help.length)&&A();b.format=_$(b.format,"format").isString().default(__);__initializeCon();A=!String(java.lang.System.getProperty("os.name")).match(/Windows/);H=getEnv("OAFP_RESET");isDef(H)&&(A=toBoolean(H)?!1:!0);A&&__con.getTerminal().settings.set("sane");if(isDef(b.secKey)){toBoolean(b.secEnv)&&
(b.secRepo="system",b.secBucket="envs");b.secRepo=_$(b.secRepo,"secRepo").isString().default(getEnv("OAFP_SECREPO"));b.secBucket=_$(b.secBucket,"secBucket").isString().default(getEnv("OAFP_SECBUCKET"));b.secPass=_$(b.secPass,"secPass").isString().default(getEnv("OAFP_SECPASS"));b.secMainPass=_$(b.secMainPass,"secMainPass").isString().default(getEnv("OAFP_SECMAINPASS"));b.secFile=_$(b.secFile,"secFile").isString().default(getEnv("OAFP_SECFILE"));let a=$sec(b.secRepo,b.secBucket,b.secPass,b.secMainPass,
b.secFile).get(secKey);isDef(a)&&Object.keys(a).forEach(c=>b[c]=a[c])}var B={__format:b.format,__from:b.from,__ifrom:b.ifrom,__isql:b.isql,__sql:b.sql,__path:b.path,__opath:b.opath,__csv:b.csv,__pause:b.pause,__key:b.__key};isDef(b.inputcsv)&&(b.inputcsv=t(b.inputcsv));isDef(b.incsv)&&(b.incsv=t(b.incsv));isDef(b.csv)&&(b.csv=t(b.csv));var S=!1;if(""==b["-v"]||isString(b.version)&&0<b.version.length)S=!0,R();if(""==b["-examples"]||isString(b.examples)&&0<b.examples.length)b.url="https://ojob.io/oafp-examples.yaml",
b.in="yaml",isString(b.examples)&&0<b.examples.length?("?"!=b.examples.trim()&&(B.__format="template"),B.__path="data",b.templatepath="tmpl",0<b.examples.indexOf("::")?(A=b.examples.split("::").filter(a=>0<a.length),B.__sql=1==A.length?"select * where c like '"+A[0]+"'":"select * where c like '"+A[0]+"' and s like '"+A[1]+"'"):"?"==b.examples.trim()?(B.__path="data.sort(map(&concat(c,concat('::',s)),[]))",b.removedups=!0):B.__sql="select * where d like '%"+b.examples+"%' or s like '%"+b.examples+
"%' or c like '%"+b.examples+"%'"):(B.__path="data[].{category:c,subCategory:s,description:d}",B.__from="sort(category,subCategory,description)",B.__format="ctable"),delete b["-examples"];var u="",M=!1;isDef(b.outfile)&&("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"===typeof global.__oafp_streams[b.outfile]&&(global.__oafp_streams[b.outfile]={s:io.writeFileStream(b.outfile,toBoolean(b.outfileappend))}));A=()=>{if(S)u=R();else if(b.jsonprefix=_$(b.jsonprefix,"jsonprefix").isString().default(__),
b.jsondesc=toBoolean(_$(b.jsondesc,"jsondesc").default("false")),isDef(b.insecure)&&toBoolean(b.insecure)&&ow.loadJava().setIgnoreSSLDomains(),isDef(b.file)){if(0>b.file.indexOf("::")&&!io.fileExists(b.file)&&k(-1,"ERROR: File not found: '"+b.file+"'"),!O.has(b.type))if("json"==b.type||isUnDef(b.type))if(b.jsondesc){var a=new Set;io.readStreamJSON(b.file,d=>{d=d.substring(2);isDef(b.jsonprefix)?d.startsWith(b.jsonprefix)&&a.add(d):a.add(d);return!1});u=stringify(Array.from(a),__,"")}else if(isDef(b.jsonprefix)){var c=
io.readStreamJSON(b.file,d=>d.substring(2).startsWith(b.jsonprefix));u=stringify(c,__,"")}else u=io.readFileString(b.file);else u=io.readFileString(b.file)}else if(b.jsondesc&&k(-1,"ERROR: jsondesc only available for file input."),b.jsonprefix&&k(-1,"ERROR: jsonprefix only available for file input."),isDef(b.cmd))u=C(b.cmd,!0);else if(isString(b.data))u=b.data;else if(isDef(b.url)){b.urlmethod=_$(b.urlmethod,"urlmethod").isString().default("GET");c=t(_$(b.urlparams).isString().default("{}"));let d;
isDef(b.urldata)&&(d=t(b.urldata));switch(b.urlmethod.toLowerCase()){case "post":u=$rest(c).post(b.url,d);break;case "put":u=$rest(c).put(b.url,d);break;case "delete":u=$rest(c).delete(b.url,d);break;default:u=$rest(c).get(b.url)}isObject(u)&&(u=stringify(u,__,""))}else"pm"!=b.input&&(u=[],io.pipeLn(d=>{isDef(P[b.type])?P[b.type](N(d),clone(B))&&u.push(d):u.push(d);return!1}),u=u.join("\n"));M||(isUnDef(b.type)&&(isDef(b.file)&&(c=b.file.substring(b.file.lastIndexOf(".")),L.has(c)&&(b.type=L.get(c))),
isUnDef(b.type)&&(c=u.trim(),c.startsWith("{")||c.startsWith("[")?b.type="json":c.startsWith("(")?b.type="slon":c.startsWith("<")?b.type="xml":isString(c)&&0<c.length?1<c.substring(0,c.indexOf("\n")).split(",").length?b.type="csv":c.substring(0,0<c.indexOf(": "))&&(b.type="yaml"):k(-1,"Please provide the input type."))),isDef(b.type)&&F.has(b.type)?F.get(b.type)(u,B):(isString(b.type)&&printErr("WARN: "+b.type+" input type not supported. Using json."),F.get("json")(u,B)),delete b.__origr)};isDef(b["-debug"])&&
printErr("DEBUG: "+colorify(b));if(isNumber(b.loop))for(;;)toBoolean(b.loopcls)&&isDef(b.outfile)&&(global.__oafp_streams[b.outfile].close(),global.__oafp_streams[b.outfile]=io.writeFileStream(b.outfile,toBoolean(b.outfileappend))),A(),sleep(1E3*b.loop,!0);else A();isDef(global.__oafp_streams)&&Object.keys(global.__oafp_streams).forEach(a=>global.__oafp_streams[a].s.close())}};oafp(params);
