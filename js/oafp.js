var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20241001, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("H4sIAAAAAAAA/+1aS28byRG+81cUqASUBA7f5JAM5IVWWnu1th6wZO8uJGPdM9PktDUzPds9I4leLxDsJcl997ZADkEOewgQIEBOufmf+BfkJ6S6Z4YzfNmivVYOCW0N2dNV1V9Vd1dVPzbgOKTB7n0IBbeplFwAvSF+6FFZKm1swL///Nc/wadEMlsVN+D4ydnJkzP44vT4aAh7gpKIBWMInBeSBzBiHoWR4D5Miyhle3uP+z4JnOH2dun58+cWkW5pI2GmEgg4JCK1oohrlwoKlNguCGpz4QCTMOLCJ1FEnfkWgAVQl9yndSUISiMWOMUXRkB8CuXtmmIpg0FvqA2cjEL47nvgcRTG0Y6WdvE7uFcEo8AmWt8/eHT22WM42T37fAiHJGBh7CF4iOhNpJoniIR6zkpdH9AIaXQj1yxyIXIpeBPBbAl8hDVYMS7ZsfDAkOBGUSiH9ToJWS0hqvErt37VrO9xzwk9Mqk/ZVfkt63GI/V4yhwCrxKFQhK5O2UZWzIS2C+bCXsVDUJvvuGjrAyVi6CyVfVoMI7c9OXWVjnRd3v7MZWxF8lUhdIBxBKtHnEQMXaOwn7NBWp7XqvVnpWOOX5cmPlaYbl9bl9SAeG0MxHjCptpdWzf2Sk7UybDSNgg6UgWqJ5Lx03y9YKzYCcSMU0tcf6s9h1zhgf7VTUGhkf4kFUZYdcNT9WzynwypsMD9awGNEK9LuXwKP1RDblAM5yoZ1XRx3KYfH1fBvmth5amHrUj2AYco4jRmkAmJGlFN1vOBpkdEcujs1bOjAzqwxz99ebHH2D60YN3+lFVWvIsEbIqFYovCgQZpoWKxY/WeGWt5kwsAFB68+Pvb/H/X7cj+xBRv2ITH0n4R0V4d8qWyKhNHKtr9dudAQ4GQccMPc1kyTgRcRDg7C4QDVsrhpQlmIPT77LtGJdtaTh0RHBiYEWjpv8Nu41Gw7innvXIDleOzoLIJyG0wOWxkCXbIj3a7jdMq9PBmrlWDEnFFRVGYxYyCWwMQXUkHF41ay2z1lFMzan8OSm3mFjrQLZMs0ucDmLurYbsWTOQx64taozXFXH6hRH9ZjLs1nq1xtsg97VVq5BZu9noo7XVc/Z9p9sbtI17vU6nrSpmIZ9vtEHwa/ks9/y7pw+HcBBEVBA7YlfUmwCRl/BtTGXEeLAqMdCOH724oi2da7+4qZ03SKbSkqrKVPwwGkL5SxdjAWYGE4Sg/eQnUK5CNAmROGtmC17NyKC2oFFRhmDoTElaoQKbM8ylJG/nZPBQCZ7BwTBTsbmHyRNiAY9dUrCw/QIe2+VcIviEWQ7hHMqWF2NweAXlsaA00L8EdcrwbK5BH/uLzaq+p8XpWBzEvkWFzFv2uaAFHXLuYtvHQdL02TVPvl3EgE1X02A1BJ00VMEnN0NozSGyXSIKaPYxcE2bj1wmP4HNr+tHWwXtFf20/a+PJsFWKR0rZ6iDULHQw9wIHxZ2B2ZUQpBJkixVVJsVfOlofTEfRPKQB47KPCskkNdUVGpZtvpHOKQOi/0l6cfD2MJo7cEYOzrkzlpZyOU8r7ELBk8zkSTZwIHkS5VxoIo+jUiSSaqUIyQ2+jc0aP6eXwdUPKYjTHQDzLuRTdUnacoMs04kMPFIvmqhS3AYoQEionITGfubaY3Ng4gwlJoEaC0zpdvjcRBtVQPu0KEMqV1Tv1QyVFXZT8R8SsY8k6M5zvDd1uosJyFdL7sJZMFJKmVXeMzZhKfgWmWaeOiYkug/mymhUrMc6jNNi26Tr7wzTv9XAvnbG31L7R3kXsuyBDVXDDmROB+wFx7T0GM2OaUqpOPkpU4gDdO0badr9s2u0fU7nQhmPooriWz6dyN//Zbw3euBz4JYLynH/G0gPG4Tz1CTVsXIKybRK6GQQdccOaO+ZRutjuuPPjIInORq2ZUx9zp9q+uMur2O4b60rq27sYTEtdUUgmPafbvjmH1D9F7Yg4/ZHfuE+jxADEqIvLI9y5iBYvatgdm2ifHyatTt3x2ISBA6YpcGbZpmz+z3DfNlazy6s4GZNd/rjLpdy+qZjjFuXYVzC7JfH8QXvDDeXOr5BgvQwXre1CC9F92XN3MgTmPbptShDv5u3gUIWzjGy+5gJFeAeC9LnG8M5jPXYtKwVmKgIpBcnRao8Dsb2yOOCu6dPMmiu00wVWDRpGaHcRVV53ahUpeJjrK6XjMfUn8Y8W+sCeqza1liU22OFYrzgn0c82KytZVIvyV3seWpAN38acSFziHWgHBRpqFLfVwXeIZM+C/KGaKlArGQZLnLAK0SZ6sMMUk41bbQ5sXzKuBfni2ltTpNIthhKt95dy6juz+fBwtJR9al+DPrwOztoR7nmeGzt6nGWU1ehFt+clVuy3HbvZsPTAzusurjkf0P/S+9xW128iFe+Nmu9bvw4NO5n6ZZ66mfKZGJVYWiWoZ5NPqcyNN4NGI2o0F0qL1KFfK6I77P5OUJZvoyFrRYk3OdHOxPKx5T4kzQmzeVNy8484MjdV7x6NHhEJ5IFTOJKqjd7DHFrI/o1X8y3UsYhfVxRhzqlaai83F+e3rtOUZvjqsfVaGPFViAMtLDi+lhxKp4QW/Uzioc794/+ebweP+zRzvlzWRpzEMaEFZNGhrCOIyMdq1rRLGweBUu6WQItVoNF9K4IuNqXT5oqM9WuURtl0PZYzIC9BzwJGDqcOSIJK4g2boggmFEys4cmJhfPeuldTWtU6CVPSoWHbNAabakjqIpdE22IF8QmrU8QfGx9suVcnZAkezZe54/c/ByL7di0nF7LrUvlSxlbW6pda0mGS644wnxvSQa5yJwJM+o/+anv8F545n+zleXQzgTk/EVdjOjUJr1j5n3ffPjz5AbYwjNQadnNFpGo/k2jsxEqo3moNsymk2j2VjJ8dPfIbWTRrVE9M9w3lyEv0/G8DnBoSbk5YvX//Sc22vRbRuNztswLWjRaxqNgdHs31aL1lItWotaPIEzlwTR7bEjErRnew3sJnK0jPbqPpvD3l6Kvb2I/WGMc/pL4jk4C/zba2CqAbTWGOqvqUFnqQadRQ2+IFcMndrJ618EfQmYyuzFr3/xPCJur01/bW0Ga2rTXapNd1GbT9GpCC6zb+OBSzx2e00G62vSW0+T3lJNektGFh8x2A0CEqwB31wPfqvRWBO+uRS+uaQjEPdDZvic3xo/olkbf3NN/IveCwnO+4v4d4Po9T8CxuEBrhNVbJtnzNWf1aG5QoecvqhBiJLpou/LsRXBD2BJbEwzkSyFSXe0F8PkXIhMlqbFGDm78JmCWDh9ztVVRp4qg4UU66+1tPjwrdjlBKVC1J8bM3l014UscOfbG6XFkFtgzoKqLmTxEgvpuWcpi3QLg+KHPKjpQhavVFKd8s5GmlneLJzoQj/nTdP00kofnzAUuQc5dzflXu5Tk5YHM7y9KW8vQ517sQWNM2+lDDR1RGqxkLVbcCGzvLmn0IVmzttPeRenb4G5mTNn80/XpBueyzaEzh7vHp3eP358uHQdEQkSSDXx1LmVTnBLpYRkOkPTtQPOnPPKO1YhlWebG7EiMYiBebIRcSMjwTeaZEtdyFnWPovucv0x51IQbHIguFO2eYDLxig7ntQuLNnAyVZNSIjGSt6V3+WNVl+Y+b+Lmrqogw9xUQcH7++iDhLm93JRB08/xEU9/QAX9fTg/V3U01Tj93FRTxNzvZ+LOvhqpYtass0RCnalBv68o5H6eqeeuet7C+wUn0y9RcVXV3uIN1Rb9SK2o0oVYqEqskuMmlDW9JFbZfUuxrGe8AhaXSwtHv43u2CzSG9i5JdC0SBiAi6R2sNU1K5yRfsBvVsB6uYHZkHUgZDri5oMO2jF9QFbHY2LyTo7FHN+b8ZXrTowLwBxqLT1VcvlTk0pkw6EnEk5shTp3Rxkl07RD4xdwtIhaTa6/Q52mCrsuSwgyUA845cTPh24bbPT7g3UeZ06ziFhOqdK+9RzWU7VaA0ag3YvGdHYDams09d/4XBCYo8nTTYH7W5rkJB9KshL5iWTjrIX+ugrpeo2ewrXHLBDesNsDntoTE3VwUb7TU2VVmkqjD+E5fPObLb6Zmce2B5hIley1ei1e53OQBc+G0/CxFuWjiW5JAXn0e51zUZzwRTuDFW/2+u3zXaiIxrcIzg6XLWL2ShOcMMwsustf4Bd54oENnVm7mN/9ei0cB0bW8MXN+llajWNsktAIF1Ko9WXsk+SW+A43fREy69kz96xtvOWHIhDJylk6U7txpPFxknSqlqcJGJ11bvuab+CGyLGEowDqHz3fQXqFgvq0gXDhoqegkrKTn6FGxsF/NNvcxT4UBnOzoh4mDNhSUPZ+c2m9jvI/QrU5eayrNe2L+oXm/jcutAI6hfN+rgMWxVlnv8AJo+0RicvAAA="))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("H4sIAAAAAAAA/61aW2/juBV+969g51InQMbODII+BM0Uc8tm2swFyOwuFotBhpZpi4lEakTKHtf2P1i0QNuHFkV3UaAtFuhD+9jn/pT+ge5P6HdISpZviRLUgGNJPOfjOYfnRip32ZtMqCfHLMt1JIzRObMizRJuRav1LhbsXBc2K+xR+fSc6cxKrVhhhGEXfMRNlMvMsq9PuOonosdz834ntjYzh91uXD27MJ1Ip91hIfuiu8sS2ct5Pum0Wk/6fUmAPEkm68K4WSzkGOgk0WOphmwxD4sKY3XKYpFkIjcAu3uX/fDdr/7BPhNK5DIq8QJBq3UicsE4vkangumBg4YOMuG9RJR0h63WjJ24azZjz4XXkJSetWYPwqe68HfguGdsDgHlYMLcZ8ZMrMeGcfbzszevWS6yXBihLHdQYXKoOoJJ+izjOU+FpSmXsF6qU6nElVh7bCxtjIViJuMw3N514FZ/9eTVKSs/JTixuIERjFCXseIGqed3UmzidwPX8Qs1YrVPnT8q8hx6MZDIXKuUrkc8l259oIuyciChUW+yAu0Uw1LxTKwBc8X8SH+7aF4yHukEbrcBgCsjmR/dGcjcWPjRsCD5dgM4M+JjIVRUOZZfw9ocO0ZEWvVrnE7qAWPL5qi8HkMDnafcskGhIuc3bJXYIdjtCPYaCI+QcRtvQXBDFbPVDFrmE6Z7FyKyZiFDjlDcIgMN/ZjRz2t488d1EA+h+SDbDOFGKhl2JKzsInKXoGBgI5Ydntywe3YKXwyLgKSBqLFFrhwhoqdIMO+OldkhTeNCyA3ddVc+FeyW8eKgNvmrHne8eTuBqOZg8Bqvn0cZiqVVWvJ6Da83GXyDZB3xpKCMlyPcLwWMpDxzifKmd1FDgdNJcFCgwBaOsNJFfLI5rzkgYd671yEat6oOsY+0/lwOBitycaaKtAcmaOL91gSZKisTZ6gHLn2v+7eTJJWqsJSWkKNy/PT5BH9TrWyM37EQl4YBeCIop9NC7dhY5nUYzvpiwLFiwTbeXQzQo3irKXi9PK3QBoSIm0W2oIdg6wnyh74XvZyDFBccFwsOj1DKdXuEDKVsg1uUKQcKSEkmH8JDDCNih8uDKchenKX8k7/foxupFjdG/pJ+FZNwrohbWkGwuErBopiHzJm5gnqNFDYXLrnVpTGlOCHL+Hg7ZHcKJb2XHbqseZiIoVD9TqfDvn4ACQ/339MF/3T4cN9dxiTp4cH++zteIOtS/nVmkcq+c4Tr5XURfkFFJ34jRCJsAEjms9cAJqjezBN6Q1UgfuX+b2bD9chdP4QJvYC+d9skYDl0lZI7nBINN+yhL3ZOYB/tBt7ETAIODD/yER9yZXRh6iVms1GcatJOVucf6DUjR26aJniIOJeBr9LJr1vKl8vMVkd4BcJr4S7MEt4if568Qy91JbvvptjSZ8aGciQgS9WJe0+puKQylqMA7pHxyxxJiVQmSdk6r9a7CmqR8pemRNpG4bK+GpWYi0SPpFaxeKGl0c9rIE0QoMHLszceKFRlL02oMzUsbq4CqtN7aXpaJ4Krxgh1+lBLgkBNEer0HgGVupZAl7wqz/mEVt6RrPbmznmcHVzONlciBJLtGFT9Nkjh9CDnxvAQWajc+qyp5lGWQZZQguLNcOD8gq8koNxGhavPxOg3aG3DAmWtR/VWzbkaribtLQiOst7khpb+Ubqmy2YER7rUJQeEg+YIBxsR0ke8KQKRbkI4aI5wwFd7fZ/2uNnioEgOyMUrIbD08QArz2peUa17ItFn8mQLgnHVsIkWoSxSyTwDMO2BA8RqF91LdHTJ6DHl1oUk1DlvlgKpKlrySv9AKHxhD2TRKqu6FIseSg3RYoTeMxwz/OV79owadt/9Nj5jiNZ5bnneQCl+xl4ogkUrVsjE7R54sIiNoWNeUK0esCesDfI2e8okFiwvvDEjnWYk6RUogpRG6cKj9pM2a2sI6SoZrp+2O7Rg/h4JU6HzPWRHR3v44s+P3Bd/frrHHuMvrh4fOantJBMwTJABpRElrbEqwU1Jmoq3fPa07TCHtjEawcAkaGc5bZAwpmowV5rmKhxq9j8WWOIlQNRtVMgvqQ28hbae23eRJSJaw1vjEe8yGiIuuhWUY6QkPiwS7CjEJ+p53Da4hI558xWmakbbFFf0CJ6YCQixDXdDqiLzJoIitOPN8PFGC+WWxlDOKcWTgxfUc91wtYXjcexv+s2DMXBrYiHm5pYJnJXURt3U01XbVuzJjcMk0ePVIEluHiQeZS1ECE0J+KNLg80RKaOQNJTJlLZ0VIBq0acJBlhmn+p0c0zkSp2vpspCgdG8aOhnnnqLr/nBzxoavwa1MUn58dObo21Yy1KypuG0TbZyac2alLdArsm5itt6zM4EnXJx7G6E25SWbx7Q64gUs3Sk7oYyW/4+8GUPOxjViW2ahHr+2z+xFwGIntxlX0Ij8kV3pB32y+5YKeX5ZV+PFTWtaF9arXf8ktSozr8DsTv25GwccIzIRzLyu7mwWyIuSTu6TbidVutU2LbxiZ9OvCMycjmTfw/ylE5gqt3djuEjQYhImOdh3k7cM+e76DE+fPiweB/TWujnZ2M706kSiCFjz/GXd/Y79POapwKXrvWZz/fYGlGkC2XzyYJm19nzmT/Hp0PB6TQc6p9XvQ+odY/s4VqHcytTzzid+tPXNYb5HE7kuyFypx++++bP//3XrxnE2e8EPalvWkhRnkqRaahDKXLXixE9PTp/Np//+5/PSLjw4JgeHO+yB2wgBDwskZfCkR/T7Snu6izVQ7Dtgo95qX7zvZdIorRmQvR/kWYxZLlMu7Hnq0ZeSfgZhlL67cZ0UuoOWMllaHVL4r7MH/7krYaHzOedcpa/ueG4SCWsM5nP77Py2pP85/e/I+sQEQpxJLNXr+bzNPVHd3Qvw2kECrWIrOiXyN/8tbJqlOiiH2l4KeG7O+ZuK9q/O9ovpJE9mdBhDvIlcY6qJ051r/ji4ZLmuwHsj98y9pZ6BlqngJOFe6KFy1bzfss+/4JOM8WnkrIYvaTbhYVAQy8vTYFYkvQOAXllOu10umVMwLnRvmilU/Jc0BEZJnJHo8I2YABVbb4/uPlSrZtNSIQ3m5E4tk6ZxXSm7IxxJcC5I/QY02mXQgSBReF6rOEXIHch6I6pAwrGKRdOp3RsQ8TYqeiCimmZPmbsXS3GZux4ET4gkm6TchLcE5dvlxxwVvef2cIFZrTGblHLqG/yrYSnFw3JxCWN6ZRegbXv7x9g+7NTnjVRxtmF9Wl8c/6gEUoMi6inuzJL0OiGxFBPCxXdtmywPRfUssBqDnCI9cin+6UgpwcbQnB7AHqAeqi5Z1VQeWchu8KgMHPtDiWl1Xqtx0gkArt4FKAIJWZYligUdb/M6KoUFBX9UId63MSoQJ/Txtq/21t6jTek1/fwt35VEluoCAl7YNidsbV5R6ruW6rgPxtJMT66eHgHEjuYlf9WqCrjUa0YlrRSEWnaRwCwMz4qhW4y+Wsxvv9o/yudX95OgsdleHUwPezxP6sz5Y6HIQAA"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64(""))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("")))};
var _params=processExpr(" ");
const oafp=b=>{if(!isUnDef(b)&&!isDef(b.____ojob)){Object.keys(b).forEach(a=>{if(0<b[a].length){var c=a.toLowerCase();a!=c&&isUnDef(b[c])&&(b[c]=b[a],delete b[a])}});var N=a=>{for(var c=Object.keys(E),d=0;d<c.length;d++){var e=c[d];isDef(b[e])&&(a=E[e](a))}return a},J=(a,c)=>{b.__origr=a;c.__ifrom&&(a=$from(a).query(af.fromNLinq(c.__ifrom.trim())),delete c.__ifrom);if(c.__isql){var d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";
break;default:d=__}if(isArray(a)&&0<a.length)if(isString(b.isqlfiltertables)){var e=$sql();d=u(b.isqlfiltertables);isArray(d)&&(d.forEach(f=>{isUnDef(f.table)&&k(-1,"One 'table' not defined in isqlfiltertables");f.path=_$(f.path,"isqlfiltertables table "+f.table+" path").isString().default("@");var g=$path(a,f.path);isArray(g)&&(e=e.table(f.table,g))}),a=e.closeQuery(c.__isql.trim()))}else a=$sql(a,c.__isql.trim(),d);delete c.__isql}c.__path&&(a=$path(a,c.__path.trim()),delete c.__path);if(isString(a))return N(a);
a=N(a);c.__from&&(a=$from(a).query(af.fromNLinq(c.__from.trim())),delete c.__from);if(c.__sql){d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(a)&&0<a.length&&(isString(b.sqlfiltertables)?(e=$sql(),d=u(b.sqlfiltertables),isArray(d)&&(d.forEach(f=>{isUnDef(f.table)&&k(-1,"One 'table' not defined in sqlfiltertables");f.path=_$(f.path,"sqlfiltertables table "+f.table+" path").isString().default("@");var g=
$path(a,f.path);isArray(g)&&(e=e.table(f.table,g))}),a=e.closeQuery(c.__sql.trim()))):a=$sql(a,c.__sql.trim(),d));delete c.__sql}c.__opath&&(a=$path(a,c.__opath.trim()),delete c.__opath);return a},l=(a,c,d)=>{c=clone(c);toBoolean(b.color)?__conConsole=!0:isDef(b.color)&&(__conAnsi=!1);a=isString(a)?a.trim().startsWith("{")&&a.trim().endsWith("}")?J(jsonParse(a,__,__,!0),c):J(a,c):d?J([a],c)[0]:J(a,c);isDef(b.outputkey)&&(a=$$({}).set(b.outputkey,a));isDef(b.outkey)&&(a=$$({}).set(b.outkey,a));Q();
isUnDef(c.__format)&&(c.__format=getEnvsDef("OAFP_OUTPUT",c.__format,"tree"));G.has(c.__format)?G.get(c.__format)(a,c):r(a,c,__)},C=(a,c)=>{var d=af.fromString2Bytes(""),e=af.newOutputStream();$sh(a).cb((f,g,h)=>{ioStreamCopy(e,f);f=e.toByteArray();0<f.length&&(d=f)}).get();return c?af.fromBytes2String(d):d},u=a=>{if(!isString(a)||""==a||isNull(a))return"";a=a.trim();return isDef(af.fromJSSLON)?af.fromJSSLON(a):a.startsWith("{")?jsonParse(a,__,__,!0):af.fromSLON(a)},K=(a,c,d,e)=>{d=_$(d).isString().default("_oafp_fn_");
c=splitBySepWithEnc(c," ",[['"','"'],["'","'"]]);let f=[];$ch("__oaf::chart").create();if(1<c.length){for(let g=0;g<c.length;g++)if(0==g)f.push(c[g]);else{let h=splitBySepWithEnc(c[g],":",[['"','"'],["'","'"]]).map((m,n)=>{if(0==n){if(m.startsWith("-"))return m;global[d+g]=()=>{if(isString(e)){var q=$ch("__oaf::chart").get({name:e});q=isUnDef(q)?[]:q.data;var x=$path(a,m);if(isArray(x))return x.forEach((v,z)=>{isArray(q[z])?q[z].push(v):q[z]=[v]}),x=q.pop(),$ch("__oaf::chart").set({name:e},{name:e,
data:q}),x[0]}else return $path(a,m)};return d+g}return m}).join(":");f.push(h)}return f.join(" ")}return""},p=a=>{"undefined"!==typeof a&&("undefined"===typeof b.outfile?(toBoolean(b.loopcls)&&cls(),print(a)):("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"!==typeof global.__oafp_streams[b.outfile]&&ioStreamWrite(global.__oafp_streams[b.outfile].s,a+(toBoolean(b.outfileappend)?"\n":""))))},r=(a,c,d)=>{"undefined"!==typeof a&&(a=$o(a,c,d,!0),isDef(a)&&p(a))},t=a=>
{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||toBoolean(b.chartcls)||printErrnl(_$(a).default("(processing data...)"))},Q=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||toBoolean(b.chartcls)||printErrnl("\r"+" ".repeat(_$(a).default("(processing data...)").length)+"\r")},k=(a,c)=>{isUnDef(c)&&(c="exit: "+a);if(isUnDef(ow.oJob)&&!toBoolean(b.noexit))0!=a&&printErr(c),exit(a);else throw c;},y=()=>{__initializeCon();b.help=_$(b.help,"help").isString().default("");switch(b.help.toLowerCase()){case "filters":var a=
"docs/FILTERS.md";break;case "template":a="docs/TEMPLATE.md";break;case "examples":a="docs/EXAMPLES.md";break;case "readme":case "usage":a="docs/USAGE.md";break;default:a=b.help.toLowerCase(),a=isDef(D[a])?"docs/"+a+".md":"docs/USAGE.md"}var c=(getOPackPath("oafproc")||".")+"/"+a;let d="";if("docs/USAGE.md"==a&&0<Object.keys(D).length){d="\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let e in D)d+="| "+e+" | help="+e+" |\n"}isDef(c)&&io.fileExists(c)?(__conConsole=
__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c)+d)):p(isDef(b.out)&&"raw"==b.out?io.readFileString(c)+d:ow.format.withMD(io.readFileString(c)+d))):isDef(global._oafphelp)&&isDef(global._oafphelp[a])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[a]+d)):p(isDef(b.out)&&"raw"==b.out?global._oafphelp[a]+
d:ow.format.withMD(global._oafphelp[a]+d))):isString(D[b.help])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(D[b.help])):p(isDef(b.out)&&"raw"==b.out?D[b.help]:ow.format.withMD(D[b.help]))):p("Check https://github.com/OpenAF/oafp/blob/master/src/"+a);k(0)},R=()=>{var a=(getOPackPath("oafproc")||".")+"/.package.yaml";a={oafp:{version:io.fileExists(a)?io.readFileYAML(a).version:"(not available/embedded)",inputs:Array.from(F.keys()).filter(c=>
"?"!=c).sort(),transforms:Object.keys(E).filter(c=>"transforms"!=c).sort(),outputs:Array.from(G.keys()).filter(c=>"?"!=c).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},
os:{name:String(java.lang.System.getProperty("os.name")),version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};
return stringify(a,__,"")};ow.loadFormat();b.format=b.output||b.format||b.out;b.type=b.input||b.type||b.in;b.out=b.format;b.output=b.format;b.in=b.type;b.input=b.type;if(isUnDef(b.file)&&isUnDef(b.cmd)){var H=__;for(let a in b)if(""===b[a]&&"-debug"!=a&&"-v"!=a&&"-examples"!=a){H=a;break}b.file=H}"[object Object]"==Object.prototype.toString.call(b.data)&&(b.data=stringify(b.data,__,""));var L=new Map([[".json","json"],[".ndjson","ndjson"],[".slon","slon"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],
[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"],[".toml","toml"],[".jwt","jwt"]]),O=new Set(["csv","ndjson"]),P={lines:(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));if(!b.linesjoin&&isString(a))0!=a.trim().length&&(0<a.trim().length&&(a=a.trim().split(/\r?\n/)),l(a,c,!0)),M=!0;else return!0},ndjson:(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(b.ndjsonjoin)return!0;
isUnDef(global.__ndjsonbuf)&&0!=a.length&&a.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=a.length&&!a.trim().endsWith("}")){global.__ndjsonbuf+=a.trim();return}0<global.__ndjsonbuf.length&&(a=global.__ndjsonbuf+a,global.__ndjsonbuf=__)}0==a.length||0<a.length&&"{"!=a.trim().substring(0,1)?(l(jsonParse(global.__ndjsonbuf,__,__,!0),c,!0),M=!0,global.__ndjsonbuf=__):(l(jsonParse(a,__,__,!0),c,!0),M=!0)}},E={transforms:a=>{if(toBoolean(b.transforms))return Object.keys(E).filter(c=>
"transforms"!=c).sort()},cmlt:a=>{if(toBoolean(b.cmlt)){a=isArray(a)?a:[a];b.cmltch=_$(b.cmltch,"cmltch").default("(type: simple)");var c=u(b.cmltch);if(isMap(c))return isUnDef(c.type)&&k(-1,"cmltch.type is not defined."),isDef(c.lib)&&loadLib(c.lib),0>$ch().list().indexOf("oafp::cmltdata")&&("remote"==c.type?$ch("oafp::cmltdata").createRemote(c.url):$ch("oafp::cmltdata").create(c.type,c.options),c=Number(_$(b.cmltsize,"cmltsize").isNumber().default(100))-1,0<c&&$ch("oafp::cmltdata").subscribe(ow.ch.utils.getHousekeepSubscriber("oafp::cmltdata",
c))),a.forEach(d=>$ch("oafp::cmltdata").set({t:nowNano()},d)),$ch("oafp::cmltdata").getAll();k(-1,"Invalid cmltch parameter")}},diff:a=>{var c=u(b.diff);if(isMap(c)){isDef(c.a)&&isDef(c.b)||k(-1,"diff.a path and diff.b path are required.");loadDiff();let d=$path(a,c.a);a=$path(a,c.b);let e=__;toBoolean(b.color)&&(isUnDef(b.difftheme)&&isDef(getEnv("OAFP_DIFFTHEME"))&&(b.difftheme=getEnv("OAFP_DIFFTHEME")),e=u(_$(b.difftheme,"difftheme").isString().default("")),e=merge({added:"GREEN",removed:"RED",
common:"FAINT",linenum:"ITALIC",linediv:"FAINT",linesep:"|"},e));let f=(g,h)=>{if(toBoolean(b.color)){isUnDef(h)&&(h="");var m=new Set;if(isArray(g)){let n=1,q=toBoolean(b.diffnlines),x=0;q&&(g.forEach(z=>{x+=z.value.split("\n").length}),x=String(x).length+1);let v=z=>{let A;A=q&&""!=h?ansiColor(e.linenum,0<z?$ft("% "+x+"d",n):" ".repeat(x))+ansiColor(e.linediv,`${e.linesep}`):"";n+=z;return A};g.forEach((z,A)=>{A=z.value;isString(A)&&(""!=h?(A=A.split(h),""==A[A.length-1]&&A.pop()):A=[A]);m.add(z.added?
A.map(I=>v(1)+ansiColor(e.added,(""!=h?"+":"")+I)).join(ansiColor("RESET",h)):z.removed?A.map(I=>v(0)+ansiColor(e.removed,(""!=h?"-":"")+I)).join(ansiColor("RESET",h)):A.map(I=>v(1)+ansiColor(e.common,(""!=h?" ":"")+I)).join(ansiColor("RESET",h)))})}return Array.from(m).join(ansiColor("RESET",h))}return $from(g).select({count:__,added:!1,removed:!1,value:[]})};return isString(d)&&isString(a)?toBoolean(b.diffwords)?f(JsDiff.diffWords(d,a,c.options)):toBoolean(b.diffwordswithspace)?f(JsDiff.diffWordsWithSpace(d,
a,c.options)):toBoolean(b.difflines)?f(JsDiff.diffLines(d,a,c.options),"\n"):toBoolean(b.diffsentences)?f(JsDiff.diffSentences(d,a,c.options),"\n"):f(JsDiff.diffChars(d,a,c.options)):isArray(d)&&isArray(a)&&!toBoolean(b.color)?f(JsDiff.diffArrays(d,a,c.options)):f(JsDiff.diffJson(d,a,c.options),"\n")}},jsonschemagen:a=>{if(toBoolean(b.jsonschemagen))return ow.loadObj(),ow.obj.schemaGenerator(a)},jsonschemacmd:a=>E.jsonschema(a),jsonschema:a=>{isMap(a)||k(-1,"jsonschema is only supported with a map.");
isUnDef(b.jsonschema)&&isUnDef(b.jsonschemacmd)&&k(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var c;if(isDef(b.jsonschemacmd)){var d=$sh(b.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:k(-1,"Error executing the command '"+b.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(b.jsonschema);isMap(c)||k(-1,"The schema provided is not a valid JSON schema.");ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(a),errors:c.errors}},
sortmapkeys:a=>{if(toBoolean(b.sortmapkeys)&&isObject(a)){let c=(d,e)=>{let f=Object.keys(d).sort(),g={};for(let h=0;h<f.length;h++){let m=f[h],n=d[m];Array.isArray(n)?g[m]=n.map(q=>"object"===typeof q&&null!==q&&void 0!==q?sortMapKeys(q,e):q):g[m]=e&&"object"===typeof n&&null!==n&&void 0!==n?c(n,e):n}return g};return c(a,!0)}return a},searchkeys:a=>isObject(a)?searchKeys(a,b.searchkeys):a,searchvalues:a=>isObject(a)?searchValues(a,b.searchvalues):a,maptoarray:a=>toBoolean(b.maptoarray)&&isMap(a)?
$m4a(a,b.maptoarraykey):a,arraytomap:a=>toBoolean(b.arraytomap)&&isArray(a)?$a4m(a,b.arraytomapkey,toBoolean(b.arraytomapkeepkey)):a,flatmap:a=>toBoolean(b.flatmap)&&isObject(a)?ow.loadObj().flatMap(a,b.flatmapsep):a,merge:a=>{if(toBoolean(b.merge)&&isArray(a)&&1<a.length){for(var c,d=0;d<a.length;d++)c=0==d?a[d]:merge(c,a[d]);return c}return a},correcttypes:a=>{toBoolean(b.correcttypes)&&isObject(a)&&traverse(a,(c,d,e,f)=>{switch(descType(d)){case "number":isString(d)&&(f[c]=Number(d));break;case "string":"true"==
d.trim().toLowerCase()||"false"==d.trim().toLowerCase()?f[c]=toBoolean(d):d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?f[c]=new Date(d):d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?f[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?f[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&(f[c]=new Date(d))}});return a},removenulls:a=>{toBoolean(b.removenulls)&&traverse(a,(c,d,e,f)=>{(isNull(d)||isUnDef(d))&&delete f[c]});return a},trim:a=>{toBoolean(b.trim)&&traverse(a,(c,d,e,f)=>{isString(d)&&
(f[c]=d.trim())});return a},removedups:a=>{if(toBoolean(b.removedups)){if(isArray(a)){var c=new Set,d=[];a.forEach(e=>{var f=e;isObject(e)&&(f=sortMapKeys(f));f=stringify(f,__,!0);c.has(f)||(c.add(f),d.push(e))});return d}k(-1,"removedups is only supported for arrays")}return a},llmprompt:a=>{if(isString(b.llmprompt)){b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);var c=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system",
"envs").get(b.llmenv));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&c.getGPT().setConversation(io.readFileJSON(b.llmconversation));var d="json",e=!0;isString(b.input)&&("md"==b.input&&(d="markdown",e=!1),"mdtable"==b.input&&(d="markdown table",e=!1),"hsperf"==b.input&&(d="java hsperf file"),"raw"==b.input&&(d="raw",e=!1));c=c.withContext(e?stringify(a,__,!0):a,isDef(b.llmcontext)?b.llmcontext:`${d} input data`);if(isString(b.output)&&("md"==b.output||"mdtable"==b.output||"raw"==b.output))return a=
c.prompt(b.llmprompt),isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),""),a;a=c.promptJSON(b.llmprompt);isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),"");return a}return a},splitlines:a=>toBoolean(b.splitlines)&&isString(a)?a.split(/\r?\n/):a,regression:a=>{if(isString(b.regression)){ow.loadAI();var c=ow.ai.regression(),d=_$(b.regressionpath,"regressionpath").isString().default("@");let e=u(_$(b.regressionoptions,
"regressionoptions").isString().default("{order:2,precision:5}"));d=$path(a,d);if(isArray(d)){if(isString(b.regressionx)){let g=$path(a,b.regressionx);d=d.map((h,m)=>[g[m],h])}else d=d.map((g,h)=>[h+1,g]);let f;switch(b.regression){case "exp":f=c.exponential(d,e);break;case "poly":f=c.polynomial(d,e);break;case "power":f=c.power(d,e);break;case "log":f=c.logarithmic(d,e);break;default:f=c.linear(d,e)}return isDef(f)&&isDef(f.points)?(isString(b.regressionforecast)&&(a=$path(a,b.regressionforecast),
isArray(a)?a.forEach(g=>{f.points.push(f.predict(g))}):k(-1,"Invalid array of x for regression forecast")),f.points.map(g=>({x:g[0],y:g[1]}))):f}k(-1,"Invalid data for regression analysis")}return a},normalize:a=>{if(isString(b.normalize)){var c=u(b.normalize);if(isMap(c)){ow.loadAI();if(isMap(a))return ow.ai.normalize.withSchema(a,c,!0);if(isArray(a))return a.map(d=>ow.ai.normalize.withSchema(d,c,!0))}else k(-1,"Invalid normalize schema")}else k(-1,"Invalid normalize schema")},denormalize:a=>{if(isString(b.denormalize)){var c=
u(b.denormalize);if(isMap(c)){ow.loadAI();isUnDef(ow.ai.normalize.denormalizeWithSchema)&&k(-1,"This version of OpenAF does not support denormalizeWithSchema");if(isMap(a))return ow.ai.normalize.denormalizeWithSchema(a,c,!1);if(isArray(a))return a.map(d=>ow.ai.normalize.denormalizeWithSchema(d,c,!1))}else k(-1,"Invalid denormalize schema")}else k(-1,"Invalid denormalize schema")},kmeans:a=>{isNumber(b.kmeans)||(b.kmeans=5);isArray(a)||k(-1,"For kmeans transform you need to provide an array as input");
ow.loadAI();return ow.ai.cluster({type:"kmeans",numberOfClusters:Number(b.kmeans)}).classify(a)},getlist:a=>{if(isObject(a)&&(toBoolean(b.getlist)||isNumber(b.getlist))){var c=!1,d,e=isNumber(b.getlist)?b.getlist:1;traverse(a,(f,g,h,m)=>{!c&&isArray(g)&&(e--,0==e&&(c=!0),d=g)});return c?d:a}},set:a=>{var c=u(b.set);!isMap(c)&&isUnDef(c.a)&&isUnDef(c.b)&&k(-1,"set.a path and set.b path are required.");isUnDef(pForEach)&&k(-1,"This version of OpenAF does not support the set transform");isString(c.a)||
k(-1,"set.a path is not a string.");isString(c.b)||k(-1,"set.b path is not a string.");let d=$path(a,c.a);a=$path(a,c.b);isArray(d)||k(-1,"set.a path result is not an array.");isArray(a)||k(-1,"set.b path result is not an array.");let e;if(isString(b.setkeys)){ow.loadObj();var f=b.setkeys.split(",").map(g=>g.trim());e=g=>stringify(isObject(g)?sortMapKeys(ow.obj.filterKeys(f,g),!0):g,__,"");c=g=>pForEach(g,e).reduce((h,m)=>h.concat(m),[])}else e=g=>stringify(isObject(g)?sortMapKeys(g,!0):g,__,""),
c=g=>pForEach(g,e).reduce((h,m)=>h.concat(m),[]);switch(b.setop){case "union":let g=new Set(c(d));return d.concat(a.filter(v=>!g.has(e(v))));case "diffa":let h=new Set(c(a));return d.filter(v=>!h.has(e(v)));case "diffb":let m=new Set(c(d));return a.filter(v=>!m.has(e(v)));case "diffab":let n=new Set(c(d)),q=new Set(c(a));return d.filter(v=>!q.has(e(v))).concat(a.filter(v=>!n.has(e(v))));default:let x=new Set(c(a));return d.filter(v=>x.has(e(v)))}}},G=new Map([["?",(a,c)=>{a=Array.from(G.keys()).filter(d=>
"?"!=d).sort();r(a,c)}],["pm",(a,c)=>{r(a,c)}],["key",(a,c)=>{r(a,c)}],["html",(a,c)=>{let d;c=!1;b.htmlopen=toBoolean(_$(b.htmlopen,"htmlopen").isString().default("true"));b.htmlwait=_$(b.htmlwait,"htmlwait").isNumber().default(2500);b.htmlopen&&(d=io.createTempFile("oafp_",".html"));ow.loadTemplate();isString(a)?(a=ow.template.html.genStaticVersion(ow.template.parseMD2HTML(a,!toBoolean(b.htmlpart),!toBoolean(b.htmlcompact))),a=a.replace("<html>",'<html><meta charset="utf-8">')):(a=ow.template.html.parseMap(a,
!0),a='<html><meta charset="utf-8"><style>'+a.css+"</style><body>"+a.out+"</body></html>");b.htmlopen&&(io.writeFileString(d,a),c=openInBrowser("file:///"+d.replace(/\\/g,"/")));c?sleep(b.htmlwait,!0):p(a)}],["ctable",(a,c)=>{r(a,c)}],["stable",(a,c)=>{r(a,c)}],["table",(a,c)=>{r(a,c)}],["json",(a,c)=>{r(a,c)}],["yaml",(a,c)=>{r(a,c)}],["cyaml",(a,c)=>{r(a,c)}],["cjson",(a,c)=>{r(a,c)}],["slon",(a,c)=>{r(a,c)}],["cslon",(a,c)=>{r(a,c)}],["ctree",(a,c)=>{r(a,c)}],["tree",(a,c)=>{r(a,c)}],["res",(a,
c)=>{r(a,c)}],["key",(a,c)=>{r(a,c)}],["text",(a,c)=>{r(a,c)}],["csv",(a,c)=>{r(a,c)}],["map",(a,c)=>{r(a,c)}],["md",(a,c)=>{r(toBoolean(b.mdtemplate)?$t(a):a,c)}],["log",(a,c)=>{if(isString(a)&&toBoolean(b.logprintall))p(a.replace(/\n$/,""));else if(c=a,isMap(a)&&(c=[a]),isArray(c)){isUnDef(b.logtheme)&&isDef(getEnv("OAFP_LOGTHEME"))&&(b.logtheme=getEnv("OAFP_LOGTHEME"));let d=u(_$(b.logtheme,"logtheme").isString().default(""));d=merge({errorLevel:"RED,BOLD",warnLevel:"YELLOW",timestamp:"BOLD"},
d);c.forEach(e=>{if(isMap(e)){let f=isDef(e["@timestamp"])?e["@timestamp"]:__,g=isDef(e.level)?e.level:__;e=isDef(e.message)?e.message:__;let h;isDef(g)&&(0<=g.toLowerCase().indexOf("err")&&(h=d.errorLevel),0<=g.toLowerCase().indexOf("warn")&&(h=d.warnLevel));isDef(f)&&24<f.length&&(f=f.substring(0,23)+"Z");(isDef(e)||isDef(f))&&p(ansiColor(d.timestamp,f)+(isDef(g)?" | "+ansiColor(h,g):"")+" | "+ansiColor(h,e))}})}}],["raw",(a,c)=>{isString(a)?p(a):p(stringify(a))}],["lines",(a,c)=>{isArray(a)?a.forEach(d=>
p(d)):p(a)}],["ini",(a,c)=>{isString(a)||(ow.loadJava(),c=new ow.java.ini,p(c.put(a).save()))}],["toml",(a,c)=>{isUnDef(af.toTOML)&&k(-1,"TOML support not found.");if(isMap(a))p(af.toTOML(a));else if(isArray(a))p(af.toTOML({list:a}));else return __}],["mdyaml",(a,c)=>{isArray(a)?a.forEach((d,e)=>{r(d,merge(c,{__format:"yaml"}));e<a.length-1&&p("---\n")}):r(a,merge(c,{__format:"yaml"}))}],["mdtable",(a,c)=>{isArray(a)&&(ow.loadTemplate(),p(ow.template.md.table(a)))}],["template",(a,c)=>{isString(a)||
(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(b.template)&&isUnDef(b.templatepath)&&k(-1,"For out=template you need to provide a template=someFile.hbs or templatepath=..."),b.templatedata=_$(b.templatedata,"templatedata").isString().default("@"),c=isDef(b.template)?toBoolean(b.templatetmpl)?b.template:io.readFileString(b.template):$path(b.__origr,b.templatepath),p($t(c,$path(a,b.templatedata))))}],["openmetrics",(a,c)=>
{isString(a)?k(-1,"For out=openmetrics input needs to be an array or map."):(ow.loadMetrics(),a=ow.metrics.fromObj2OpenMetrics(a,b.metricsprefix,b.metricstimestamp),a=a.split("\n").map(d=>{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).join("\n"),p(a))}],["pjson",(a,c)=>{c.__format="prettyjson";r(a,c)}],["ndjson",(a,c)=>{isArray(a)?a.forEach(d=>p(stringify(d,__,""))):
isMap(a)?p(stringify(a,__,"")):r(a,c)}],["base64",(a,c)=>{a=isString(a)?a:stringify(a);toBoolean(b.base64gzip)?p(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a))))):p(af.fromBytes2String(af.toBase64Bytes(a)))}],["gb64json",(a,c)=>{a=isString(a)?a:stringify(a);p(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a)))))}],["jwt",(a,c)=>{isMap(a)?(isUnDef(b.jwtsecret)&&isUnDef(b.jwtprivkey)&&k(-1,"For out=jwt you need to provide a jwtsecret or a jwtprivkey"),ow.loadServer(),
isDef(b.jwtprivkey)?(ow.loadJava(),c=new ow.java.cipher,p(ow.server.jwt.sign(c.readKey4File(b.jwtprivkey,!0,b.jwtalg),a))):p(ow.server.jwt.sign(b.jwtsecret,a))):k(-1,"For out=jwt input needs to be a map.")}],["grid",(a,c)=>{isUnDef(b.grid)&&k(-1,"For out=grid you need to provide a grid=...");c=u(_$(b.grid,"grid").isString().$_());isArray(c)&&0<c.length&&isArray(c[0])?(c.forEach((d,e)=>{d.forEach((f,g)=>{if(isUnDef(f.type)||"empty"!=f.type){if(isDef(f.cmd)){var h=$sh(f.cmd).getJson(0);h=isDef(h)&&
isDef(h.stdout)?h.stdout:""}else h=a;if("chart"==f.type||"bar"==f.type)g="_chrt"+(e+1)+"."+(g+1),f.obj=("chart"==f.type?g+" ":"")+K(h,f.obj,g),isUnDef(f.title)&&(f.title="Chart "+g);isDef(f.path)?(f.obj=$path(h,f.path),isUnDef(f.title)&&(f.title=f.path)):isString(h)?f.obj=h:isObject(h)&&"chart"!=f.type&&(f.obj=$path(h,"@"))}else f.obj=""})}),c=ow.format.string.grid(c,__,__," ",!0),p(c)):k(-1,"Invalid grid parameter: '"+stringify(b.grid,__,"")+"'")}],["envs",(a,c)=>{a=isArray(a)?a.map(f=>isObject(f)?
ow.loadObj().flatMap(f,"_"):f):ow.loadObj().flatMap(a,"_");c=f=>0<=String(f).indexOf(" ")?'"'+f+'"':f;isUnDef(b.envscmd)&&(b.envscmd=ow.format.isWindows()?"set":"export");b.envscmd=String(b.envscmd);isUnDef(b.envsprefix)&&(b.envsprefix="_OAFP_");b.envsprefix=String(b.envsprefix);var d=new Set,e;for(e in a)d.add(b.envscmd+(0<b.envscmd.length?" ":"")+(b.envsprefix+e.replace(/[^a-zA-Z0-9_]/g,"_"))+"="+c(a[e]));p(Array.from(d).join("\n"))}],["cmd",(a,c)=>{isString(b.outcmd)||k(-1,'For out=cmd you need to provide a outcmd="..."');
toBoolean(b.outcmdtmpl)&&(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers());let d=e=>{var f=isString(e)?e:stringify(e,__,"");if(toBoolean(b.outcmdparam))try{var g=$sh(b.outcmd.replace(/([^\\]?){}/g,"$1"+f)).get(0)}catch(h){sprintErr(h)}else g=toBoolean(b.outcmdtmpl)?$sh($t(b.outcmd,e)).get(0):$sh(b.outcmd,f).get(0);toBoolean(b.outcmdnl)?(0<g.stdout.length&&print(g.stdout),0<g.stderr.length&&printErr(g.stderr)):(0<g.stdout.length&&
printnl(g.stdout),0<g.stderr.length&&printErrnl(g.stderr))};isArray(a)?toBoolean(b.outcmdjoin)?d(a):toBoolean(b.outcmdseq)?a.forEach(d):isDef(pForEach)?pForEach(a,e=>{d(e)}):parallel4Array(a,e=>{d(e)}):(isString(a),d(a))}],["chart",(a,c)=>{isUnDef(b.chart)&&k(-1,'For out=chart you need to provide a chart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&k(-1,"output=chart is not supported in this version of OpenAF");a=K(a,b.chart);0<a.length&&(a=printChart("oafp "+a),toBoolean(b.chartcls)&&
cls(),p(a))}],["schart",(a,c)=>{isUnDef(b.schart)&&k(-1,'For out=schart you need to provide a schart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&k(-1,"Output=schart is not supported in this version of OpenAF");a=K(a,b.schart,"_oafp_sfn_","soafp");0<a.length&&p(printChart("soafp "+a))}],["ch",(a,c)=>{isUnDef(b.ch)&&k(-1,'For out=ch you need to provide a ch="(type: ...)"');isUnDef(b.chkey)&&k(-1,'For out=ch you need to provide a chkey="key1, key2"');a=isMap(a)?[a]:a;b.ch=u(b.ch);
isMap(b.ch)?(isUnDef(b.ch.type)&&k(-1,"ch.type is not defined."),isDef(b.ch.lib)&&loadLib(b.ch.lib),"remote"==b.ch.type?$ch("oafp::outdata").createRemote(b.ch.url):$ch("oafp::outdata").create(b.ch.type,b.ch.options),toBoolean(b.chunset)?$ch("oafp::outdata").unsetAll(b.chkey.split(",").map(d=>d.trim()),a):$ch("oafp::outdata").setAll(b.chkey.split(",").map(d=>d.trim()),a),$ch("oafp::outdata").destroy()):k(-1,"Invalid ch parameter")}],["db",(a,c)=>{(!isArray(a)||1>a.length)&&k(-1,"db is only supported for filled arrays/lists");
b.dbtable=_$(b.dbtable,"outdbtable").isString().default("data");b.dbnocreate=toBoolean(_$(b.dbnocreate,"outdbnocreate").isString().default("false"));b.dbicase=toBoolean(_$(b.dbicase,"outdbicase").isString().default("false"));b.dbbatchsize=_$(b.dbbatchsize,"dbbatchsize").isNumber().default(__);ow.loadObj();try{isString(b.dbjdbc)||k(-1,"dbjdbc URL is not defined.");isDef(b.dblib)&&loadLib("jdbc-"+b.dblib+".js");var d=new DB(b.dbjdbc,b.dbuser,b.dbpass,b.dbtimeout);if(!b.dbnocreate)try{var e=ow.obj.fromObj2DBTableCreate(b.dbtable,
a,__,!b.dbicase);d.u(e);d.commit()}catch(n){d.rollback(),k(-1,"Error creating table: "+n)}var f=Object.keys(ow.obj.flatMap(a[0]));var g=b.dbicase?f.join(",").toUpperCase():'"'+f.join('", "')+'"';let m="";var h=a.map(n=>{var q=ow.obj.flatMap(n);n=[];for(var x in f)n.push(q[f[x]]);x=f.map(v=>String(q[v]));n="INSERT INTO "+(b.dbicase?b.dbtable:'"'+b.dbtable+'"')+" ("+g+") VALUES ("+x.map(v=>"?").join(", ")+")";n.length>m.length&&(m=String(n));return x});d.usArray(m,h,b.dbbatchsize)}catch(m){isDef(d)&&
d.rollback(),printErr(m),k(-1,"Error connecting to the database: "+m)}finally{isDef(d)&&(d.commit(),d.close())}}],["sql",(a,c)=>{(!isArray(a)||1>a.length)&&k(-1,"sql is only supported for filled arrays/lists");b.sqltable=_$(b.sqltable,"sqltable").isString().default("data");b.sqlicase=toBoolean(_$(b.sqlicase,"sqlicase").isString().default("false"));b.sqlnocreate=toBoolean(_$(b.sqlnocreate,"sqlnocreate").isString().default("false"));ow.loadObj();b.sqlnocreate||p(ow.obj.fromObj2DBTableCreate(b.sqltable,
a,__,!b.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(a[0]));var e=b.sqlicase?d.join(",").toUpperCase():'"'+d.join('", "')+'"';p(a.map(f=>{var g=ow.obj.flatMap(f);f=[];for(var h in d)f.push(g[d[h]]);h=d.map(m=>{m=g[m];isString(m)&&(m="'"+m.replace(/'/g,"''")+"'");isNull(m)&&(m="null");return m});return"INSERT INTO "+(b.sqlicase?b.sqltable:'"'+b.sqltable+'"')+" ("+e+") VALUES ("+h.join(",")+");"}).join("\n"))}],["xml",(a,c)=>{r(a,c)}],["pxml",(a,c)=>{a=af.fromObj2XML(a,!0);p('<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n'+
new XMLList(a))}],["xls",(a,c)=>{if(!isString(a)){try{includeOPack("plugin-XLS")}catch(g){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");if(isMap(a)){ow.loadObj();var d=ow.obj.flatMap(a);var e=Object.keys(d).map(g=>({key:g,value:d[g]}))}isArray(a)&&(e=a);traverse(e,(g,h,m,n)=>{isString(h)&&h.startsWith("=")&&(n[g]="'"+h)});a=!1;c=b.xlsfile;isUnDef(b.xlsfile)&&(a=!0,b.xlsfile=io.createTempFile("oafp",".xlsx"));c=new XLS(isDef(c)&&
io.fileExists(c)?c:__);var f=c.getSheet(_$(b.xlssheet,"xlssheet").isString().default("data"));b.xlsformat=_$(b.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');b.xlsformat=u(b.xlsformat);ow.format.xls.setTable(c,f,"A",1,e,__,b.xlsformat);c.writeFile(b.xlsfile);c.close();b.xlsopenwait=_$(b.xlsopenwait,"xlsopenwait").isNumber().default(5E3);b.xlsopen=toBoolean(_$(b.xlsopen,"xlsopen").isString().default("true"));b.xlsopen&&(ow.format.isWindows()?
($sh("start "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)))}}]]),F=new Map([["?",(a,c)=>{a=Array.from(F.keys()).filter(d=>"?"!=d).sort();l(a,c)}],["pm",(a,c)=>{t();isDef(__pm._map)&&(a=__pm._map);isDef(__pm._list)&&(a=__pm._list);l(a,c)}],["key",(a,c)=>{t();isString(a)||k(-1,"key is only supported with a string.");l($get(a),c)}],["jsonschema",(a,c)=>{t();a=jsonParse(a,__,__,!0);isMap(a)||k(-1,"jsonschema is only supported with a map.");
ow.loadObj();a=ow.obj.schemaSampleGenerator(a);l(a,c)}],["yaml",(a,c)=>{t();a=af.fromYAML(a);l(a,c)}],["xml",(a,c)=>{t();b.xmlignored=_$(b.xmlignored,"xmlignored").isString().default(__);b.xmlprefix=_$(b.xmlprefix,"xmlprefix").isString().default(__);b.xmlfiltertag=toBoolean(_$(b.xmlfiltertag,"xmlfiltertag").isString().default(__));0<=a.indexOf("<?xml")&&(a=a.substring(a.indexOf("?>")+2).trim());0<=a.indexOf("<!DOCTYPE")&&(a=a.substring(a.indexOf(">")+1).trim());a=af.fromXML2Obj(a,b.xmlignored,b.xmlprefix,
!b.xmlfiltertag);l(a,c)}],["lines",(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));t();let d=__,e=[],f=h=>{h=h.split("\n").map(n=>{let q="",x=0;for(let v=0;v<n.length;v++)if("\t"===n[v]){let z=8-x%8;q+=" ".repeat(z);x+=z}else q+=n[v],x++;return q}).join("\n");if(isUnDef(d))return d=[],lastPos=0,isUnDef(b.linesvisualsepre)&&(b.linesvisualsepre=" \\s+"),h.split(new RegExp(b.linesvisualsepre)).forEach(n=>{0!=n.trim().length&&(d.push(n),n=h.substring(lastPos).match(new RegExp(ow.format.escapeRE(n)+
"("+b.linesvisualsepre+"|$)")),!isNull(n)&&isDef(n.index)?(e.push(lastPos+n.index),lastPos=n.index):k(-1,"Problem with linesvisual to find header positioning."))}),__;var m={};e.forEach((n,q)=>{m[d[q]]=h.substring(n,q+1<e.length?e[q+1]-1:__).trim()});return m};if(b.linesjoin)if(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=C(b.cmd,!0)),a=a.split(/\r?\n/),toBoolean(b.linesvisual)){var g=[];a.forEach(h=>{0!=h.length&&(h=f(h),isDef(h)&&g.push(h))});l(g,c)}else l(a,c);
else a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,h=>{toBoolean(b.linesvisual)?(h=f(h),isDef(h)&&l(h,clone(c),!0)):l(h,clone(c),!0)}),a.close()}],["ndjson",(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));t();global.__ndjsonbuf=__;var d=(f,g)=>{isUnDef(global.__ndjsonbuf)&&0!=f.length&&f.trim().startsWith("{")&&(global.__ndjsonbuf=
"");if(isDef(global.__ndjsonbuf)){if(0!=f.length&&!f.trim().endsWith("}")){global.__ndjsonbuf+=f.trim();return}0<global.__ndjsonbuf.length&&(f=global.__ndjsonbuf+f,global.__ndjsonbuf=__)}0==f.length||0<f.length&&"{"!=f.trim().substring(0,1)?(g(f),global.__ndjsonbuf=__):g(f)},e=f=>{var g=[];f.split("\n").filter(h=>0<h.length).forEach(h=>d(h,m=>g.push(jsonParse(m,__,__,toBoolean(b.ndjsonfilter)))));return g};b.ndjsonjoin?(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=
C(b.cmd,!0)),l(e(a),c)):(a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,f=>{d(f,g=>l(jsonParse(g,__,__,!0),clone(c),!0))}),a.close())}],["md",(a,c)=>{t();__conConsole=__ansiColorFlag=!0;isUnDef(b.format)&&isUnDef(c.__format)&&(b.format="md",c.__format="md");l(a,c)}],["mdtable",(a,c)=>{t();ow.loadTemplate();if(toBoolean(b.inmdtablejoin)){var d=new Set,e=new Set,f=()=>{0<e.size&&(d.add(ow.template.md.fromTable(Array.from(e).join("\n"))),
e.clear())};a.split("\n").forEach(g=>{/^\|.+\|$/.test(g.trim())?e.add(g.trim()):f()});f();l(Array.from(d),c)}else e=ow.template.md.fromTable(a),l(e,c)}],["ask",(a,c)=>{var d=[];a=af.fromJSSLON(a);isDef(askStruct)&&isArray(a)&&(__conConsole=!0,__con.getTerminal().settings.set("-icanon min 1 -echo"),d=askStruct(a),__con.getTerminal().settings.set("icanon echo"),print(""));l(d,c)}],["raw",(a,c)=>{t();l(a,c)}],["ini",(a,c)=>{t();ow.loadJava();var d=new ow.java.ini;a=isDef(b.file)?d.loadFile(b.file).get():
d.load(a).get();l(a,c)}],["jwt",(a,c)=>{ow.loadServer();if(toBoolean(b.injwtverify)){isUnDef(b.injwtsecret)&&isUnDef(b.injwtpubkey)&&k(-1,"injwtsecret or injwtpubkey is not defined.");try{if(isDef(b.injwtpubkey)){ow.loadJava();var d=new ow.java.cipher;ow.server.jwt.verify(d.readKey4File(b.injwtpubkey,!1,b.injwtalg),a.trim())}else ow.server.jwt.verify(b.injwtsecret,a.trim());var e=!0}catch(f){isDef(f.javaException)&&printErr(f.javaException.getMessage()),e=!1}}a=ow.server.jwt.decode(a);isDef(e)&&(a.__verified=
e);!toBoolean(b.injwtraw)&&isDef(a)&&isMap(a.claims)&&(isDef(a.claims.exp)&&(a.claims.exp=new Date(1E3*a.claims.exp)),isDef(a.claims.iat)&&(a.claims.iat=new Date(1E3*a.claims.iat)),isDef(a.claims.nbf)&&(a.claims.nbf=new Date(1E3*a.claims.nbf)));l(a,c)}],["sql",(a,c)=>{isString(a)?toBoolean(b.sqlparse)?(isUnDef(ow.format.sqlFormat)&&k(-1,"SQL parse not available."),l(ow.format.sqlFormat(a,isDef(b.sqloptions)?u(b.sqloptions):__),c)):l(af.fromSQL(a).ast,c):l(a,c)}],["openmetrics",(a,c)=>{isString(a)?
(ow.loadMetrics(),l(ow.metrics.fromOpenMetrics2Array(a),c)):l(a,c)}],["ch",(a,c)=>{t();isUnDef(b.inch)&&k(-1,"inch is not defined.");b.inch=u(b.inch);if(isMap(b.inch)){isUnDef(b.inch.type)&&k(-1,"inch.type is not defined.");isDef(b.inch.lib)&&loadLib(b.inch.lib);"remote"==b.inch.type?$ch("oafp::indata").createRemote(b.inch.url):$ch("oafp::indata").create(b.inch.type,b.inch.options);var d=u(a);toBoolean(b.inchall)||0==a.trim().length?l($ch("oafp::indata").getAll(isMap(d)?d:__),c):l($ch("oafp::indata").get(isMap(d)?
d:__),c);$ch("oafp::indata").destroy()}else k(-1,"inch is not a valid map.")}],["db",(a,c)=>{if(isString(a)){t();isString(b.indbjdbc)||k(-1,"indbjdbc URL is not defined.");try{isDef(b.indblib)&&loadLib("jdbc-"+b.indblib+".js");var d=new DB(b.indbjdbc,b.indbuser,b.indbpass,b.indbtimeout);d.convertDates(!0);if(toBoolean(b.indbexec)){var e=d.u(a);l({affectedRows:e},c);d.commit()}else e=d.q(a),isMap(e)&&isArray(e.results)?l(e.results,c):k(-1,"Invalid DB result: "+stringify(e))}catch(f){printErr(f.message),
isDef(d)&&d.rollback(),k(-1,"Error executing SQL: "+f.message)}finally{isDef(d)&&(d.rollback(),d.close())}}else k(-1,"db is only supported with a SQL string.")}],["xls",(a,c)=>{t();try{includeOPack("plugin-XLS")}catch(e){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}b.xlssheet=_$(b.xlssheet,"xlssheet").isString().default(0);b.xlsevalformulas=toBoolean(_$(b.xlsevalformulas,"xlsevalformulas").isString().default(!0));b.xlscol=_$(b.xlscol,"xlscol").isString().default("A");
b.xlsrow=_$(b.xlsrow,"xlsrow").isString().default(1);plugin("XLS");if(isDef(b.file)||isDef(b.cmd)){a=new XLS(isDef(b.cmd)?C(b.cmd):b.file);var d=a.getSheet(b.xlssheet);d=a.getTable(d,b.xlsevalformulas,b.xlscol,b.xlsrow);a.close();isDef(d)&&isMap(d)&&(d=d.table);l(d,c)}else k(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],["csv",(a,c)=>{t();isUnDef(b.inputcsv)&&isDef(b.incsv)&&(b.inputcsv=b.incsv);if(isDef(b.file)||isDef(b.cmd)){var d=isDef(b.cmd)?
af.fromBytes2InputStream(C(b.cmd)):io.readFileStream(b.file);a=$csv(b.inputcsv).fromInStream(d).toOutArray();d.close()}else a=$csv(b.inputcsv).fromInString(a).toOutArray();l(a,c)}],["hsperf",(a,c)=>{if(isDef(b.file)||isDef(b.cmd)){t();ow.loadJava();var d=isDef(b.cmd)?ow.java.parseHSPerf(C(b.cmd)):ow.java.parseHSPerf(b.file);d.__ts=new Date;var e=0,f=0;d.sun.gc.generation.forEach(g=>{g.space.forEach(h=>{f+=Number(h.used);e=isNumber(h.capacity)?e+Number(h.capacity):e;d.sun.gc["__percUsed_"+h.name]=
100*h.used/h.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;a=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);d.sun.gc.__ygc=isDef(a)?Number(a.invocations):0;d.sun.gc.__ygct=isDef(a)?Number(a.time/1E9):0;a=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name","").at(0);d.sun.gc.__fgc=isDef(a)?Number(a.invocations):0;
d.sun.gc.__fgct=isDef(a)?Number(a.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/1E9;d.java.__mem={total:e,used:f,free:e-f,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-d.sun.gc.metaspace.used};l(d,c)}else k(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["rawhex",(a,c)=>{b.inrawhexline=_$(b.inrawhexline,"inrawhexline").isNumber().default(__);t();a=isDef(b.file)||
isDef(b.cmd)?isDef(b.cmd)?C(b.cmd):io.readFileBytes(b.file):af.fromString2Bytes(a);a=ow.format.string.toHexArray(a,b.inrawhexline);a.forEach(d=>{d.characters=d.characters.replace(/[\x00-\x1F\x80-\xFF]/g,".")});l(a,c)}],["base64",(a,c)=>{t();a=toBoolean(b.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(a,!0))):af.fromBytes2String(af.fromBase64(a));l(a,c)}],["gb64json",(a,c)=>{t();a=af.fromBytes2String(io.gunzip(af.fromBase64(a,!0)));l(a,c)}],["oaf",(a,c)=>{isString(a)||k(-1,"oaf is only supported with a string.");
t();a=af.eval(a);l(a,c)}],["oafp",(a,c)=>{a=u(a);var d="_oafp_key_"+genUUID();isMap(a)?(a.out="key",a.__key=d,a.__inception=!0,oafp(a),a=$get(d),$unset(d),l(a,c)):isArray(a)?($set(d,!0),a=pForEach(a,(e,f)=>{f=d+"_"+String(f);e.out="key";e.__key=f;e.__inception=!0;try{oafp(e);var g=$get(f);$unset(f)}catch(h){sprintErr(h)}finally{return g}}),l(a,c)):k(-1,"oafp input data needs to be a map or an array.")}],["sh",(a,c)=>{t();a=u(a);if(isString(a))a=$sh(a).get(0);else{isMap(a)||k(-1,"For in=sh the input data needs to a string or a map");
var d=$sh();isUnDef(a.cmd)&&k(-1,"For in=sh the input data needs to a string or a map with the a 'cmd'");d=d.sh(a.cmd);isDef(a.envs)&&(d=d.envs(a.envs,a.envsall));isDef(a.prefix)&&(d=d.prefix(a.prefix));isDef(a.pwd)&&(d=d.pwd(a.pwd));switch(b.inshformat){case "raw":a=d.get(0);break;case "yaml":a=d.getYaml(0);break;default:a=d.getJson(0)}}l(a,c)}],["llm",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&
!isString(getEnv(b.llmenv))&&k(-1,"llmoptions not defined and "+b.llmenv+" not found.");t();var d=$llm(isDef(b.llmoptions)?u(b.llmoptions):$sec("system","envs").get(b.llmenv));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&d.getGPT().setConversation(io.readFileJSON(b.llmconversation));let e;isString(b.llmimage)&&(b.llmimage.toLowerCase().match(/^https?:\/\//)?e=af.fromBytes2String(af.toBase64Bytes(af.fromInputStream2Bytes($rest().get2Stream(b.llmimage)))):io.fileExists(b.llmimage)&&(e=
af.fromBytes2String(af.toBase64Bytes(io.readFileBytes(b.llmimage)))));a="md"==b.output||"mdtable"==b.output||"raw"==b.output?isDef(e)?d.promptImage(a,e):d.prompt(a):isDef(e)?d.promptImage(a,e,__,__,__,__,!0):d.promptJSON(a);isDef(b.llmconversation)&&(d=d.getGPT().getConversation(),d.push({role:"assistant",content:stringify(a,__,"")}),io.writeFileJSON(b.llmconversation,d,""));l(jsonParse(a,__,__,isString(a)),c)}],["llmmodels",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");
b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&k(-1,"llmoptions not defined and "+b.llmenv+" not found.");t();a=$llm(isDef(b.llmoptions)?u(b.llmoptions):$sec("system","envs").get(b.llmenv));isUnDef(a.getModels)&&k(-1,"OpenAF support for llm model listing API not found.");l(a.getModels(),c)}],["ls",(a,c)=>{t();if(isString(a)){var d=toBoolean(b.lsposix);isDef(b.file)&&(a=b.file);var e=io.fileExists(a),f;e&&(f=io.fileInfo(a));if(e&&
f.isFile)switch(isDef(b.lsext)?b.lsext:f.filename.replace(/^.*\./,"").toLowerCase()){case "tgz":case "gz":a=io.listFilesTAR(a,!0);break;case "tar":a=io.listFilesTAR(a);break;default:plugin("ZIP"),a=$m4a((new ZIP).list(a))}else a=toBoolean(b.lsrecursive)?listFilesRecursive(a,d):io.listFiles(a,d).files;l(a,c)}else k(-1,"ls is only supported with a string.")}],["toml",(a,c)=>{t();isUnDef(af.fromTOML)&&k(-1,"TOML support not found.");l(af.fromTOML(a),c)}],["slon",(a,c)=>{t();l(af.fromSLON(a),c)}],["json",
(a,c)=>{t();l(jsonParse(a,__,__,isString(a)),c)}]]),D={};isString(b.libs)&&(b.libs=b.libs.split(",").map(a=>a.trim()).filter(a=>0<a.length));isDef(__flags.OAFP)&&isArray(__flags.OAFP.libs)&&isArray(b.libs)?b.libs=__flags.OAFP.libs.concat(b.libs):b.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(b.libs)&&b.libs.forEach(a=>{try{var c=require("oafp_"+a+".js");if(isDef(c.oafplib)){var d=c.oafplib(clone(b),l,r,{_runCmd2Bytes:C,_fromJSSLON:u,_msg:"(processing data...)",_showTmpMsg:t,_clearTmpMsg:Q,
_chartPathParse:K,_exit:k,_print:p,_o$o:r});isMap(d)&&(isArray(d.fileExtensions)&&d.fileExtensions.forEach(e=>{var f=e.ext;e=e.type;L.has(f)?printErr("WARN: Extension '"+f+"' already exists."):L.set(f,e)}),isArray(d.fileExtensionsNoMem)&&d.fileExtensionsNoMem.forEach(e=>{e=e.ext;O.has(e)?printErr("WARN: Extension '"+e+"' already exists."):O.add(e)}),isArray(d.input)&&d.input.forEach(e=>{var f=e.type;e=e.fn;F.has(f)?printErr("WARN: Input type '"+f+"' already exists."):F.set(f,e)}),isArray(d.inputLine)&&
d.inputLine.forEach(e=>{var f=e.type;e=e.fn;isUnDef(_inputLinesFns[f])?P[f]=e:printErr("WARN: Input type '"+f+"' already exists.")}),isArray(d.transform)&&d.transform.forEach(e=>{var f=e.type;e=e.fn;isUnDef(E[f])?E[f]=e:printErr("WARN: Transform '"+f+"' already exists.")}),isArray(d.output)&&d.output.forEach(e=>{var f=e.type;e=e.fn;G.has(f)?printErr("WARN: Output type '"+f+"' already exists."):G.set(f,e)}),isString(d.help)&&(D[a.toLowerCase()]=d.help))}else printErr("WARN: Library '"+a+"' does not have oafplib.")}catch(e){printErr("WARN: Library '"+
a+"' error: "+e)}});(""==b["-h"]||isString(b.help)&&0<b.help.length)&&y();b.format=_$(b.format,"format").isString().default(__);__initializeCon();y=!String(java.lang.System.getProperty("os.name")).match(/Windows/);H=getEnv("OAFP_RESET");isDef(H)&&(y=toBoolean(H)?!1:!0);y&&isDef(__con)&&__con.getTerminal().settings.set("sane");if(isDef(b.secKey)){toBoolean(b.secEnv)&&(b.secRepo="system",b.secBucket="envs");b.secRepo=_$(b.secRepo,"secRepo").isString().default(getEnv("OAFP_SECREPO"));b.secBucket=_$(b.secBucket,
"secBucket").isString().default(getEnv("OAFP_SECBUCKET"));b.secPass=_$(b.secPass,"secPass").isString().default(getEnv("OAFP_SECPASS"));b.secMainPass=_$(b.secMainPass,"secMainPass").isString().default(getEnv("OAFP_SECMAINPASS"));b.secFile=_$(b.secFile,"secFile").isString().default(getEnv("OAFP_SECFILE"));let a=$sec(b.secRepo,b.secBucket,b.secPass,b.secMainPass,b.secFile).get(secKey);isDef(a)&&Object.keys(a).forEach(c=>b[c]=a[c])}var B={__format:b.format,__from:b.from,__ifrom:b.ifrom,__isql:b.isql,
__sql:b.sql,__path:b.path,__opath:b.opath,__csv:b.csv,__pause:b.pause,__key:b.__key};isDef(b.inputcsv)&&(b.inputcsv=u(b.inputcsv));isDef(b.incsv)&&(b.incsv=u(b.incsv));isDef(b.csv)&&(b.csv=u(b.csv));var S=!1;if(""==b["-v"]||isString(b.version)&&0<b.version.length)S=!0,R();if(""==b["-examples"]||isString(b.examples)&&0<b.examples.length)b.url="https://ojob.io/oafp-examples.yaml",b.in="yaml",isString(b.examples)&&0<b.examples.length?("?"!=b.examples.trim()&&(B.__format="template"),B.__path="data",b.templatepath=
"tmpl",0<b.examples.indexOf("::")?(y=b.examples.split("::").filter(a=>0<a.length),B.__sql=1==y.length?"select * where c like '"+y[0]+"'":"select * where c like '"+y[0]+"' and s like '"+y[1]+"'"):"?"==b.examples.trim()?(B.__path="data.sort(map(&concat(c,concat('::',s)),[]))",b.removedups=!0):B.__sql="select * where d like '%"+b.examples+"%' or s like '%"+b.examples+"%' or c like '%"+b.examples+"%'"):(B.__path="data[].{category:c,subCategory:s,description:d}",B.__from="sort(category,subCategory,description)",
B.__format="ctable"),delete b["-examples"];var w="",M=!1;isDef(b.outfile)&&("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"===typeof global.__oafp_streams[b.outfile]&&(global.__oafp_streams[b.outfile]={s:io.writeFileStream(b.outfile,toBoolean(b.outfileappend))}));isString(b.chs)&&(y=af.fromJSSLON(b.chs),isArray(y)||(y=[y]),y.forEach(a=>{isMap(a)?isString(a.name)&&isString(a.type)?$ch(a.name).create(a.type,a.options):k(-1,"ERROR: chs must have a name and a type."):
k(-1,"ERROR: chs must be an object or array of objects with name and a type")}));y=()=>{if(S)w=R();else if(b.jsonprefix=_$(b.jsonprefix,"jsonprefix").isString().default(__),b.jsondesc=toBoolean(_$(b.jsondesc,"jsondesc").default("false")),isDef(b.insecure)&&toBoolean(b.insecure)&&ow.loadJava().setIgnoreSSLDomains(),isDef(b.file)){if(0>b.file.indexOf("::")&&!io.fileExists(b.file)&&k(-1,"ERROR: File not found: '"+b.file+"'"),!O.has(b.type))if("json"==b.type||isUnDef(b.type))if(b.jsondesc){var a=new Set;
io.readStreamJSON(b.file,d=>{d=d.substring(2);isDef(b.jsonprefix)?d.startsWith(b.jsonprefix)&&a.add(d):a.add(d);return!1});w=stringify(Array.from(a),__,"")}else if(isDef(b.jsonprefix)){var c=io.readStreamJSON(b.file,d=>d.substring(2).startsWith(b.jsonprefix));w=stringify(c,__,"")}else w=io.readFileString(b.file),toBoolean(b._shebang)&&(w=w.replace(/^#!.*\n/,""));else w=io.readFileString(b.file),toBoolean(b._shebang)&&(w=w.replace(/^#!.*\n/,""))}else if(b.jsondesc&&k(-1,"ERROR: jsondesc only available for file input."),
b.jsonprefix&&k(-1,"ERROR: jsonprefix only available for file input."),isDef(b.cmd))w=C(b.cmd,!0);else if(isString(b.data))w=b.data;else if(isDef(b.url)){b.urlmethod=_$(b.urlmethod,"urlmethod").isString().default("GET");c=u(_$(b.urlparams).isString().default("{}"));let d;isDef(b.urldata)&&(d=u(b.urldata));switch(b.urlmethod.toLowerCase()){case "post":w=$rest(c).post(b.url,d);break;case "put":w=$rest(c).put(b.url,d);break;case "delete":w=$rest(c).delete(b.url,d);break;default:w=$rest(c).get(b.url)}isObject(w)&&
(w=stringify(w,__,""))}else"pm"!=b.input&&(w=[],io.pipeLn(d=>{isDef(P[b.type])?P[b.type](N(d),clone(B))&&w.push(d):w.push(d);return!1}),w=w.join("\n"));M||(isUnDef(b.type)&&(isDef(b.file)&&(c=b.file.substring(b.file.lastIndexOf(".")),L.has(c)&&(b.type=L.get(c))),isUnDef(b.type)&&(c=w.trim(),c.startsWith("{")||c.startsWith("[")?b.type="json":c.startsWith("(")?b.type="slon":c.startsWith("<")?b.type="xml":isString(c)&&0<c.length?1<c.substring(0,c.indexOf("\n")).split(",").length?b.type="csv":c.substring(0,
0<c.indexOf(": "))&&(b.type="yaml"):k(-1,"Please provide the input type."))),isDef(b.type)&&F.has(b.type)?F.get(b.type)(w,B):(isString(b.type)&&printErr("WARN: "+b.type+" input type not supported. Using json."),F.get("json")(w,B)),delete b.__origr)};isDef(b["-debug"])&&printErr("DEBUG: "+colorify(b));if(isNumber(b.loop))for(;;)toBoolean(b.loopcls)&&isDef(b.outfile)&&(global.__oafp_streams[b.outfile].close(),global.__oafp_streams[b.outfile]=io.writeFileStream(b.outfile,toBoolean(b.outfileappend))),
y(),sleep(1E3*b.loop,!0);else y();isDef(global.__oafp_streams)&&Object.keys(global.__oafp_streams).forEach(a=>global.__oafp_streams[a].s.close())}};oafp(_params);
