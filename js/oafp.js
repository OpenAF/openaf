var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20240824, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("H4sIAAAAAAAA/+1aS28byRG+81cUqASUBA7f5JAM5IVWWnu1th6wZO8uJGPdM9PktDUzPds9I4leLxDsJcl997ZADkEOewgQIEBOufmf+BfkJ6S6Z4YzfNmivVYOCW0N2dNV1V9Vd1dVPzbgOKTB7n0IBbeplFwAvSF+6FFZKm1swL///Nc/wadEMlsVN+D4ydnJkzP44vT4aAh7gpKIBWMInBeSBzBiHoWR4D5Miyhle3uP+z4JnOH2dun58+cWkW5pI2GmEgg4JCK1oohrlwoKlNguCGpz4QCTMOLCJ1FEnfkWgAVQl9yndSUISiMWOMUXRkB8CuXtmmIpg0FvqA2cjEL47nvgcRTG0Y6WdvE7uFcEo8AmWt8/eHT22WM42T37fAiHJGBh7CF4iOhNpJoniIR6zkpdH9AIaXQj1yxyIXIpeBPBbAl8hDVYMS7ZsfDAkOBGUSiH9ToJWS0hqvErt37VrO9xzwk9Mqk/ZVfkt63GI/V4yhwCrxKFQhK5O2UZWzIS2C+bCXsVDUJvvuGjrAyVi6CyVfVoMI7c9OXWVjnRd3v7MZWxF8lUhdIBxBKtHnEQMXaOwn7NBWp7XqvVnpWOOX5cmPlaYbl9bl9SAeG0MxHjCptpdWzf2Sk7UybDSNgg6UgWqJ5Lx03y9YKzYCcSMU0tcf6s9h1zhgf7VTUGhkf4kFUZYdcNT9WzynwypsMD9awGNEK9LuXwKP1RDblAM5yoZ1XRx3KYfH1fBvmth5amHrUj2AYco4jRmkAmJGlFN1vOBpkdEcujs1bOjAzqwxz99ebHH2D60YN3+lFVWvIsEbIqFYovCgQZpoWKxY/WeGWt5kwsAFB68+Pvb/H/X7cj+xBRv2ITH0n4R0V4d8qWyKhNHKtr9dudAQ4GQccMPc1kyTgRcRDg7C4QDVsrhpQlmIPT77LtGJdtaTh0RHBiYEWjpv8Nu41Gw7innvXIDleOzoLIJyG0wOWxkCXbIj3a7jdMq9PBmrlWDEnFFRVGYxYyCWwMQXUkHF41ay2z1lFMzan8OSm3mFjrQLZMs0ucDmLurYbsWTOQx64taozXFXH6hRH9ZjLs1nq1xtsg97VVq5BZu9noo7XVc/Z9p9sbtI17vU6nrSpmIZ9vtEHwa/ks9/y7pw+HcBBEVBA7YlfUmwCRl/BtTGXEeLAqMdCOH724oi2da7+4qZ03SKbSkqrKVPwwGkL5SxdjAWYGE4Sg/eQnUK5CNAmROGtmC17NyKC2oFFRhmDoTElaoQKbM8ylJG/nZPBQCZ7BwTBTsbmHyRNiAY9dUrCw/QIe2+VcIviEWQ7hHMqWF2NweAXlsaA00L8EdcrwbK5BH/uLzaq+p8XpWBzEvkWFzFv2uaAFHXLuYtvHQdL02TVPvl3EgE1X02A1BJ00VMEnN0NozSGyXSIKaPYxcE2bj1wmP4HNr+tHWwXtFf20/a+PJsFWKR0rZ6iDULHQw9wIHxZ2B2ZUQpBJkixVVJsVfOlofTEfRPKQB47KPCskkNdUVGpZtvpHOKQOi/0l6cfD2MJo7cEYOzrkzlpZyOU8r7ELBk8zkSTZwIHkS5VxoIo+jUiSSaqUIyQ2+jc0aP6eXwdUPKYjTHQDzLuRTdUnacoMs04kMPFIvmqhS3AYoQEionITGfubaY3Ng4gwlJoEaC0zpdvjcRBtVQPu0KEMqV1Tv1QyVFXZT8R8SsY8k6M5zvDd1uosJyFdL7sJZMFJKmVXeMzZhKfgWmWaeOiYkug/mymhUrMc6jNNi26Tr7wzTv9XAvnbG31L7R3kXsuyBDVXDDmROB+wFx7T0GM2OaUqpOPkpU4gDdO0badr9s2u0fU7nQhmPooriWz6dyN//Zbw3euBz4JYLynH/G0gPG4Tz1CTVsXIKybRK6GQQdccOaO+ZRutjuuPPjIInORq2ZUx9zp9q+uMur2O4b60rq27sYTEtdUUgmPafbvjmH1D9F7Yg4/ZHfuE+jxADEqIvLI9y5iBYvatgdm2ifHyatTt3x2ISBA6YpcGbZpmz+z3DfNlazy6s4GZNd/rjLpdy+qZjjFuXYVzC7JfH8QXvDDeXOr5BgvQwXre1CC9F92XN3MgTmPbptShDv5u3gUIWzjGy+5gJFeAeC9LnG8M5jPXYtKwVmKgIpBcnRao8Dsb2yOOCu6dPMmiu00wVWDRpGaHcRVV53ahUpeJjrK6XjMfUn8Y8W+sCeqza1liU22OFYrzgn0c82KytZVIvyV3seWpAN38acSFziHWgHBRpqFLfVwXeIZM+C/KGaKlArGQZLnLAK0SZ6sMMUk41bbQ5sXzKuBfni2ltTpNIthhKt95dy6juz+fBwtJR9al+DPrwOztoR7nmeGzt6nGWU1ehFt+clVuy3HbvZsPTAzusurjkf0P/S+9xW128iFe+Nmu9bvw4NO5n6ZZ66mfKZGJVYWiWoZ5NPqcyNN4NGI2o0F0qL1KFfK6I77P5OUJZvoyFrRYk3OdHOxPKx5T4kzQmzeVNy8484MjdV7x6NHhEJ5IFTOJKqjd7DHFrI/o1X8y3UsYhfVxRhzqlaai83F+e3rtOUZvjqsfVaGPFViAMtLDi+lhxKp4QW/Uzioc794/+ebweP+zRzvlzWRpzEMaEFZNGhrCOIyMdq1rRLGweBUu6WQItVoNF9K4IuNqXT5oqM9WuURtl0PZYzIC9BzwJGDqcOSIJK4g2boggmFEys4cmJhfPeuldTWtU6CVPSoWHbNAabakjqIpdE22IF8QmrU8QfGx9suVcnZAkezZe54/c/ByL7di0nF7LrUvlSxlbW6pda0mGS644wnxvSQa5yJwJM+o/+anv8F545n+zleXQzgTk/EVdjOjUJr1j5n3ffPjz5AbYwjNQadnNFpGo/k2jsxEqo3moNsymk2j2VjJ8dPfIbWTRrVE9M9w3lyEv0/G8DnBoSbk5YvX//Sc22vRbRuNztswLWjRaxqNgdHs31aL1lItWotaPIEzlwTR7bEjErRnew3sJnK0jPbqPpvD3l6Kvb2I/WGMc/pL4jk4C/zba2CqAbTWGOqvqUFnqQadRQ2+IFcMndrJ618EfQmYyuzFr3/xPCJur01/bW0Ga2rTXapNd1GbT9GpCC6zb+OBSzx2e00G62vSW0+T3lJNektGFh8x2A0CEqwB31wPfqvRWBO+uRS+uaQjEPdDZvic3xo/olkbf3NN/IveCwnO+4v4d4Po9T8CxuEBrhNVbJtnzNWf1aG5QoecvqhBiJLpou/LsRXBD2BJbEwzkSyFSXe0F8PkXIhMlqbFGDm78JmCWDh9ztVVRp4qg4UU66+1tPjwrdjlBKVC1J8bM3l014UscOfbG6XFkFtgzoKqLmTxEgvpuWcpi3QLg+KHPKjpQhavVFKd8s5GmlneLJzoQj/nTdP00kofnzAUuQc5dzflXu5Tk5YHM7y9KW8vQ517sQWNM2+lDDR1RGqxkLVbcCGzvLmn0IVmzttPeRenb4G5mTNn80/XpBueyzaEzh7vHp3eP358uHQdEQkSSDXx1LmVTnBLpYRkOkPTtQPOnPPKO1YhlWebG7EiMYiBebIRcSMjwTeaZEtdyFnWPovucv0x51IQbHIguFO2eYDLxig7ntQuLNnAyVZNSIjGSt6V3+WNVl+Y+b+Lmrqogw9xUQcH7++iDhLm93JRB08/xEU9/QAX9fTg/V3U01Tj93FRTxNzvZ+LOvhqpYtass0RCnalBv68o5H6eqeeuet7C+wUn0y9RcVXV3uIN1Rb9SK2o0oVYqEqskuMmlDW9JFbZfUuxrGe8AhaXSwtHv43u2CzSG9i5JdC0SBiAi6R2sNU1K5yRfsBvVsB6uYHZkHUgZDri5oMO2jF9QFbHY2LyTo7FHN+b8ZXrTowLwBxqLT1VcvlTk0pkw6EnEk5shTp3Rxkl07RD4xdwtIhaTa6/Q52mCrsuSwgyUA845cTPh24bbPT7g3UeZ06ziFhOqdK+9RzWU7VaA0ag3YvGdHYDams09d/4XBCYo8nTTYH7W5rkJB9KshL5iWTjrIX+ugrpeo2ewrXHLBDesNsDntoTE3VwUb7TU2VVmkqjD+E5fPObLb6Zmce2B5hIley1ei1e53OQBc+G0/CxFuWjiW5JAXn0e51zUZzwRTuDFW/2+u3zXaiIxrcIzg6XLWL2ShOcMMwsustf4Bd54oENnVm7mN/9ei0cB0bW8MXN+llajWNsktAIF1Ko9WXsk+SW+A43fREy69kz96xtvOWHIhDJylk6U7txpPFxknSqlqcJGJ11bvuab+CGyLGEowDqHz3fQXqFgvq0gXDhoqegkrKTn6FGxsF/NNvcxT4UBnOzoh4mDNhSUPZ+c2m9jvI/QrU5eayrNe2L+oXm/jcutAI6hfN+rgMWxVlnv8AJo+0RicvAAA="))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64(""))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("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")))};

const oafp=b=>{if(!isUnDef(b)&&!isDef(b.____ojob)){Object.keys(b).forEach(a=>{if(0<b[a].length){var c=a.toLowerCase();a!=c&&isUnDef(b[c])&&(b[c]=b[a],delete b[a])}});var N=a=>{for(var c=Object.keys(E),d=0;d<c.length;d++){var f=c[d];isDef(b[f])&&(a=E[f](a))}return a},J=(a,c)=>{b.__origr=a;c.__ifrom&&(a=$from(a).query(af.fromNLinq(c.__ifrom.trim())),delete c.__ifrom);if(c.__isql){var d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";
break;default:d=__}if(isArray(a)&&0<a.length)if(isString(b.isqlfiltertables)){var f=$sql();d=u(b.isqlfiltertables);isArray(d)&&(d.forEach(e=>{isUnDef(e.table)&&k(-1,"One 'table' not defined in isqlfiltertables");e.path=_$(e.path,"isqlfiltertables table "+e.table+" path").isString().default("@");var h=$path(a,e.path);isArray(h)&&(f=f.table(e.table,h))}),a=f.closeQuery(c.__isql.trim()))}else a=$sql(a,c.__isql.trim(),d);delete c.__isql}c.__path&&(a=$path(a,c.__path.trim()),delete c.__path);if(isString(a))return N(a);
a=N(a);c.__from&&(a=$from(a).query(af.fromNLinq(c.__from.trim())),delete c.__from);if(c.__sql){d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(a)&&0<a.length&&(isString(b.sqlfiltertables)?(f=$sql(),d=u(b.sqlfiltertables),isArray(d)&&(d.forEach(e=>{isUnDef(e.table)&&k(-1,"One 'table' not defined in sqlfiltertables");e.path=_$(e.path,"sqlfiltertables table "+e.table+" path").isString().default("@");var h=
$path(a,e.path);isArray(h)&&(f=f.table(e.table,h))}),a=f.closeQuery(c.__sql.trim()))):a=$sql(a,c.__sql.trim(),d));delete c.__sql}c.__opath&&(a=$path(a,c.__opath.trim()),delete c.__opath);return a},l=(a,c,d)=>{c=clone(c);toBoolean(b.color)?__conConsole=!0:isDef(b.color)&&(__conAnsi=!1);a=isString(a)?a.trim().startsWith("{")&&a.trim().endsWith("}")?J(jsonParse(a,__,__,!0),c):J(a,c):d?J([a],c)[0]:J(a,c);isDef(b.outputkey)&&(a=$$({}).set(b.outputkey,a));isDef(b.outkey)&&(a=$$({}).set(b.outkey,a));Q();
G.has(c.__format)?G.get(c.__format)(a,c):(isUnDef(c.__format)&&(c.__format="tree"),x(a,c,__))},C=(a,c)=>{var d=af.fromString2Bytes(""),f=af.newOutputStream();$sh(a).cb((e,h,g)=>{ioStreamCopy(f,e);e=f.toByteArray();0<e.length&&(d=e)}).get();return c?af.fromBytes2String(d):d},u=a=>{if(!isString(a)||""==a||isNull(a))return"";a=a.trim();return a.startsWith("{")?jsonParse(a,__,__,!0):af.fromSLON(a)},K=(a,c,d,f)=>{d=_$(d).isString().default("_oafp_fn_");c=splitBySepWithEnc(c," ",[['"','"'],["'","'"]]);
let e=[];$ch("__oaf::chart").create();if(1<c.length){for(let h=0;h<c.length;h++)if(0==h)e.push(c[h]);else{let g=splitBySepWithEnc(c[h],":",[['"','"'],["'","'"]]).map((m,n)=>{if(0==n){if(m.startsWith("-"))return m;global[d+h]=()=>{if(isString(f)){var q=$ch("__oaf::chart").get({name:f});q=isUnDef(q)?[]:q.data;var v=$path(a,m);if(isArray(v))return v.forEach((A,y)=>{isArray(q[y])?q[y].push(A):q[y]=[A]}),v=q.pop(),$ch("__oaf::chart").set({name:f},{name:f,data:q}),v[0]}else return $path(a,m)};return d+
h}return m}).join(":");e.push(g)}return e.join(" ")}return""},p=a=>{"undefined"!==typeof a&&("undefined"===typeof b.outfile?(toBoolean(b.loopcls)&&cls(),print(a)):("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"!==typeof global.__oafp_streams[b.outfile]&&ioStreamWrite(global.__oafp_streams[b.outfile].s,a+(toBoolean(b.outfileappend)?"\n":""))))},x=(a,c,d)=>{"undefined"!==typeof a&&(a=$o(a,c,d,!0),isDef(a)&&p(a))},r=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||
toBoolean(b.chartcls)||printErrnl(_$(a).default("(processing data...)"))},Q=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||toBoolean(b.chartcls)||printErrnl("\r"+" ".repeat(_$(a).default("(processing data...)").length)+"\r")},k=(a,c)=>{isUnDef(c)&&(c="exit: "+a);if(isUnDef(ow.oJob)&&!toBoolean(b.noexit))0!=a&&printErr(c),exit(a);else throw c;},w=()=>{__initializeCon();b.help=_$(b.help,"help").isString().default("");switch(b.help.toLowerCase()){case "filters":var a="docs/FILTERS.md";break;
case "template":a="docs/TEMPLATE.md";break;case "examples":a="docs/EXAMPLES.md";break;case "readme":case "usage":a="docs/USAGE.md";break;default:a=b.help.toLowerCase(),a=isDef(D[a])?"docs/"+a+".md":"docs/USAGE.md"}var c=(getOPackPath("oafproc")||".")+"/"+a;let d="";if("docs/USAGE.md"==a&&0<Object.keys(D).length){d="\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let f in D)d+="| "+f+" | help="+f+" |\n"}isDef(c)&&io.fileExists(c)?(__conConsole=__ansiColorFlag=!0,
isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c)+d)):p(isDef(b.out)&&"raw"==b.out?io.readFileString(c)+d:ow.format.withMD(io.readFileString(c)+d))):isDef(global._oafphelp)&&isDef(global._oafphelp[a])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[a]+d)):p(isDef(b.out)&&"raw"==b.out?global._oafphelp[a]+d:ow.format.withMD(global._oafphelp[a]+
d))):isString(D[b.help])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(D[b.help])):p(isDef(b.out)&&"raw"==b.out?D[b.help]:ow.format.withMD(D[b.help]))):p("Check https://github.com/OpenAF/oafp/blob/master/src/"+a);k(0)},R=()=>{var a=(getOPackPath("oafproc")||".")+"/.package.yaml";a={oafp:{version:io.fileExists(a)?io.readFileYAML(a).version:"(not available/embedded)",inputs:Array.from(F.keys()).filter(c=>"?"!=c).sort(),
transforms:Object.keys(E).filter(c=>"transforms"!=c).sort(),outputs:Array.from(G.keys()).filter(c=>"?"!=c).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},
os:{name:String(java.lang.System.getProperty("os.name")),version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};
return stringify(a,__,"")};ow.loadFormat();b.format=b.output||b.format||b.out;b.type=b.input||b.type||b.in;b.out=b.format;b.output=b.format;b.in=b.type;b.input=b.type;if(isUnDef(b.file)&&isUnDef(b.cmd)){var H=__;for(let a in b)if(""===b[a]&&"-debug"!=a&&"-v"!=a&&"-examples"!=a){H=a;break}b.file=H}"[object Object]"==Object.prototype.toString.call(b.data)&&(b.data=stringify(b.data,__,""));var L=new Map([[".json","json"],[".ndjson","ndjson"],[".slon","slon"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],
[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"],[".toml","toml"],[".jwt","jwt"]]),O=new Set(["csv","ndjson"]),P={lines:(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));if(!b.linesjoin&&isString(a))0!=a.trim().length&&(0<a.trim().length&&(a=a.trim().split(/\r?\n/)),l(a,c,!0)),M=!0;else return!0},ndjson:(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(b.ndjsonjoin)return!0;
isUnDef(global.__ndjsonbuf)&&0!=a.length&&a.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=a.length&&!a.trim().endsWith("}")){global.__ndjsonbuf+=a.trim();return}0<global.__ndjsonbuf.length&&(a=global.__ndjsonbuf+a,global.__ndjsonbuf=__)}0==a.length||0<a.length&&"{"!=a.trim().substring(0,1)?(l(jsonParse(global.__ndjsonbuf,__,__,!0),c,!0),M=!0,global.__ndjsonbuf=__):(l(jsonParse(a,__,__,!0),c,!0),M=!0)}},E={transforms:a=>{if(toBoolean(b.transforms))return Object.keys(E).filter(c=>
"transforms"!=c).sort()},cmlt:a=>{if(toBoolean(b.cmlt)){a=isArray(a)?a:[a];b.cmltch=_$(b.cmltch,"cmltch").default("(type: simple)");var c=u(b.cmltch);if(isMap(c))return isUnDef(c.type)&&k(-1,"cmltch.type is not defined."),isDef(c.lib)&&loadLib(c.lib),0>$ch().list().indexOf("oafp::cmltdata")&&("remote"==c.type?$ch("oafp::cmltdata").createRemote(c.url):$ch("oafp::cmltdata").create(c.type,c.options),c=Number(_$(b.cmltsize,"cmltsize").isNumber().default(100))-1,0<c&&$ch("oafp::cmltdata").subscribe(ow.ch.utils.getHousekeepSubscriber("oafp::cmltdata",
c))),a.forEach(d=>$ch("oafp::cmltdata").set({t:nowNano()},d)),$ch("oafp::cmltdata").getAll();k(-1,"Invalid cmltch parameter")}},diff:a=>{var c=u(b.diff);if(isMap(c)){isDef(c.filea)&&isDef(c.fileb)||isDef(c.a)&&isDef(c.b)||k(-1,"diff.a path and diff.b path are required.");loadDiff();let d=$path(a,c.a);a=$path(a,c.b);let f=__;toBoolean(b.color)&&(isUnDef(b.difftheme)&&isDef(getEnv("OAFP_DIFFTHEME"))&&(b.difftheme=getEnv("OAFP_DIFFTHEME")),f=u(_$(b.difftheme,"difftheme").isString().default("")),f=merge({added:"GREEN",
removed:"RED",common:"FAINT",linenum:"ITALIC",linediv:"FAINT",linesep:"|"},f));let e=(h,g)=>{if(toBoolean(b.color)){isUnDef(g)&&(g="");var m=new Set;if(isArray(h)){let n=1,q=toBoolean(b.diffnlines),v=0;q&&(h.forEach(y=>{v+=y.value.split("\n").length}),v=String(v).length+1);let A=y=>{let z;z=q&&""!=g?ansiColor(f.linenum,0<y?$ft("% "+v+"d",n):" ".repeat(v))+ansiColor(f.linediv,`${f.linesep}`):"";n+=y;return z};h.forEach((y,z)=>{z=y.value;isString(z)&&(""!=g?(z=z.split(g),""==z[z.length-1]&&z.pop()):
z=[z]);m.add(y.added?z.map(I=>A(1)+ansiColor(f.added,(""!=g?"+":"")+I)).join(ansiColor("RESET",g)):y.removed?z.map(I=>A(0)+ansiColor(f.removed,(""!=g?"-":"")+I)).join(ansiColor("RESET",g)):z.map(I=>A(1)+ansiColor(f.common,(""!=g?" ":"")+I)).join(ansiColor("RESET",g)))})}return Array.from(m).join(ansiColor("RESET",g))}return $from(h).select({count:__,added:!1,removed:!1,value:[]})};return isString(d)&&isString(a)?toBoolean(b.diffwords)?e(JsDiff.diffWords(d,a,c.options)):toBoolean(b.diffwordswithspace)?
e(JsDiff.diffWordsWithSpace(d,a,c.options)):toBoolean(b.difflines)?e(JsDiff.diffLines(d,a,c.options),"\n"):toBoolean(b.diffsentences)?e(JsDiff.diffSentences(d,a,c.options),"\n"):e(JsDiff.diffChars(d,a,c.options)):isArray(d)&&isArray(a)&&!toBoolean(b.color)?e(JsDiff.diffArrays(d,a,c.options)):e(JsDiff.diffJson(d,a,c.options),"\n")}},jsonschemagen:a=>{if(toBoolean(b.jsonschemagen))return ow.loadObj(),ow.obj.schemaGenerator(a)},jsonschemacmd:a=>E.jsonschema(a),jsonschema:a=>{isMap(a)||k(-1,"jsonschema is only supported with a map.");
isUnDef(b.jsonschema)&&isUnDef(b.jsonschemacmd)&&k(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var c;if(isDef(b.jsonschemacmd)){var d=$sh(b.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:k(-1,"Error executing the command '"+b.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(b.jsonschema);isMap(c)||k(-1,"The schema provided is not a valid JSON schema.");ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(a),errors:c.errors}},
sortmapkeys:a=>{if(toBoolean(b.sortmapkeys)&&isObject(a)){let c=(d,f)=>{let e=Object.keys(d).sort(),h={};for(let g=0;g<e.length;g++){let m=e[g],n=d[m];Array.isArray(n)?h[m]=n.map(q=>"object"===typeof q&&null!==q&&void 0!==q?sortMapKeys(q,f):q):h[m]=f&&"object"===typeof n&&null!==n&&void 0!==n?c(n,f):n}return h};return c(a,!0)}return a},searchkeys:a=>isObject(a)?searchKeys(a,b.searchkeys):a,searchvalues:a=>isObject(a)?searchValues(a,b.searchvalues):a,maptoarray:a=>toBoolean(b.maptoarray)&&isMap(a)?
$m4a(a,b.maptoarraykey):a,arraytomap:a=>toBoolean(b.arraytomap)&&isArray(a)?$a4m(a,b.arraytomapkey,toBoolean(b.arraytomapkeepkey)):a,flatmap:a=>toBoolean(b.flatmap)&&isObject(a)?ow.loadObj().flatMap(a,b.flatmapsep):a,merge:a=>{if(toBoolean(b.merge)&&isArray(a)&&1<a.length){for(var c,d=0;d<a.length;d++)c=0==d?a[d]:merge(c,a[d]);return c}return a},correcttypes:a=>{toBoolean(b.correcttypes)&&isObject(a)&&traverse(a,(c,d,f,e)=>{switch(descType(d)){case "number":isString(d)&&(e[c]=Number(d));break;case "string":"true"==
d.trim().toLowerCase()||"false"==d.trim().toLowerCase()?e[c]=toBoolean(d):d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?e[c]=new Date(d):d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&(e[c]=new Date(d))}});return a},removenulls:a=>{toBoolean(b.removenulls)&&traverse(a,(c,d,f,e)=>{(isNull(d)||isUnDef(d))&&delete e[c]});return a},trim:a=>{toBoolean(b.trim)&&traverse(a,(c,d,f,e)=>{isString(d)&&
(e[c]=d.trim())});return a},removedups:a=>{if(toBoolean(b.removedups)){if(isArray(a)){var c=new Set,d=[];a.forEach(f=>{var e=f;isObject(f)&&(e=sortMapKeys(e));e=stringify(e,__,!0);c.has(e)||(c.add(e),d.push(f))});return d}k(-1,"removedups is only supported for arrays")}return a},llmprompt:a=>{if(isString(b.llmprompt)){b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);var c=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system",
"envs").get(b.llmenv));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&c.getGPT().setConversation(io.readFileJSON(b.llmconversation));var d="json",f=!0;isString(b.input)&&("md"==b.input&&(d="markdown",f=!1),"mdtable"==b.input&&(d="markdown table",f=!1),"hsperf"==b.input&&(d="java hsperf file"),"raw"==b.input&&(d="raw",f=!1));c=c.withContext(f?stringify(a,__,!0):a,isDef(b.llmcontext)?b.llmcontext:`${d} input data`);if(isString(b.output)&&("md"==b.output||"mdtable"==b.output||"raw"==b.output))return a=
c.prompt(b.llmprompt),isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),""),a;a=c.promptJSON(b.llmprompt);isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),"");return a}return a},splitlines:a=>toBoolean(b.splitlines)&&isString(a)?a.split(/\r?\n/):a,regression:a=>{if(isString(b.regression)){ow.loadAI();var c=ow.ai.regression(),d=_$(b.regressionpath,"regressionpath").isString().default("@");let f=u(_$(b.regressionoptions,
"regressionoptions").isString().default("{order:2,precision:5}"));d=$path(a,d);if(isArray(d)){if(isString(b.regressionx)){let h=$path(a,b.regressionx);d=d.map((g,m)=>[h[m],g])}else d=d.map((h,g)=>[g+1,h]);let e;switch(b.regression){case "exp":e=c.exponential(d,f);break;case "poly":e=c.polynomial(d,f);break;case "power":e=c.power(d,f);break;case "log":e=c.logarithmic(d,f);break;default:e=c.linear(d,f)}return isDef(e)&&isDef(e.points)?(isString(b.regressionforecast)&&(a=$path(a,b.regressionforecast),
isArray(a)?a.forEach(h=>{e.points.push(e.predict(h))}):k(-1,"Invalid array of x for regression forecast")),e.points.map(h=>({x:h[0],y:h[1]}))):e}k(-1,"Invalid data for regression analysis")}return a},normalize:a=>{if(isString(b.normalize)){var c=u(b.normalize);if(isMap(c)){ow.loadAI();if(isMap(a))return ow.ai.normalize.withSchema(a,c,!0);if(isArray(a))return a.map(d=>ow.ai.normalize.withSchema(d,c,!0))}else k(-1,"Invalid normalize schema")}else k(-1,"Invalid normalize schema")},denormalize:a=>{if(isString(b.denormalize)){var c=
u(b.denormalize);if(isMap(c)){ow.loadAI();isUnDef(ow.ai.normalize.denormalizeWithSchema)&&k(-1,"This version of OpenAF does not support denormalizeWithSchema");if(isMap(a))return ow.ai.normalize.denormalizeWithSchema(a,c,!1);if(isArray(a))return a.map(d=>ow.ai.normalize.denormalizeWithSchema(d,c,!1))}else k(-1,"Invalid denormalize schema")}else k(-1,"Invalid denormalize schema")},kmeans:a=>{isNumber(b.kmeans)||(b.kmeans=5);isArray(a)||k(-1,"For kmeans transform you need to provide an array as input");
ow.loadAI();return ow.ai.cluster({type:"kmeans",numberOfClusters:Number(b.kmeans)}).classify(a)},getlist:a=>{if(isObject(a)&&(toBoolean(b.getlist)||isNumber(b.getlist))){var c=!1,d,f=isNumber(b.getlist)?b.getlist:1;traverse(a,(e,h,g,m)=>{!c&&isArray(h)&&(f--,0==f&&(c=!0),d=h)});return c?d:a}}},G=new Map([["?",(a,c)=>{a=Array.from(G.keys()).filter(d=>"?"!=d).sort();x(a,c)}],["pm",(a,c)=>{x(a,c)}],["key",(a,c)=>{x(a,c)}],["html",(a,c)=>{let d;c=!1;b.htmlopen=toBoolean(_$(b.htmlopen,"htmlopen").isString().default("true"));
b.htmlwait=_$(b.htmlwait,"htmlwait").isNumber().default(2500);b.htmlopen&&(d=io.createTempFile("oafp_",".html"));ow.loadTemplate();isString(a)?(a=ow.template.html.genStaticVersion(ow.template.parseMD2HTML(a,!toBoolean(b.htmlpart),!toBoolean(b.htmlcompact))),a=a.replace("<html>",'<html><meta charset="utf-8">')):(a=ow.template.html.parseMap(a,!0),a='<html><meta charset="utf-8"><style>'+a.css+"</style><body>"+a.out+"</body></html>");b.htmlopen&&(io.writeFileString(d,a),c=openInBrowser("file:///"+d.replace(/\\/g,
"/")));c?sleep(b.htmlwait,!0):p(a)}],["ctable",(a,c)=>{x(a,c)}],["stable",(a,c)=>{x(a,c)}],["table",(a,c)=>{x(a,c)}],["md",(a,c)=>{x(toBoolean(b.mdtemplate)?$t(a):a,c)}],["log",(a,c)=>{if(isString(a)&&toBoolean(b.logprintall))p(a.replace(/\n$/,""));else if(c=a,isMap(a)&&(c=[a]),isArray(c)){isUnDef(b.logtheme)&&isDef(getEnv("OAFP_LOGTHEME"))&&(b.logtheme=getEnv("OAFP_LOGTHEME"));let d=u(_$(b.logtheme,"logtheme").isString().default(""));d=merge({errorLevel:"RED,BOLD",warnLevel:"YELLOW",timestamp:"BOLD"},
d);c.forEach(f=>{if(isMap(f)){let e=isDef(f["@timestamp"])?f["@timestamp"]:__,h=isDef(f.level)?f.level:__;f=isDef(f.message)?f.message:__;let g;isDef(h)&&(0<=h.toLowerCase().indexOf("err")&&(g=d.errorLevel),0<=h.toLowerCase().indexOf("warn")&&(g=d.warnLevel));isDef(e)&&24<e.length&&(e=e.substring(0,23)+"Z");(isDef(f)||isDef(e))&&p(ansiColor(d.timestamp,e)+(isDef(h)?" | "+ansiColor(g,h):"")+" | "+ansiColor(g,f))}})}}],["raw",(a,c)=>{isString(a)?p(a):p(stringify(a))}],["lines",(a,c)=>{isArray(a)?a.forEach(d=>
p(d)):p(a)}],["ini",(a,c)=>{isString(a)||(ow.loadJava(),c=new ow.java.ini,p(c.put(a).save()))}],["toml",(a,c)=>{isUnDef(af.toTOML)&&k(-1,"TOML support not found.");if(isMap(a))p(af.toTOML(a));else if(isArray(a))p(af.toTOML({list:a}));else return __}],["mdyaml",(a,c)=>{isArray(a)?a.forEach((d,f)=>{x(d,merge(c,{__format:"yaml"}));f<a.length-1&&p("---\n")}):x(a,merge(c,{__format:"yaml"}))}],["mdtable",(a,c)=>{isArray(a)&&(ow.loadTemplate(),p(ow.template.md.table(a)))}],["template",(a,c)=>{isString(a)||
(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(b.template)&&isUnDef(b.templatepath)&&k(-1,"For out=template you need to provide a template=someFile.hbs or templatepath=..."),b.templatedata=_$(b.templatedata,"templatedata").isString().default("@"),p($t(isUnDef(b.template)?$path(b.__origr,b.templatepath):io.readFileString(b.template),$path(a,b.templatedata))))}],["openmetrics",(a,c)=>{isString(a)?k(-1,"For out=openmetrics input needs to be an array or map."):
(ow.loadMetrics(),a=ow.metrics.fromObj2OpenMetrics(a,b.metricsprefix,b.metricstimestamp),a=a.split("\n").map(d=>{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).join("\n"),p(a))}],["pjson",(a,c)=>{c.__format="prettyjson";x(a,c)}],["ndjson",(a,c)=>{isArray(a)?a.forEach(d=>p(stringify(d,__,""))):isMap(a)?p(stringify(a,__,"")):x(a,c)}],["base64",(a,c)=>{a=isString(a)?a:
stringify(a);toBoolean(b.base64gzip)?p(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a))))):p(af.fromBytes2String(af.toBase64Bytes(a)))}],["gb64json",(a,c)=>{a=isString(a)?a:stringify(a);p(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a)))))}],["jwt",(a,c)=>{isMap(a)?(isUnDef(b.jwtsecret)&&isUnDef(b.jwtprivkey)&&k(-1,"For out=jwt you need to provide a jwtsecret or a jwtprivkey"),ow.loadServer(),isDef(b.jwtprivkey)?(ow.loadJava(),c=new ow.java.cipher,p(ow.server.jwt.sign(c.readKey4File(b.jwtprivkey,
!0,b.jwtalg),a))):p(ow.server.jwt.sign(b.jwtsecret,a))):k(-1,"For out=jwt input needs to be a map.")}],["grid",(a,c)=>{isUnDef(b.grid)&&k(-1,"For out=grid you need to provide a grid=...");c=u(_$(b.grid,"grid").isString().$_());isArray(c)&&0<c.length&&isArray(c[0])?(c.forEach((d,f)=>{d.forEach((e,h)=>{if(isUnDef(e.type)||"empty"!=e.type){if(isDef(e.cmd)){var g=$sh(e.cmd).getJson(0);g=isDef(g)&&isDef(g.stdout)?g.stdout:""}else g=a;if("chart"==e.type||"bar"==e.type)h="_chrt"+(f+1)+"."+(h+1),e.obj=("chart"==
e.type?h+" ":"")+K(g,e.obj,h),isUnDef(e.title)&&(e.title="Chart "+h);isDef(e.path)?(e.obj=$path(g,e.path),isUnDef(e.title)&&(e.title=e.path)):isString(g)?e.obj=g:isObject(g)&&"chart"!=e.type&&(e.obj=$path(g,"@"))}else e.obj=""})}),c=ow.format.string.grid(c,__,__," ",!0),p(c)):k(-1,"Invalid grid parameter: '"+stringify(b.grid,__,"")+"'")}],["envs",(a,c)=>{a=isArray(a)?a.map(e=>isObject(e)?ow.loadObj().flatMap(e,"_"):e):ow.loadObj().flatMap(a,"_");c=e=>0<=String(e).indexOf(" ")?'"'+e+'"':e;isUnDef(b.envscmd)&&
(b.envscmd=ow.format.isWindows()?"set":"export");b.envscmd=String(b.envscmd);isUnDef(b.envsprefix)&&(b.envsprefix="_OAFP_");b.envsprefix=String(b.envsprefix);var d=new Set,f;for(f in a)d.add(b.envscmd+(0<b.envscmd.length?" ":"")+(b.envsprefix+f.replace(/[^a-zA-Z0-9_]/g,"_"))+"="+c(a[f]));p(Array.from(d).join("\n"))}],["cmd",(a,c)=>{isString(b.outcmd)||k(-1,'For out=cmd you need to provide a outcmd="..."');let d=f=>{f=isString(f)?f:stringify(f,__,"");if(toBoolean(b.outcmdparam))try{var e=$sh(b.outcmd.replace(/([^\\]?){}/g,
"$1"+f)).get(0)}catch(h){sprintErr(h)}else e=$sh(b.outcmd,f).get(0);toBoolean(b.outcmdnl)?(0<e.stdout.length&&print(e.stdout),0<e.stderr.length&&printErr(e.stderr)):(0<e.stdout.length&&printnl(e.stdout),0<e.stderr.length&&printErrnl(e.stderr))};isArray(a)?toBoolean(b.outcmdjoin)?d(a):toBoolean(b.outcmdseq)?a.forEach(d):parallel4Array(a,f=>{d(f)}):(isString(a),d(a))}],["chart",(a,c)=>{isUnDef(b.chart)&&k(-1,'For out=chart you need to provide a chart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&
k(-1,"output=chart is not supported in this version of OpenAF");a=K(a,b.chart);0<a.length&&(a=printChart("oafp "+a),toBoolean(b.chartcls)&&cls(),p(a))}],["schart",(a,c)=>{isUnDef(b.schart)&&k(-1,'For out=schart you need to provide a schart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&k(-1,"Output=schart is not supported in this version of OpenAF");a=K(a,b.schart,"_oafp_sfn_","soafp");0<a.length&&p(printChart("soafp "+a))}],["ch",(a,c)=>{isUnDef(b.ch)&&k(-1,'For out=ch you need to provide a ch="(type: ...)"');
isUnDef(b.chkey)&&k(-1,'For out=ch you need to provide a chkey="key1, key2"');a=isMap(a)?[a]:a;b.ch=u(b.ch);isMap(b.ch)?(isUnDef(b.ch.type)&&k(-1,"ch.type is not defined."),isDef(b.ch.lib)&&loadLib(b.ch.lib),"remote"==b.ch.type?$ch("oafp::outdata").createRemote(b.ch.url):$ch("oafp::outdata").create(b.ch.type,b.ch.options),toBoolean(b.chunset)?$ch("oafp::outdata").unsetAll(b.chkey.split(",").map(d=>d.trim()),a):$ch("oafp::outdata").setAll(b.chkey.split(",").map(d=>d.trim()),a),$ch("oafp::outdata").destroy()):
k(-1,"Invalid ch parameter")}],["db",(a,c)=>{(!isArray(a)||1>a.length)&&k(-1,"db is only supported for filled arrays/lists");b.dbtable=_$(b.dbtable,"outdbtable").isString().default("data");b.dbnocreate=toBoolean(_$(b.dbnocreate,"outdbnocreate").isString().default("false"));b.dbicase=toBoolean(_$(b.dbicase,"outdbicase").isString().default("false"));b.dbbatchsize=_$(b.dbbatchsize,"dbbatchsize").isNumber().default(__);ow.loadObj();try{isString(b.dbjdbc)||k(-1,"dbjdbc URL is not defined.");isDef(b.dblib)&&
loadLib("jdbc-"+b.dblib+".js");var d=new DB(b.dbjdbc,b.dbuser,b.dbpass,b.dbtimeout);if(!b.dbnocreate)try{var f=ow.obj.fromObj2DBTableCreate(b.dbtable,a,__,!b.dbicase);d.u(f);d.commit()}catch(n){d.rollback(),k(-1,"Error creating table: "+n)}var e=Object.keys(ow.obj.flatMap(a[0]));var h=b.dbicase?e.join(",").toUpperCase():'"'+e.join('", "')+'"';let m="";var g=a.map(n=>{var q=ow.obj.flatMap(n);n=[];for(var v in e)n.push(q[e[v]]);v=e.map(A=>String(q[A]));n="INSERT INTO "+(b.dbicase?b.dbtable:'"'+b.dbtable+
'"')+" ("+h+") VALUES ("+v.map(A=>"?").join(", ")+")";n.length>m.length&&(m=String(n));return v});d.usArray(m,g,b.dbbatchsize)}catch(m){isDef(d)&&d.rollback(),printErr(m),k(-1,"Error connecting to the database: "+m)}finally{isDef(d)&&(d.commit(),d.close())}}],["sql",(a,c)=>{(!isArray(a)||1>a.length)&&k(-1,"sql is only supported for filled arrays/lists");b.sqltable=_$(b.sqltable,"sqltable").isString().default("data");b.sqlicase=toBoolean(_$(b.sqlicase,"sqlicase").isString().default("false"));b.sqlnocreate=
toBoolean(_$(b.sqlnocreate,"sqlnocreate").isString().default("false"));ow.loadObj();b.sqlnocreate||p(ow.obj.fromObj2DBTableCreate(b.sqltable,a,__,!b.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(a[0]));var f=b.sqlicase?d.join(",").toUpperCase():'"'+d.join('", "')+'"';p(a.map(e=>{var h=ow.obj.flatMap(e);e=[];for(var g in d)e.push(h[d[g]]);g=d.map(m=>{m=h[m];isString(m)&&(m="'"+m.replace(/'/g,"''")+"'");isNull(m)&&(m="null");return m});return"INSERT INTO "+(b.sqlicase?b.sqltable:'"'+b.sqltable+
'"')+" ("+f+") VALUES ("+g.join(",")+");"}).join("\n"))}],["xml",(a,c)=>{x(a,c)}],["pxml",(a,c)=>{a=af.fromObj2XML(a,!0);p('<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n'+new XMLList(a))}],["xls",(a,c)=>{if(!isString(a)){try{includeOPack("plugin-XLS")}catch(h){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");if(isMap(a)){ow.loadObj();var d=ow.obj.flatMap(a);var f=Object.keys(d).map(h=>({key:h,value:d[h]}))}isArray(a)&&
(f=a);traverse(f,(h,g,m,n)=>{isString(g)&&g.startsWith("=")&&(n[h]="'"+g)});a=!1;c=b.xlsfile;isUnDef(b.xlsfile)&&(a=!0,b.xlsfile=io.createTempFile("oafp",".xlsx"));c=new XLS(isDef(c)&&io.fileExists(c)?c:__);var e=c.getSheet(_$(b.xlssheet,"xlssheet").isString().default("data"));b.xlsformat=_$(b.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');b.xlsformat=u(b.xlsformat);ow.format.xls.setTable(c,e,"A",1,f,__,b.xlsformat);c.writeFile(b.xlsfile);
c.close();b.xlsopenwait=_$(b.xlsopenwait,"xlsopenwait").isNumber().default(5E3);b.xlsopen=toBoolean(_$(b.xlsopen,"xlsopen").isString().default("true"));b.xlsopen&&(ow.format.isWindows()?($sh("start "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)))}}]]),F=new Map([["?",(a,c)=>{a=Array.from(F.keys()).filter(d=>"?"!=d).sort();l(a,c)}],["pm",(a,c)=>{r();isDef(__pm._map)&&(a=__pm._map);isDef(__pm._list)&&(a=
__pm._list);l(a,c)}],["key",(a,c)=>{r();isString(a)||k(-1,"key is only supported with a string.");l($get(a),c)}],["jsonschema",(a,c)=>{r();a=jsonParse(a,__,__,!0);isMap(a)||k(-1,"jsonschema is only supported with a map.");ow.loadObj();a=ow.obj.schemaSampleGenerator(a);l(a,c)}],["yaml",(a,c)=>{r();a=af.fromYAML(a);l(a,c)}],["xml",(a,c)=>{r();b.xmlignored=_$(b.xmlignored,"xmlignored").isString().default(__);b.xmlprefix=_$(b.xmlprefix,"xmlprefix").isString().default(__);b.xmlfiltertag=toBoolean(_$(b.xmlfiltertag,
"xmlfiltertag").isString().default(__));0<=a.indexOf("<?xml")&&(a=a.substring(a.indexOf("?>")+2).trim());0<=a.indexOf("<!DOCTYPE")&&(a=a.substring(a.indexOf(">")+1).trim());a=af.fromXML2Obj(a,b.xmlignored,b.xmlprefix,!b.xmlfiltertag);l(a,c)}],["lines",(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));r();let d=__,f=[],e=g=>{g=g.split("\n").map(n=>{let q="",v=0;for(let A=0;A<n.length;A++)if("\t"===n[A]){let y=8-v%8;q+=" ".repeat(y);v+=y}else q+=
n[A],v++;return q}).join("\n");if(isUnDef(d))return d=[],lastPos=0,isUnDef(b.linesvisualsepre)&&(b.linesvisualsepre=" \\s+"),g.split(new RegExp(b.linesvisualsepre)).forEach(n=>{0!=n.trim().length&&(d.push(n),n=g.substring(lastPos).match(new RegExp(ow.format.escapeRE(n)+"("+b.linesvisualsepre+"|$)")),!isNull(n)&&isDef(n.index)?(f.push(lastPos+n.index),lastPos=n.index):k(-1,"Problem with linesvisual to find header positioning."))}),__;var m={};f.forEach((n,q)=>{m[d[q]]=g.substring(n,q+1<f.length?f[q+
1]-1:__).trim()});return m};if(b.linesjoin)if(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=C(b.cmd,!0)),a=a.split(/\r?\n/),toBoolean(b.linesvisual)){var h=[];a.forEach(g=>{0!=g.length&&(g=e(g),isDef(g)&&h.push(g))});l(h,c)}else l(a,c);else a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,g=>{toBoolean(b.linesvisual)?(g=e(g),isDef(g)&&l(g,clone(c),!0)):l(g,clone(c),
!0)}),a.close()}],["ndjson",(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));r();global.__ndjsonbuf=__;var d=(e,h)=>{isUnDef(global.__ndjsonbuf)&&0!=e.length&&e.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=e.length&&!e.trim().endsWith("}")){global.__ndjsonbuf+=e.trim();return}0<global.__ndjsonbuf.length&&(e=global.__ndjsonbuf+e,global.__ndjsonbuf=__)}0==e.length||0<e.length&&"{"!=e.trim().substring(0,
1)?(h(e),global.__ndjsonbuf=__):h(e)},f=e=>{var h=[];e.split("\n").filter(g=>0<g.length).forEach(g=>d(g,m=>h.push(jsonParse(m,__,__,toBoolean(b.ndjsonfilter)))));return h};b.ndjsonjoin?(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=C(b.cmd,!0)),l(f(a),c)):(a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,e=>{d(e,h=>l(jsonParse(h,__,__,!0),clone(c),!0))}),a.close())}],
["md",(a,c)=>{r();__conConsole=__ansiColorFlag=!0;isUnDef(b.format)&&isUnDef(c.__format)&&(b.format="md",c.__format="md");l(a,c)}],["mdtable",(a,c)=>{r();ow.loadTemplate();if(toBoolean(b.inmdtablejoin)){var d=new Set,f=new Set,e=()=>{0<f.size&&(d.add(ow.template.md.fromTable(Array.from(f).join("\n"))),f.clear())};a.split("\n").forEach(h=>{/^\|.+\|$/.test(h.trim())?f.add(h.trim()):e()});e();l(Array.from(d),c)}else f=ow.template.md.fromTable(a),l(f,c)}],["ask",(a,c)=>{var d=[];a=af.fromJSSLON(a);isDef(askStruct)&&
isArray(a)&&(__conConsole=!0,__con.getTerminal().settings.set("-icanon min 1 -echo"),d=askStruct(a),__con.getTerminal().settings.set("icanon echo"),print(""));l(d,c)}],["raw",(a,c)=>{r();l(a,c)}],["ini",(a,c)=>{r();ow.loadJava();var d=new ow.java.ini;a=isDef(b.file)?d.loadFile(b.file).get():d.load(a).get();l(a,c)}],["jwt",(a,c)=>{ow.loadServer();if(toBoolean(b.injwtverify)){isUnDef(b.injwtsecret)&&isUnDef(b.injwtpubkey)&&k(-1,"injwtsecret or injwtpubkey is not defined.");try{if(isDef(b.injwtpubkey)){ow.loadJava();
var d=new ow.java.cipher;ow.server.jwt.verify(d.readKey4File(b.injwtpubkey,!1,b.injwtalg),a.trim())}else ow.server.jwt.verify(b.injwtsecret,a.trim());var f=!0}catch(e){isDef(e.javaException)&&printErr(e.javaException.getMessage()),f=!1}}a=ow.server.jwt.decode(a);isDef(f)&&(a.__verified=f);!toBoolean(b.injwtraw)&&isDef(a)&&isMap(a.claims)&&(isDef(a.claims.exp)&&(a.claims.exp=new Date(1E3*a.claims.exp)),isDef(a.claims.iat)&&(a.claims.iat=new Date(1E3*a.claims.iat)),isDef(a.claims.nbf)&&(a.claims.nbf=
new Date(1E3*a.claims.nbf)));l(a,c)}],["sql",(a,c)=>{isString(a)?toBoolean(b.sqlparse)?(isUnDef(ow.format.sqlFormat)&&k(-1,"SQL parse not available."),l(ow.format.sqlFormat(a,isDef(b.sqloptions)?u(b.sqloptions):__),c)):l(af.fromSQL(a).ast,c):l(a,c)}],["openmetrics",(a,c)=>{isString(a)?(ow.loadMetrics(),l(ow.metrics.fromOpenMetrics2Array(a),c)):l(a,c)}],["ch",(a,c)=>{r();isUnDef(b.inch)&&k(-1,"inch is not defined.");b.inch=u(b.inch);if(isMap(b.inch)){isUnDef(b.inch.type)&&k(-1,"inch.type is not defined.");
isDef(b.inch.lib)&&loadLib(b.inch.lib);"remote"==b.inch.type?$ch("oafp::indata").createRemote(b.inch.url):$ch("oafp::indata").create(b.inch.type,b.inch.options);var d=u(a);toBoolean(b.inchall)||0==a.trim().length?l($ch("oafp::indata").getAll(isMap(d)?d:__),c):l($ch("oafp::indata").get(isMap(d)?d:__),c);$ch("oafp::indata").destroy()}else k(-1,"inch is not a valid map.")}],["db",(a,c)=>{if(isString(a)){r();isString(b.indbjdbc)||k(-1,"indbjdbc URL is not defined.");try{isDef(b.indblib)&&loadLib("jdbc-"+
b.indblib+".js");var d=new DB(b.indbjdbc,b.indbuser,b.indbpass,b.indbtimeout);d.convertDates(!0);if(toBoolean(b.indbexec)){var f=d.u(a);l({affectedRows:f},c);d.commit()}else f=d.q(a),isMap(f)&&isArray(f.results)?l(f.results,c):k(-1,"Invalid DB result: "+stringify(f))}catch(e){printErr(e.message),isDef(d)&&d.rollback(),k(-1,"Error executing SQL: "+e.message)}finally{isDef(d)&&(d.rollback(),d.close())}}else k(-1,"db is only supported with a SQL string.")}],["xls",(a,c)=>{r();try{includeOPack("plugin-XLS")}catch(f){k(-1,
"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}b.xlssheet=_$(b.xlssheet,"xlssheet").isString().default(0);b.xlsevalformulas=toBoolean(_$(b.xlsevalformulas,"xlsevalformulas").isString().default(!0));b.xlscol=_$(b.xlscol,"xlscol").isString().default("A");b.xlsrow=_$(b.xlsrow,"xlsrow").isString().default(1);plugin("XLS");if(isDef(b.file)||isDef(b.cmd)){a=new XLS(isDef(b.cmd)?C(b.cmd):b.file);var d=a.getSheet(b.xlssheet);d=a.getTable(d,b.xlsevalformulas,
b.xlscol,b.xlsrow);a.close();isDef(d)&&isMap(d)&&(d=d.table);l(d,c)}else k(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],["csv",(a,c)=>{r();if(isDef(b.file)||isDef(b.cmd)){var d=isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):io.readFileStream(b.file);a=$csv(b.inputcsv).fromInStream(d).toOutArray();d.close()}else a=$csv(b.inputcsv).fromInString(a).toOutArray();l(a,c)}],["hsperf",(a,c)=>{if(isDef(b.file)||isDef(b.cmd)){r();ow.loadJava();var d=isDef(b.cmd)?
ow.java.parseHSPerf(C(b.cmd)):ow.java.parseHSPerf(b.file);d.__ts=new Date;var f=0,e=0;d.sun.gc.generation.forEach(h=>{h.space.forEach(g=>{e+=Number(g.used);f=isNumber(g.capacity)?f+Number(g.capacity):f;d.sun.gc["__percUsed_"+g.name]=100*g.used/g.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;a=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);
d.sun.gc.__ygc=isDef(a)?Number(a.invocations):0;d.sun.gc.__ygct=isDef(a)?Number(a.time/1E9):0;a=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name","").at(0);d.sun.gc.__fgc=isDef(a)?Number(a.invocations):0;d.sun.gc.__fgct=isDef(a)?Number(a.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/1E9;d.java.__mem={total:f,used:e,free:f-e,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-
d.sun.gc.metaspace.used};l(d,c)}else k(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["rawhex",(a,c)=>{b.inrawhexline=_$(b.inrawhexline,"inrawhexline").isNumber().default(__);r();a=isDef(b.file)||isDef(b.cmd)?isDef(b.cmd)?C(b.cmd):io.readFileBytes(b.file):af.fromString2Bytes(a);a=ow.format.string.toHexArray(a,b.inrawhexline);a.forEach(d=>{d.characters=d.characters.replace(/[\x00-\x1F\x80-\xFF]/g,".")});l(a,c)}],["base64",(a,c)=>{r();a=toBoolean(b.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(a,
!0))):af.fromBytes2String(af.fromBase64(a));l(a,c)}],["gb64json",(a,c)=>{r();a=af.fromBytes2String(io.gunzip(af.fromBase64(a,!0)));l(a,c)}],["oaf",(a,c)=>{isString(a)||k(-1,"oaf is only supported with a string.");r();a=af.eval(a);l(a,c)}],["oafp",(a,c)=>{b.__inception=!0;a=u(a);var d="_oafp_key_"+genUUID();if(isMap(a))a.out="key",a.__key=d,a.__inception=!0,oafp(a),a=$get(d),$unset(d),l(a,c);else if(isArray(a)){ow.loadObj();$set(d,!0);var f=new ow.obj.syncArray;a=a.map((e,h)=>{var g=d+"_"+String(h);
e.out="key";e.__key=g;e.__inception=!0;return $do(()=>{oafp(e);f.add($get(g));$unset(g)}).catch(m=>{sprintErr(m)})});$doWait($doAll(a));l(f.toArray(),c)}else k(-1,"oafp input data needs to be a map or an array.")}],["sh",(a,c)=>{r();a=u(a);if(isString(a))a=$sh(a).get(0);else{isMap(a)||k(-1,"For in=sh the input data needs to a string or a map");var d=$sh();isUnDef(a.cmd)&&k(-1,"For in=sh the input data needs to a string or a map with the a 'cmd'");d=d.sh(a.cmd);isDef(a.envs)&&(d=d.envs(a.envs,a.envsall));
isDef(a.prefix)&&(d=d.prefix(a.prefix));isDef(a.pwd)&&(d=d.pwd(a.pwd));switch(b.inshformat){case "raw":a=d.get(0);break;case "yaml":a=d.getYaml(0);break;default:a=d.getJson(0)}}l(a,c)}],["llm",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&k(-1,"llmoptions not defined and "+b.llmenv+" not found.");r();var d=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system",
"envs").get(b.llmenv));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&d.getGPT().setConversation(io.readFileJSON(b.llmconversation));let f;isString(b.llmimage)&&(b.llmimage.toLowerCase().match(/^https?:\/\//)?f=af.fromBytes2String(af.toBase64Bytes(af.fromInputStream2Bytes($rest().get2Stream(b.llmimage)))):io.fileExists(b.llmimage)&&(f=af.fromBytes2String(af.toBase64Bytes(io.readFileBytes(b.llmimage)))));a="md"==b.output||"mdtable"==b.output||"raw"==b.output?isDef(f)?d.promptImage(a,f):
d.prompt(a):isDef(f)?d.promptImage(a,f,__,__,__,__,!0):d.promptJSON(a);isDef(b.llmconversation)&&(d=d.getGPT().getConversation(),d.push({role:"assistant",content:stringify(a,__,"")}),io.writeFileJSON(b.llmconversation,d,""));l(jsonParse(a,__,__,isString(a)),c)}],["llmmodels",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&k(-1,"llmoptions not defined and "+
b.llmenv+" not found.");r();a=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system","envs").get(b.llmenv));isUnDef(a.getModels)&&k(-1,"OpenAF support for llm model listing API not found.");l(a.getModels(),c)}],["ls",(a,c)=>{r();if(isString(a)){var d=toBoolean(b.lsposix);isDef(b.file)&&(a=b.file);var f=io.fileExists(a),e;f&&(e=io.fileInfo(a));if(f&&e.isFile)switch(isDef(b.lsext)?b.lsext:e.filename.replace(/^.*\./,"").toLowerCase()){case "tgz":case "gz":a=io.listFilesTAR(a,!0);break;case "tar":a=io.listFilesTAR(a);
break;default:plugin("ZIP"),a=$m4a((new ZIP).list(a))}else a=toBoolean(b.lsrecursive)?listFilesRecursive(a,d):io.listFiles(a,d).files;l(a,c)}else k(-1,"ls is only supported with a string.")}],["toml",(a,c)=>{r();isUnDef(af.fromTOML)&&k(-1,"TOML support not found.");l(af.fromTOML(a),c)}],["slon",(a,c)=>{r();l(af.fromSLON(a),c)}],["json",(a,c)=>{r();l(jsonParse(a,__,__,isString(a)),c)}]]),D={};isString(b.libs)&&(b.libs=b.libs.split(",").map(a=>a.trim()).filter(a=>0<a.length));isDef(__flags.OAFP)&&isArray(__flags.OAFP.libs)&&
isArray(b.libs)?b.libs=__flags.OAFP.libs.concat(b.libs):b.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(b.libs)&&b.libs.forEach(a=>{try{var c=require("oafp_"+a+".js");if(isDef(c.oafplib)){var d=c.oafplib(clone(b),l,x,{_runCmd2Bytes:C,_fromJSSLON:u,_msg:"(processing data...)",_showTmpMsg:r,_clearTmpMsg:Q,_chartPathParse:K,_exit:k,_print:p,_o$o:x});isMap(d)&&(isArray(d.fileExtensions)&&d.fileExtensions.forEach(f=>{var e=f.ext;f=f.type;L.has(e)?printErr("WARN: Extension '"+e+"' already exists."):
L.set(e,f)}),isArray(d.fileExtensionsNoMem)&&d.fileExtensionsNoMem.forEach(f=>{f=f.ext;O.has(f)?printErr("WARN: Extension '"+f+"' already exists."):O.add(f)}),isArray(d.input)&&d.input.forEach(f=>{var e=f.type;f=f.fn;F.has(e)?printErr("WARN: Input type '"+e+"' already exists."):F.set(e,f)}),isArray(d.inputLine)&&d.inputLine.forEach(f=>{var e=f.type;f=f.fn;isUnDef(_inputLinesFns[e])?P[e]=f:printErr("WARN: Input type '"+e+"' already exists.")}),isArray(d.transform)&&d.transform.forEach(f=>{var e=f.type;
f=f.fn;isUnDef(E[e])?E[e]=f:printErr("WARN: Transform '"+e+"' already exists.")}),isArray(d.output)&&d.output.forEach(f=>{var e=f.type;f=f.fn;G.has(e)?printErr("WARN: Output type '"+e+"' already exists."):G.set(e,f)}),isString(d.help)&&(D[a.toLowerCase()]=d.help))}else printErr("WARN: Library '"+a+"' does not have oafplib.")}catch(f){printErr("WARN: Library '"+a+"' error: "+f)}});(""==b["-h"]||isString(b.help)&&0<b.help.length)&&w();b.format=_$(b.format,"format").isString().default(__);__initializeCon();
w=!String(java.lang.System.getProperty("os.name")).match(/Windows/);H=getEnv("OAFP_RESET");isDef(H)&&(w=toBoolean(H)?!1:!0);w&&__con.getTerminal().settings.set("sane");if(isDef(b.secKey)){toBoolean(b.secEnv)&&(b.secRepo="system",b.secBucket="envs");b.secRepo=_$(b.secRepo,"secRepo").isString().default(getEnv("OAFP_SECREPO"));b.secBucket=_$(b.secBucket,"secBucket").isString().default(getEnv("OAFP_SECBUCKET"));b.secPass=_$(b.secPass,"secPass").isString().default(getEnv("OAFP_SECPASS"));b.secMainPass=
_$(b.secMainPass,"secMainPass").isString().default(getEnv("OAFP_SECMAINPASS"));b.secFile=_$(b.secFile,"secFile").isString().default(getEnv("OAFP_SECFILE"));let a=$sec(b.secRepo,b.secBucket,b.secPass,b.secMainPass,b.secFile).get(secKey);isDef(a)&&Object.keys(a).forEach(c=>b[c]=a[c])}var B={__format:b.format,__from:b.from,__ifrom:b.ifrom,__isql:b.isql,__sql:b.sql,__path:b.path,__opath:b.opath,__csv:b.csv,__pause:b.pause,__key:b.__key};isDef(b.inputcsv)&&(b.inputcsv=u(b.inputcsv));isDef(b.incsv)&&(b.incsv=
u(b.incsv));isDef(b.csv)&&(b.csv=u(b.csv));var S=!1;if(""==b["-v"]||isString(b.version)&&0<b.version.length)S=!0,R();if(""==b["-examples"]||isString(b.examples)&&0<b.examples.length)b.url="https://ojob.io/oafp-examples.yaml",b.in="yaml",isString(b.examples)&&0<b.examples.length?("?"!=b.examples.trim()&&(B.__format="template"),B.__path="data",b.templatepath="tmpl",0<b.examples.indexOf("::")?(w=b.examples.split("::").filter(a=>0<a.length),B.__sql=1==w.length?"select * where c like '"+w[0]+"'":"select * where c like '"+
w[0]+"' and s like '"+w[1]+"'"):"?"==b.examples.trim()?(B.__path="data.sort(map(&concat(c,concat('::',s)),[]))",b.removedups=!0):B.__sql="select * where d like '%"+b.examples+"%' or s like '%"+b.examples+"%' or c like '%"+b.examples+"%'"):(B.__path="data[].{category:c,subCategory:s,description:d}",B.__from="sort(category,subCategory,description)",B.__format="ctable"),delete b["-examples"];var t="",M=!1;isDef(b.outfile)&&("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"===
typeof global.__oafp_streams[b.outfile]&&(global.__oafp_streams[b.outfile]={s:io.writeFileStream(b.outfile,toBoolean(b.outfileappend))}));isString(b.chs)&&(w=af.fromJSSLON(b.chs),isArray(w)||(w=[w]),w.forEach(a=>{isMap(a)?isString(a.name)&&isString(a.type)?$ch(a.name).create(a.type,a.options):k(-1,"ERROR: chs must have a name and a type."):k(-1,"ERROR: chs must be an object or array of objects with name and a type")}));w=()=>{if(S)t=R();else if(b.jsonprefix=_$(b.jsonprefix,"jsonprefix").isString().default(__),
b.jsondesc=toBoolean(_$(b.jsondesc,"jsondesc").default("false")),isDef(b.insecure)&&toBoolean(b.insecure)&&ow.loadJava().setIgnoreSSLDomains(),isDef(b.file)){if(0>b.file.indexOf("::")&&!io.fileExists(b.file)&&k(-1,"ERROR: File not found: '"+b.file+"'"),!O.has(b.type))if("json"==b.type||isUnDef(b.type))if(b.jsondesc){var a=new Set;io.readStreamJSON(b.file,d=>{d=d.substring(2);isDef(b.jsonprefix)?d.startsWith(b.jsonprefix)&&a.add(d):a.add(d);return!1});t=stringify(Array.from(a),__,"")}else if(isDef(b.jsonprefix)){var c=
io.readStreamJSON(b.file,d=>d.substring(2).startsWith(b.jsonprefix));t=stringify(c,__,"")}else t=io.readFileString(b.file),toBoolean(b._shebang)&&(t=t.replace(/^#!.*\n/,""));else t=io.readFileString(b.file),toBoolean(b._shebang)&&(t=t.replace(/^#!.*\n/,""))}else if(b.jsondesc&&k(-1,"ERROR: jsondesc only available for file input."),b.jsonprefix&&k(-1,"ERROR: jsonprefix only available for file input."),isDef(b.cmd))t=C(b.cmd,!0);else if(isString(b.data))t=b.data;else if(isDef(b.url)){b.urlmethod=_$(b.urlmethod,
"urlmethod").isString().default("GET");c=u(_$(b.urlparams).isString().default("{}"));let d;isDef(b.urldata)&&(d=u(b.urldata));switch(b.urlmethod.toLowerCase()){case "post":t=$rest(c).post(b.url,d);break;case "put":t=$rest(c).put(b.url,d);break;case "delete":t=$rest(c).delete(b.url,d);break;default:t=$rest(c).get(b.url)}isObject(t)&&(t=stringify(t,__,""))}else"pm"!=b.input&&(t=[],io.pipeLn(d=>{isDef(P[b.type])?P[b.type](N(d),clone(B))&&t.push(d):t.push(d);return!1}),t=t.join("\n"));M||(isUnDef(b.type)&&
(isDef(b.file)&&(c=b.file.substring(b.file.lastIndexOf(".")),L.has(c)&&(b.type=L.get(c))),isUnDef(b.type)&&(c=t.trim(),c.startsWith("{")||c.startsWith("[")?b.type="json":c.startsWith("(")?b.type="slon":c.startsWith("<")?b.type="xml":isString(c)&&0<c.length?1<c.substring(0,c.indexOf("\n")).split(",").length?b.type="csv":c.substring(0,0<c.indexOf(": "))&&(b.type="yaml"):k(-1,"Please provide the input type."))),isDef(b.type)&&F.has(b.type)?F.get(b.type)(t,B):(isString(b.type)&&printErr("WARN: "+b.type+
" input type not supported. Using json."),F.get("json")(t,B)),delete b.__origr)};isDef(b["-debug"])&&printErr("DEBUG: "+colorify(b));if(isNumber(b.loop))for(;;)toBoolean(b.loopcls)&&isDef(b.outfile)&&(global.__oafp_streams[b.outfile].close(),global.__oafp_streams[b.outfile]=io.writeFileStream(b.outfile,toBoolean(b.outfileappend))),w(),sleep(1E3*b.loop,!0);else w();isDef(global.__oafp_streams)&&Object.keys(global.__oafp_streams).forEach(a=>global.__oafp_streams[a].s.close())}};oafp(params);
