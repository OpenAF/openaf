var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20250117, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64(""))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("")))};
var _params=processExpr(" ");
const oafp=b=>{if(!isUnDef(b)&&!isDef(b.____ojob)){isDef($sec().procMap)&&(b=$sec().procMap(b));Object.keys(b).forEach(a=>{if(0<b[a].length){var c=a.toLowerCase();a!=c&&isUnDef(b[c])&&(b[c]=b[a],delete b[a])}});var N=a=>{for(var c=Object.keys(F),d=0;d<c.length;d++){var h=c[d];isDef(b[h])&&(a=F[h](a))}return a},J=(a,c)=>{b.__origr=a;c.__ifrom&&(a=$from(a).query(af.fromNLinq(c.__ifrom.trim())),delete c.__ifrom);if(c.__isql){var d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";
break;case "advanced":d="h2";break;default:d=__}if(isArray(a)&&0<a.length)if(isString(b.isqlfiltertables)){var h=$sql();d=x(b.isqlfiltertables);isArray(d)&&(d.forEach(f=>{isUnDef(f.table)&&l(-1,"One 'table' not defined in isqlfiltertables");f.path=_$(f.path,"isqlfiltertables table "+f.table+" path").isString().default("@");var e=$path(a,f.path);isArray(e)&&(h=h.table(f.table,e))}),a=h.closeQuery(c.__isql.trim()))}else a=$sql(a,c.__isql.trim(),d);delete c.__isql}c.__path&&(a=$path(a,c.__path.trim()),
delete c.__path);if(isString(a))return N(a);a=N(a);c.__from&&(a=$from(a).query(af.fromNLinq(c.__from.trim())),delete c.__from);if(c.__sql){d=__;if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(a)&&0<a.length&&(isString(b.sqlfiltertables)?(h=$sql(),d=x(b.sqlfiltertables),isArray(d)&&(d.forEach(f=>{isUnDef(f.table)&&l(-1,"One 'table' not defined in sqlfiltertables");f.path=_$(f.path,"sqlfiltertables table "+f.table+
" path").isString().default("@");var e=$path(a,f.path);isArray(e)&&(h=h.table(f.table,e))}),a=h.closeQuery(c.__sql.trim()))):a=$sql(a,c.__sql.trim(),d));delete c.__sql}c.__opath&&(a=$path(a,c.__opath.trim()),delete c.__opath);return a},m=(a,c,d)=>{c=clone(c);toBoolean(b.color)?__conConsole=!0:isDef(b.color)&&(__conAnsi=!1);a=isString(a)?a.trim().startsWith("{")&&a.trim().endsWith("}")?J(jsonParse(a,__,__,!0),c):J(a,c):d?J([a],c)[0]:J(a,c);isDef(b.outputkey)&&(a=$$({}).set(b.outputkey,a));isDef(b.outkey)&&
(a=$$({}).set(b.outkey,a));R();isUnDef(c.__format)&&(c.__format=getEnvsDef("OAFP_OUTPUT",c.__format,"tree"));H.has(c.__format)?H.get(c.__format)(a,c):v(a,c,__)},C=(a,c)=>{var d=af.fromString2Bytes(""),h=af.newOutputStream();$sh(a).cb((f,e,g)=>{ioStreamCopy(h,f);f=h.toByteArray();0<f.length&&(d=f)}).get();return c?af.fromBytes2String(d):d},x=a=>{if(!isString(a)||""==a||isNull(a))return"";a=a.trim();return isDef(af.fromJSSLON)?af.fromJSSLON(a):a.startsWith("{")?jsonParse(a,__,__,!0):af.fromSLON(a)},
K=(a,c,d,h)=>{d=_$(d).isString().default("_oafp_fn_");c=splitBySepWithEnc(c," ",[['"','"'],["'","'"]]);let f=[];$ch("__oaf::chart").create();if(1<c.length){for(let e=0;e<c.length;e++)if(0==e)f.push(c[e]);else{let g=splitBySepWithEnc(c[e],":",[['"','"'],["'","'"]]).map((k,n)=>{if(0==n){if(k.startsWith("-"))return k;global[d+e]=()=>{if(isString(h)){var r=$ch("__oaf::chart").get({name:h});r=isUnDef(r)?[]:r.data;var u=$path(a,k);if(isArray(u))return u.forEach((p,A)=>{isArray(r[A])?r[A].push(p):r[A]=[p]}),
u=r.pop(),$ch("__oaf::chart").set({name:h},{name:h,data:r}),u[0]}else return $path(a,k)};return d+e}return k}).join(":");f.push(g)}return f.join(" ")}return""},q=a=>{"undefined"!==typeof a&&("undefined"===typeof b.outfile?(toBoolean(b.loopcls)&&cls(),print(a)):("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"!==typeof global.__oafp_streams[b.outfile]&&ioStreamWrite(global.__oafp_streams[b.outfile].s,a+(toBoolean(b.outfileappend)?"\n":""))))},v=(a,c,d)=>{"undefined"!==
typeof a&&(a=$o(a,c,d,!0),isDef(a)&&q(a))},O=(a,c)=>{a=_$(a).isMap().default({});return isDef(a.secKey)?(aMap=clone(a),aMap.secRepo=_$(aMap.secRepo).default(getEnv("OAFP_SECREPO")),aMap.secBucket=_$(aMap.secBucket).default(getEnv("OAFP_SECBUCKET")),aMap.secPass=_$(aMap.secPass).default(getEnv("OAFP_SECPASS")),aMap.secMainPass=_$(aMap.secMainPass).default(getEnv("OAFP_SECMAINPASS")),aMap.secFile=_$(aMap.secFile).default(getEnv("OAFP_SECFILE")),a=$sec(aMap.secRepo,aMap.secBucket,aMap.secPass,aMap.secMainPass,
aMap.secFile).get(aMap.secKey),delete aMap.secRepo,delete aMap.secBucket,delete aMap.secPass,delete aMap.secMainPass,delete aMap.secFile,delete aMap.secKey,isDef(c)?$$(aMap).set(c,merge($$(aMap).get(c),a)):merge(aMap,a)):a},t=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||toBoolean(b.chartcls)||printErrnl(_$(a).default("(processing data...)"))},R=a=>{"grid"==b.out||b.__inception||toBoolean(b.loopcls)||toBoolean(b.chartcls)||printErrnl("\r"+" ".repeat(_$(a).default("(processing data...)").length)+
"\r")},l=(a,c)=>{isUnDef(c)&&(c="exit: "+a);if(isUnDef(ow.oJob)&&!toBoolean(b.noexit))0!=a&&printErr(c),exit(a);else throw c;},z=()=>{__initializeCon();b.help=_$(b.help,"help").isString().default("");switch(b.help.toLowerCase()){case "filters":var a="docs/FILTERS.md";break;case "template":a="docs/TEMPLATE.md";break;case "examples":a="docs/EXAMPLES.md";break;case "readme":case "usage":a="docs/USAGE.md";break;default:a=b.help.toLowerCase(),a=isDef(D[a])?"docs/"+a+".md":"docs/USAGE.md"}var c=(getOPackPath("oafproc")||
".")+"/"+a;let d="";if("docs/USAGE.md"==a&&0<Object.keys(D).length){d="\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let h in D)d+="| "+h+" | help="+h+" |\n"}isDef(c)&&io.fileExists(c)?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c)+d)):q(isDef(b.out)&&"raw"==b.out?io.readFileString(c)+d:ow.format.withMD(io.readFileString(c)+d))):isDef(global._oafphelp)&&
isDef(global._oafphelp[a])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[a]+d)):q(isDef(b.out)&&"raw"==b.out?global._oafphelp[a]+d:ow.format.withMD(global._oafphelp[a]+d))):isString(D[b.help])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(D[b.help])):q(isDef(b.out)&&"raw"==b.out?D[b.help]:ow.format.withMD(D[b.help]))):
q("Check https://github.com/OpenAF/oafp/blob/master/src/"+a);l(0)},S=()=>{var a=(getOPackPath("oafproc")||".")+"/.package.yaml";a={oafp:{version:io.fileExists(a)?io.readFileYAML(a).version:"(not available/embedded)",inputs:Array.from(G.keys()).filter(c=>"?"!=c).sort(),transforms:Object.keys(F).filter(c=>"transforms"!=c).sort(),outputs:Array.from(H.keys()).filter(c=>"?"!=c).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name",
"OpenAF").sort("name").select({name:"",version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},os:{name:String(java.lang.System.getProperty("os.name")),version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),
total:Number(java.lang.Runtime.getRuntime().totalMemory())},store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};return stringify(a,__,"")};ow.loadFormat();b.format=b.output||b.format||b.out;b.type=b.input||b.type||b.in;b.out=b.format;b.output=b.format;b.in=b.type;b.input=b.type;if("undefined"==typeof b.file&&"undefined"==typeof b.cmd&&
"undefined"==typeof b.data&&"undefined"==typeof b.url){var I=__;for(let a in b)if("undefined"==typeof I&&""===b[a]&&"-debug"!=a&&"-v"!=a&&"-examples"!=a){I=a;break}b.file=I}b.debug=toBoolean(b.debug);isDef(b["-debug"])&&(b.debug=!0);"[object Object]"==Object.prototype.toString.call(b.data)&&(b.data=stringify(b.data,__,""));var L=new Map([[".json","json"],[".ndjson","ndjson"],[".slon","slon"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],
[".sql","sql"],[".toml","toml"],[".jwt","jwt"]]),P=new Set(["csv","ndjson"]),Q={lines:(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));if(!b.linesjoin&&isString(a))0!=a.trim().length&&(0<a.trim().length&&(a=a.trim().split(/\r?\n/)),m(a,c,!0)),M=!0;else return!0},javagc:(a,c)=>{isBoolean(b.javagcjoin)||(b.javagcjoin=toBoolean(_$(b.javagcjoin,"javagcjoin").isString().default(__)));if(b.javagcjoin)return!0;if(isUnDef(global.__javagc_buffer)||
1048576<global.__javagc_buffer.length)global.__javagc_buffer="";ow.loadFormat();global.__javagc_buffer+=a;a=(d=>{try{let h=[/([^ ]+) (\d+\.\d+): \[GC \((.*?)\)(.+?)\[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/s,/([^ ]+) (\d+\.\d+): \[GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), (\d+\.\d+) secs\]/,/([^ ]+) (\d+\.\d+): \[Full GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] \[ParOldGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), \[Metaspace: (\d+K)->(\d+K)\(.*?\)\], (\d+\.\d+) secs\]/,
/([^ ]+) (\d+\.\d+): \[GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/,/([^ ]+) (\d+\.\d+): \[Full GC \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\(.*?\)\] \[ParOldGen: (\d+K)->(\d+K)\(.*?\)\] (\d+K)->(\d+K)\(.*?\), \[Metaspace: (\d+K)->(\d+K)\(.*?\)\], (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/,/^\[(.+)\]\s+GC\((\d+)\)\s*(.*?)\s*(\d+[GMK])->(\d+[GMK])\((\d+[GMK])\)\s*(\d+\.\d+)ms/,
/^\[(.+)\]\s+GC\((\d+)\)\s*(.*?)\s*Metaspace:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)\s*NonClass:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)\s*Class:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)/,/^\[(.+)\]\s+GC\((\d+)\)\s*(Allocation Failure)\s*(.*?)\s+(\d+[KMGT])->(\d+[KMGT])\((\d+[KMGT])\)\s+(\d+\.\d+)ms/];for(let f=0;f<h.length;f++){let e=d.match(h[f]);if(e){let g={};d.startsWith("[")?(e[1].split("][").forEach(k=>{k.match(/^\d+\.\d+s$/)?g.sinceStart=parseFloat(k.replace(/s$/,
"")):k.match(/\d{4}-\d{2}-\d{2}T/)&&(g.timestamp=ow.format.toDate(k,"yyyy-MM-dd'T'HH:mm:ss.SSSZ"))}),g.gcId=parseInt(e[2]),g.gcType=e[3].trim(),""==g.gcType&&(g.gcType="none"),g.durationSecs=parseFloat(e[e.length-1])/1E3,5===f?(g.heapBeforeGC=ow.format.fromBytesAbbreviation(e[4]+"B"),g.heapAfterGC=ow.format.fromBytesAbbreviation(e[5]+"B"),g.heapTotal=ow.format.fromBytesAbbreviation(e[6]+"B")):5<f&&(6==f?(g.metaUsedBeforeGC=ow.format.fromBytesAbbreviation(e[4]+"B"),g.metaTotalBeforeGC=ow.format.fromBytesAbbreviation(e[5]+
"B"),g.metaUsedAfterGC=ow.format.fromBytesAbbreviation(e[6]+"B"),g.metaTotalAfterGC=ow.format.fromBytesAbbreviation(e[7]+"B"),g.nonClassUsedBeforeGC=ow.format.fromBytesAbbreviation(e[8]+"B"),g.nonClassTotalBeforeGC=ow.format.fromBytesAbbreviation(e[9]+"B"),g.nonClassUsedAfterGC=ow.format.fromBytesAbbreviation(e[10]+"B"),g.nonClassTotalAfterGC=ow.format.fromBytesAbbreviation(e[11]+"B"),g.classUsedBeforeGC=ow.format.fromBytesAbbreviation(e[12]+"B"),g.classTotalBeforeGC=ow.format.fromBytesAbbreviation(e[13]+
"B"),g.classUsedAfterGC=ow.format.fromBytesAbbreviation(e[14]+"B"),g.classTotalAfterGC=ow.format.fromBytesAbbreviation(e[15]+"B")):(g.heapBeforeGC=ow.format.fromBytesAbbreviation(e[4]+"B"),g.heapAfterGC=ow.format.fromBytesAbbreviation(e[5]+"B"),g.heapTotal=ow.format.fromBytesAbbreviation(e[6]+"B")))):(g.timestamp=ow.format.toDate(e[1],"yyyy-MMdd'T'HH:mm:ss.SSSZ"),g.sinceStart=parseFloat(e[2]),g.gcType=e[3],g.durationSecs=parseFloat(e[e.length-1]),0===f||6===f?(g.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(e[4]+
"B"),g.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(e[5]+"B"),g.beforeGC=ow.format.fromBytesAbbreviation(e[6]+"B"),g.afterGC=ow.format.fromBytesAbbreviation(e[7]+"B"),6===f&&d.includes("Allocation Failure")&&(g.gcCause="Allocation Failure")):1===f||3===f?(g.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(e[4]+"B"),g.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(e[5]+"B"),g.ParOldGenBeforeGC=ow.format.fromBytesAbbreviation(e[6]+"B"),g.ParOldGenAfterGC=ow.format.fromBytesAbbreviation(e[7]+
"B"),g.beforeGC=ow.format.fromBytesAbbreviation(e[8]+"B"),g.afterGC=ow.format.fromBytesAbbreviation(e[9]+"B"),g.metaspaceBeforeGC=ow.format.fromBytesAbbreviation(e[10]+"B"),g.metaspaceAfterGC=ow.format.fromBytesAbbreviation(e[11]+"B")):2===f?(g.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(e[4]+"B"),g.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(e[5]+"B"),g.beforeGC=ow.format.fromBytesAbbreviation(e[6]+"B"),g.afterGC=ow.format.fromBytesAbbreviation(e[7]+"B"),g.userTime=parseFloat(e[8]),
g.sysTime=parseFloat(e[9]),g.realTime=parseFloat(e[10])):6===f&&(g.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(e[5]+"B"),g.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(e[6]+"B"),g.beforeGC=ow.format.fromBytesAbbreviation(e[7]+"B"),g.afterGC=ow.format.fromBytesAbbreviation(e[8]+"B"),g.durationSecs=parseFloat(e[9]),e[10]&&(g.userTime=parseFloat(e[10]),g.sysTime=parseFloat(e[11]),g.realTime=parseFloat(e[12])),g.gcCause="Allocation Failure"));return g}}}catch(h){printErr(h),l(-2,"Error parsing Java GC log: "+
h)}})(a);isMap(a)&&(m(a,c,!0),global.__javagc_buffer="")},ndjson:(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(b.ndjsonjoin)return!0;isUnDef(global.__ndjsonbuf)&&0!=a.length&&a.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=a.length&&!a.trim().endsWith("}")){global.__ndjsonbuf+=a.trim();return}0<global.__ndjsonbuf.length&&(a=global.__ndjsonbuf+a,global.__ndjsonbuf=__)}0==a.length||0<a.length&&
"{"!=a.trim().substring(0,1)?(m(jsonParse(global.__ndjsonbuf,__,__,!0),c,!0),M=!0,global.__ndjsonbuf=__):(m(jsonParse(a,__,__,!0),c,!0),M=!0)}},F={transforms:a=>{if(toBoolean(b.transforms))return Object.keys(F).filter(c=>"transforms"!=c).sort()},cmlt:a=>{if(toBoolean(b.cmlt)){a=isArray(a)?a:[a];b.cmltch=_$(b.cmltch,"cmltch").default("(type: simple)");var c=x(b.cmltch);if(isMap(c))return isUnDef(c.type)&&l(-1,"cmltch.type is not defined."),isDef(c.lib)&&loadLib(c.lib),0>$ch().list().indexOf("oafp::cmltdata")&&
("remote"==c.type?$ch("oafp::cmltdata").createRemote(c.url):$ch("oafp::cmltdata").create(c.type,c.options),c=Number(_$(b.cmltsize,"cmltsize").isNumber().default(100))-1,0<c&&$ch("oafp::cmltdata").subscribe(ow.ch.utils.getHousekeepSubscriber("oafp::cmltdata",c))),a.forEach(d=>$ch("oafp::cmltdata").set({t:nowNano()},d)),$ch("oafp::cmltdata").getAll();l(-1,"Invalid cmltch parameter")}},diff:a=>{var c=x(b.diff);if(isMap(c)){isDef(c.a)&&isDef(c.b)||l(-1,"diff.a path and diff.b path are required.");loadDiff();
let d=$path(a,c.a);a=$path(a,c.b);let h=__;toBoolean(b.color)&&(isUnDef(b.difftheme)&&isDef(getEnv("OAFP_DIFFTHEME"))&&(b.difftheme=getEnv("OAFP_DIFFTHEME")),h=x(_$(b.difftheme,"difftheme").isString().default("")),h=merge({added:"GREEN",removed:"RED",common:"FAINT",linenum:"ITALIC",linediv:"FAINT",linesep:"|"},h));let f=(e,g)=>{if(toBoolean(b.color)){isUnDef(g)&&(g="");var k=new Set;if(isArray(e)){let n=1,r=toBoolean(b.diffnlines),u=0;r&&(e.forEach(A=>{u+=A.value.split("\n").length}),u=String(u).length+
1);let p=A=>{let y;y=r&&""!=g?ansiColor(h.linenum,0<A?$ft("% "+u+"d",n):" ".repeat(u))+ansiColor(h.linediv,`${h.linesep}`):"";n+=A;return y};e.forEach((A,y)=>{y=A.value;isString(y)&&(""!=g?(y=y.split(g),""==y[y.length-1]&&y.pop()):y=[y]);k.add(A.added?y.map(E=>p(1)+ansiColor(h.added,(""!=g?"+":"")+E)).join(ansiColor("RESET",g)):A.removed?y.map(E=>p(0)+ansiColor(h.removed,(""!=g?"-":"")+E)).join(ansiColor("RESET",g)):y.map(E=>p(1)+ansiColor(h.common,(""!=g?" ":"")+E)).join(ansiColor("RESET",g)))})}return Array.from(k).join(ansiColor("RESET",
g))}return $from(e).select({count:__,added:!1,removed:!1,value:[]})};return isString(d)&&isString(a)?toBoolean(b.diffwords)?f(JsDiff.diffWords(d,a,c.options)):toBoolean(b.diffwordswithspace)?f(JsDiff.diffWordsWithSpace(d,a,c.options)):toBoolean(b.difflines)?f(JsDiff.diffLines(d,a,c.options),"\n"):toBoolean(b.diffsentences)?f(JsDiff.diffSentences(d,a,c.options),"\n"):f(JsDiff.diffChars(d,a,c.options)):isArray(d)&&isArray(a)&&!toBoolean(b.color)?f(JsDiff.diffArrays(d,a,c.options)):f(JsDiff.diffJson(d,
a,c.options),"\n")}},jsonschemagen:a=>{if(toBoolean(b.jsonschemagen))return ow.loadObj(),ow.obj.schemaGenerator(a)},jsonschemacmd:a=>F.jsonschema(a),jsonschema:a=>{isMap(a)||l(-1,"jsonschema is only supported with a map.");isUnDef(b.jsonschema)&&isUnDef(b.jsonschemacmd)&&l(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var c;if(isDef(b.jsonschemacmd)){var d=$sh(b.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:l(-1,"Error executing the command '"+
b.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(b.jsonschema);isMap(c)||l(-1,"The schema provided is not a valid JSON schema.");ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(a),errors:c.errors}},sortmapkeys:a=>{if(toBoolean(b.sortmapkeys)&&isObject(a)){let c=(d,h)=>{let f=Object.keys(d).sort(),e={};for(let g=0;g<f.length;g++){let k=f[g],n=d[k];Array.isArray(n)?e[k]=n.map(r=>"object"===typeof r&&null!==r&&void 0!==r?sortMapKeys(r,h):r):e[k]=h&&"object"===typeof n&&
null!==n&&void 0!==n?c(n,h):n}return e};return c(a,!0)}return a},searchkeys:a=>isObject(a)?searchKeys(a,b.searchkeys):a,searchvalues:a=>isObject(a)?searchValues(a,b.searchvalues):a,maptoarray:a=>toBoolean(b.maptoarray)&&isMap(a)?$m4a(a,b.maptoarraykey):a,arraytomap:a=>toBoolean(b.arraytomap)&&isArray(a)?$a4m(a,b.arraytomapkey,toBoolean(b.arraytomapkeepkey)):a,flatmap:a=>toBoolean(b.flatmap)&&isObject(a)?ow.loadObj().flatMap(a,b.flatmapsep):a,merge:a=>{if(toBoolean(b.merge)&&isArray(a)&&1<a.length){for(var c,
d=0;d<a.length;d++)c=0==d?a[d]:merge(c,a[d]);return c}return a},correcttypes:a=>{toBoolean(b.correcttypes)&&isObject(a)&&traverse(a,(c,d,h,f)=>{switch(descType(d)){case "number":isString(d)&&(f[c]=Number(d));break;case "string":"true"==d.trim().toLowerCase()||"false"==d.trim().toLowerCase()?f[c]=toBoolean(d):d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?f[c]=new Date(d):d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?f[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?f[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&
(f[c]=new Date(d))}});return a},removenulls:a=>{toBoolean(b.removenulls)&&traverse(a,(c,d,h,f)=>{(isNull(d)||isUnDef(d))&&delete f[c]});return a},removeempty:a=>toBoolean(b.removeempty)&&isArray(a)?a.filter(c=>isDef(c)&&!isNull(c)):a,trim:a=>{toBoolean(b.trim)&&traverse(a,(c,d,h,f)=>{isString(d)&&(f[c]=d.trim())});return a},removedups:a=>{if(toBoolean(b.removedups)){if(isArray(a)){var c=new Set,d=[];a.forEach(h=>{var f=h;isObject(h)&&(f=sortMapKeys(f));f=stringify(f,__,!0);c.has(f)||(c.add(f),d.push(h))});
return d}l(-1,"removedups is only supported for arrays")}return a},llmprompt:a=>{if(isString(b.llmprompt)){b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);var c=$llm(O(isDef(b.llmoptions)?b.llmoptions:$sec("system","envs").get(b.llmenv)));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&c.getGPT().setConversation(io.readFileJSON(b.llmconversation));var d="json",h=!0;isString(b.input)&&("md"==b.input&&(d="markdown",
h=!1),"mdtable"==b.input&&(d="markdown table",h=!1),"hsperf"==b.input&&(d="java hsperf file"),"raw"==b.input&&(d="raw",h=!1));c=c.withContext(h?stringify(a,__,!0):a,isDef(b.llmcontext)?b.llmcontext:`${d} input data`);if(isString(b.output)&&("md"==b.output||"mdtable"==b.output||"raw"==b.output))return a=c.prompt(b.llmprompt),isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,c.getGPT().getConversation(),""),a;a=c.promptJSON(b.llmprompt);isDef(b.llmconversation)&&io.writeFileJSON(b.llmconversation,
c.getGPT().getConversation(),"");return a}return a},splitlines:a=>toBoolean(b.splitlines)&&isString(a)?a.split(/\r?\n/):a,regression:a=>{if(isString(b.regression)){ow.loadAI();var c=ow.ai.regression(),d=_$(b.regressionpath,"regressionpath").isString().default("@");let h=x(_$(b.regressionoptions,"regressionoptions").isString().default("{order:2,precision:5}"));d=$path(a,d);if(isArray(d)){if(isString(b.regressionx)){let e=$path(a,b.regressionx);d=d.map((g,k)=>[e[k],g])}else d=d.map((e,g)=>[g+1,e]);
let f;switch(b.regression){case "exp":f=c.exponential(d,h);break;case "poly":f=c.polynomial(d,h);break;case "power":f=c.power(d,h);break;case "log":f=c.logarithmic(d,h);break;default:f=c.linear(d,h)}return isDef(f)&&isDef(f.points)?(isString(b.regressionforecast)&&(a=$path(a,b.regressionforecast),isArray(a)?a.forEach(e=>{f.points.push(f.predict(e))}):l(-1,"Invalid array of x for regression forecast")),f.points.map(e=>({x:e[0],y:e[1]}))):f}l(-1,"Invalid data for regression analysis")}return a},normalize:a=>
{if(isString(b.normalize)){var c=x(b.normalize);if(isMap(c)){ow.loadAI();if(isMap(a))return ow.ai.normalize.withSchema(a,c,!0);if(isArray(a))return a.map(d=>ow.ai.normalize.withSchema(d,c,!0))}else l(-1,"Invalid normalize schema")}else l(-1,"Invalid normalize schema")},denormalize:a=>{if(isString(b.denormalize)){var c=x(b.denormalize);if(isMap(c)){ow.loadAI();isUnDef(ow.ai.normalize.denormalizeWithSchema)&&l(-1,"This version of OpenAF does not support denormalizeWithSchema");if(isMap(a))return ow.ai.normalize.denormalizeWithSchema(a,
c,!1);if(isArray(a))return a.map(d=>ow.ai.normalize.denormalizeWithSchema(d,c,!1))}else l(-1,"Invalid denormalize schema")}else l(-1,"Invalid denormalize schema")},kmeans:a=>{isNumber(b.kmeans)||(b.kmeans=5);isArray(a)||l(-1,"For kmeans transform you need to provide an array as input");ow.loadAI();return ow.ai.cluster({type:"kmeans",numberOfClusters:Number(b.kmeans)}).classify(a)},getlist:a=>{if(isObject(a)&&(toBoolean(b.getlist)||isNumber(b.getlist))){var c=!1,d,h=isNumber(b.getlist)?b.getlist:1;
traverse(a,(f,e,g,k)=>{!c&&isArray(e)&&(h--,0==h&&(c=!0),d=e)});return c?d:a}},set:a=>{var c=x(b.set);!isMap(c)&&isUnDef(c.a)&&isUnDef(c.b)&&l(-1,"set.a path and set.b path are required.");isUnDef(pForEach)&&l(-1,"This version of OpenAF does not support the set transform");isString(c.a)||l(-1,"set.a path is not a string.");isString(c.b)||l(-1,"set.b path is not a string.");let d=$path(a,c.a);a=$path(a,c.b);isArray(d)||l(-1,"set.a path result is not an array.");isArray(a)||l(-1,"set.b path result is not an array.");
let h;if(isString(b.setkeys)){ow.loadObj();var f=b.setkeys.split(",").map(e=>e.trim());h=e=>stringify(isObject(e)?sortMapKeys(ow.obj.filterKeys(f,e),!0):e,__,"");c=e=>pForEach(e,h).reduce((g,k)=>g.concat(k),[])}else h=e=>stringify(isObject(e)?sortMapKeys(e,!0):e,__,""),c=e=>pForEach(e,h).reduce((g,k)=>g.concat(k),[]);switch(b.setop){case "union":let e=new Set(c(d));return d.concat(a.filter(p=>!e.has(h(p))));case "diffa":let g=new Set(c(a));return d.filter(p=>!g.has(h(p)));case "diffb":let k=new Set(c(d));
return a.filter(p=>!k.has(h(p)));case "diffab":let n=new Set(c(d)),r=new Set(c(a));return d.filter(p=>!r.has(h(p))).concat(a.filter(p=>!n.has(h(p))));default:let u=new Set(c(a));return d.filter(p=>u.has(h(p)))}},forcearray:a=>isMap(a)?[a]:a,spacekeys:a=>{isMap(a)&&traverse(a,(c,d,h,f)=>{0<=c.indexOf(" ")&&(f[c.replace(/ /g,b.spacekeys||"_")]=d,delete f[c])});return a},numformat:a=>{traverse(a,(c,d,h,f)=>{isTNumber(d)&&isString(b.numformat)&&(f[c]=$ft(b.numformat,d))});return a}},H=new Map([["?",(a,
c)=>{a=Array.from(H.keys()).filter(d=>"?"!=d).sort();v(a,c)}],["pm",(a,c)=>{v(a,c)}],["key",(a,c)=>{v(a,c)}],["html",(a,c)=>{let d;c=!1;b.htmlopen=toBoolean(_$(b.htmlopen,"htmlopen").isString().default("true"));b.htmlwait=_$(b.htmlwait,"htmlwait").isNumber().default(2500);b.htmlopen&&(d=io.createTempFile("oafp_",".html"));ow.loadTemplate();isString(a)?(a=ow.template.html.genStaticVersion(ow.template.parseMD2HTML(a,!toBoolean(b.htmlpart),!toBoolean(b.htmlcompact))),a=a.replace("<html>",'<html><meta charset="utf-8">')):
(a=ow.template.html.parseMap(a,!0),a='<html><meta charset="utf-8"><style>'+a.css+"</style><body>"+a.out+"</body></html>");b.htmlopen&&(io.writeFileString(d,a),c=openInBrowser("file:///"+d.replace(/\\/g,"/")));c?sleep(b.htmlwait,!0):q(a)}],["ctable",(a,c)=>{v(a,c)}],["stable",(a,c)=>{v(a,c)}],["table",(a,c)=>{v(a,c)}],["json",(a,c)=>{v(a,c)}],["yaml",(a,c)=>{v(a,c)}],["cyaml",(a,c)=>{v(a,c)}],["cjson",(a,c)=>{v(a,c)}],["slon",(a,c)=>{v(a,c)}],["cslon",(a,c)=>{v(a,c)}],["ctree",(a,c)=>{v(a,c)}],["tree",
(a,c)=>{v(a,c)}],["res",(a,c)=>{v(a,c)}],["key",(a,c)=>{v(a,c)}],["text",(a,c)=>{v(a,c)}],["csv",(a,c)=>{v(a,c)}],["map",(a,c)=>{v(a,c)}],["md",(a,c)=>{v(toBoolean(b.mdtemplate)?$t(a):a,c)}],["log",(a,c)=>{if(isString(a)&&toBoolean(b.logprintall))q(a.replace(/\n$/,""));else if(c=a,isMap(a)&&(c=[a]),isArray(c)){isUnDef(b.logtheme)&&isDef(getEnv("OAFP_LOGTHEME"))&&(b.logtheme=getEnv("OAFP_LOGTHEME"));let d=x(_$(b.logtheme,"logtheme").isString().default(""));d=merge({errorLevel:"RED,BOLD",warnLevel:"YELLOW",
timestamp:"BOLD"},d);c.forEach(h=>{if(isMap(h)){let f=isDef(h["@timestamp"])&&isString(h["@timestamp"])?h["@timestamp"]:__,e=isDef(h.level)?h.level:__;h=isDef(h.message)?h.message:__;let g;isDef(e)&&(0<=e.toLowerCase().indexOf("err")&&(g=d.errorLevel),0<=e.toLowerCase().indexOf("warn")&&(g=d.warnLevel));isDef(f)&&24<f.length&&(f=f.substring(0,23)+"Z");(isDef(h)||isDef(f))&&q(ansiColor(d.timestamp,f)+(isDef(e)?" | "+ansiColor(g,e):"")+" | "+ansiColor(g,h))}})}}],["raw",(a,c)=>{isString(a)?q(a):q(stringify(a))}],
["lines",(a,c)=>{isArray(a)?a.forEach(d=>q(d)):q(a)}],["ini",(a,c)=>{isString(a)||(ow.loadJava(),c=new ow.java.ini,q(c.put(a).save()))}],["toml",(a,c)=>{isUnDef(af.toTOML)&&l(-1,"TOML support not found.");if(isMap(a))q(af.toTOML(a));else if(isArray(a))q(af.toTOML({list:a}));else return __}],["mdyaml",(a,c)=>{isArray(a)?a.forEach((d,h)=>{v(d,merge(c,{__format:"yaml"}));h<a.length-1&&q("---\n")}):v(a,merge(c,{__format:"yaml"}))}],["mdtable",(a,c)=>{isArray(a)&&(ow.loadTemplate(),q(ow.template.md.table(a)))}],
["template",(a,c)=>{isString(a)||(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(b.template)&&isUnDef(b.templatepath)&&l(-1,"For out=template you need to provide a template=someFile.hbs or templatepath=..."),b.templatedata=_$(b.templatedata,"templatedata").isString().default("@"),c=isDef(b.template)?toBoolean(b.templatetmpl)?b.template:io.readFileString(b.template):$path(b.__origr,b.templatepath),q($t(c,$path(a,b.templatedata))))}],
["openmetrics",(a,c)=>{isString(a)?l(-1,"For out=openmetrics input needs to be an array or map."):(ow.loadMetrics(),a=ow.metrics.fromObj2OpenMetrics(a,b.metricsprefix,b.metricstimestamp),a=a.split("\n").map(d=>{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).filter(d=>0<d.length).join("\n"),q(a))}],["pjson",(a,c)=>{c.__format="prettyjson";v(a,c)}],["ndjson",(a,c)=>{isArray(a)?
a.forEach(d=>q(stringify(d,__,""))):isMap(a)?q(stringify(a,__,"")):v(a,c)}],["base64",(a,c)=>{a=isString(a)?a:stringify(a);toBoolean(b.base64gzip)?q(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a))))):q(af.fromBytes2String(af.toBase64Bytes(a)))}],["gb64json",(a,c)=>{a=isString(a)?a:stringify(a);q(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a)))))}],["jwt",(a,c)=>{isMap(a)?(isUnDef(b.jwtsecret)&&isUnDef(b.jwtprivkey)&&l(-1,"For out=jwt you need to provide a jwtsecret or a jwtprivkey"),
ow.loadServer(),isDef(b.jwtprivkey)?(ow.loadJava(),c=new ow.java.cipher,q(ow.server.jwt.sign(c.readKey4File(b.jwtprivkey,!0,b.jwtalg),a))):q(ow.server.jwt.sign(b.jwtsecret,a))):l(-1,"For out=jwt input needs to be a map.")}],["grid",(a,c)=>{isUnDef(b.grid)&&l(-1,"For out=grid you need to provide a grid=...");c=x(_$(b.grid,"grid").isString().$_());isArray(c)&&0<c.length&&isArray(c[0])?(c.forEach((d,h)=>{d.forEach((f,e)=>{if(isUnDef(f.type)||"empty"!=f.type){if(isDef(f.cmd)){var g=$sh(f.cmd).getJson(0);
g=isDef(g)&&isDef(g.stdout)?g.stdout:""}else g=a;if("chart"==f.type||"bar"==f.type)e="_chrt"+(h+1)+"."+(e+1),f.obj=("chart"==f.type?e+" ":"")+K(g,f.obj,e),isUnDef(f.title)&&(f.title="Chart "+e);isDef(f.path)?(f.obj=$path(g,f.path),isUnDef(f.title)&&(f.title=f.path)):isString(g)?f.obj=g:isObject(g)&&"chart"!=f.type&&(f.obj=$path(g,"@"))}else f.obj=""})}),c=ow.format.string.grid(c,__,__," ",!0),q(c)):l(-1,"Invalid grid parameter: '"+stringify(b.grid,__,"")+"'")}],["envs",(a,c)=>{a=isArray(a)?a.map(f=>
isObject(f)?ow.loadObj().flatMap(f,"_"):f):ow.loadObj().flatMap(a,"_");c=f=>0<=String(f).indexOf(" ")?'"'+f+'"':f;isUnDef(b.envscmd)&&(b.envscmd=ow.format.isWindows()?"set":"export");b.envscmd=String(b.envscmd);isUnDef(b.envsprefix)&&(b.envsprefix="_OAFP_");b.envsprefix=String(b.envsprefix);toBoolean(b.envsnoprefix)&&(b.envsprefix="");var d=new Set,h;for(h in a)d.add(b.envscmd+(0<b.envscmd.length?" ":"")+(b.envsprefix+h.replace(/[^a-zA-Z0-9_]/g,"_"))+"="+c(a[h]));q(Array.from(d).join("\n"))}],["cmd",
(a,c)=>{isString(b.outcmd)||l(-1,'For out=cmd you need to provide a outcmd="..."');toBoolean(b.outcmdtmpl)&&(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers());let d=h=>{var f=isString(h)?h:stringify(h,__,"");if(toBoolean(b.outcmdparam))try{var e=$sh(b.outcmd.replace(/([^\\]?){}/g,"$1"+f)).get(0)}catch(g){sprintErr(g)}else e=toBoolean(b.outcmdtmpl)?$sh($t(b.outcmd,h)).get(0):$sh(b.outcmd,f).get(0);toBoolean(b.outcmdnl)?(0<e.stdout.length&&
print(e.stdout),0<e.stderr.length&&printErr(e.stderr)):(0<e.stdout.length&&printnl(e.stdout),0<e.stderr.length&&printErrnl(e.stderr))};isArray(a)?toBoolean(b.outcmdjoin)?d(a):toBoolean(b.outcmdseq)?a.forEach(d):isDef(pForEach)?pForEach(a,h=>{d(h)}):parallel4Array(a,h=>{d(h)}):(isString(a),d(a))}],["chart",(a,c)=>{isUnDef(b.chart)&&l(-1,'For out=chart you need to provide a chart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&l(-1,"output=chart is not supported in this version of OpenAF");
a=K(a,b.chart);0<a.length&&(a=printChart("oafp "+a),toBoolean(b.chartcls)&&cls(),q(a))}],["schart",(a,c)=>{isUnDef(b.schart)&&l(-1,'For out=schart you need to provide a schart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&l(-1,"Output=schart is not supported in this version of OpenAF");a=K(a,b.schart,"_oafp_sfn_","soafp");0<a.length&&q(printChart("soafp "+a))}],["ch",(a,c)=>{isUnDef(b.ch)&&l(-1,'For out=ch you need to provide a ch="(type: ...)"');isUnDef(b.chkey)&&l(-1,'For out=ch you need to provide a chkey="key1, key2"');
a=isMap(a)?[a]:a;b.ch=x(b.ch);isMap(b.ch)?(isUnDef(b.ch.type)&&l(-1,"ch.type is not defined."),isDef(b.ch.lib)&&loadLib(b.ch.lib),"remote"==b.ch.type?$ch("oafp::outdata").createRemote(b.ch.url):$ch("oafp::outdata").create(b.ch.type,isDef($sec().procMap)?$sec().procMap(b.ch.options):b.ch.options),toBoolean(b.chunset)?$ch("oafp::outdata").unsetAll(b.chkey.split(",").map(d=>d.trim()),a):$ch("oafp::outdata").setAll(b.chkey.split(",").map(d=>d.trim()),a),$ch("oafp::outdata").destroy()):l(-1,"Invalid ch parameter")}],
["db",(a,c)=>{(!isArray(a)||1>a.length)&&l(-1,"db is only supported for filled arrays/lists");b.dbtable=_$(b.dbtable,"outdbtable").isString().default("data");b.dbnocreate=toBoolean(_$(b.dbnocreate,"outdbnocreate").isString().default("false"));b.dbicase=toBoolean(_$(b.dbicase,"outdbicase").isString().default("false"));b.dbbatchsize=_$(b.dbbatchsize,"dbbatchsize").isNumber().default(__);ow.loadObj();try{isString(b.dbjdbc)||l(-1,"dbjdbc URL is not defined.");isDef(b.dblib)&&loadLib("jdbc-"+b.dblib+".js");
var d=new DB(b.dbjdbc,b.dbuser,b.dbpass,b.dbtimeout);if(!b.dbnocreate)try{var h=ow.obj.fromObj2DBTableCreate(b.dbtable,a,__,!b.dbicase);d.u(h);d.commit()}catch(n){d.rollback(),l(-1,"Error creating table: "+n)}var f=Object.keys(ow.obj.flatMap(a[0]));var e=b.dbicase?f.join(",").toUpperCase():'"'+f.join('", "')+'"';let k="";var g=a.map(n=>{var r=ow.obj.flatMap(n);n=[];for(var u in f)n.push(r[f[u]]);u=f.map(p=>String(r[p]));n="INSERT INTO "+(b.dbicase?b.dbtable:'"'+b.dbtable+'"')+" ("+e+") VALUES ("+
u.map(p=>"?").join(", ")+")";n.length>k.length&&(k=String(n));return u});d.usArray(k,g,b.dbbatchsize)}catch(k){isDef(d)&&d.rollback(),printErr(k),l(-1,"Error connecting to the database: "+k)}finally{isDef(d)&&(d.commit(),d.close())}}],["sql",(a,c)=>{(!isArray(a)||1>a.length)&&l(-1,"sql is only supported for filled arrays/lists");b.sqltable=_$(b.sqltable,"sqltable").isString().default("data");b.sqlicase=toBoolean(_$(b.sqlicase,"sqlicase").isString().default("false"));b.sqlnocreate=toBoolean(_$(b.sqlnocreate,
"sqlnocreate").isString().default("false"));ow.loadObj();b.sqlnocreate||q(ow.obj.fromObj2DBTableCreate(b.sqltable,a,__,!b.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(a[0]));var h=b.sqlicase?d.join(",").toUpperCase():'"'+d.join('", "')+'"';q(a.map(f=>{var e=ow.obj.flatMap(f);f=[];for(var g in d)f.push(e[d[g]]);g=d.map(k=>{k=e[k];isString(k)&&(k="'"+k.replace(/'/g,"''")+"'");isNull(k)&&(k="null");return k});return"INSERT INTO "+(b.sqlicase?b.sqltable:'"'+b.sqltable+'"')+" ("+h+") VALUES ("+g.join(",")+
");"}).join("\n"))}],["xml",(a,c)=>{q(af.fromObj2XML(a,!0,b.outxmlprefix))}],["pxml",(a,c)=>{a=af.fromObj2XML(a,!0,b.pxmlprefix);q('<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n'+new XMLList(a))}],["xls",(a,c)=>{if(!isString(a)){try{includeOPack("plugin-XLS")}catch(e){l(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");if(isMap(a)){ow.loadObj();var d=ow.obj.flatMap(a);var h=Object.keys(d).map(e=>({key:e,value:d[e]}))}isArray(a)&&
(h=a);traverse(h,(e,g,k,n)=>{isString(g)&&g.startsWith("=")&&(n[e]="'"+g)});a=!1;c=b.xlsfile;isUnDef(b.xlsfile)&&(a=!0,b.xlsfile=io.createTempFile("oafp",".xlsx"));c=new XLS(isDef(c)&&io.fileExists(c)?c:__);var f=c.getSheet(_$(b.xlssheet,"xlssheet").isString().default("data"));b.xlsformat=_$(b.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');b.xlsformat=x(b.xlsformat);ow.format.xls.setTable(c,f,"A",1,h,__,b.xlsformat);c.writeFile(b.xlsfile);
c.close();b.xlsopenwait=_$(b.xlsopenwait,"xlsopenwait").isNumber().default(5E3);b.xlsopen=toBoolean(_$(b.xlsopen,"xlsopen").isString().default("true"));b.xlsopen&&(ow.format.isWindows()?($sh("start "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)))}}]]),G=new Map([["?",(a,c)=>{a=Array.from(G.keys()).filter(d=>"?"!=d).sort();m(a,c)}],["pm",(a,c)=>{t();isDef(__pm._map)&&(a=__pm._map);isDef(__pm._list)&&(a=
__pm._list);m(a,c)}],["key",(a,c)=>{t();isString(a)||l(-1,"key is only supported with a string.");m($get(a),c)}],["jsonschema",(a,c)=>{t();a=jsonParse(a,__,__,!0);isMap(a)||l(-1,"jsonschema is only supported with a map.");ow.loadObj();a=ow.obj.schemaSampleGenerator(a);m(a,c)}],["yaml",(a,c)=>{t();a=af.fromYAML(a);m(a,c)}],["xml",(a,c)=>{t();b.xmlignored=_$(b.xmlignored,"xmlignored").isString().default(__);b.xmlprefix=_$(b.xmlprefix,"xmlprefix").isString().default(__);b.xmlfiltertag=toBoolean(_$(b.xmlfiltertag,
"xmlfiltertag").isString().default(__));0<=a.indexOf("<?xml")&&(a=a.substring(a.indexOf("?>")+2).trim());0<=a.indexOf("<!DOCTYPE")&&(a=a.substring(a.indexOf(">")+1).trim());a=af.fromXML2Obj(a,b.xmlignored,b.xmlprefix,!b.xmlfiltertag);m(a,c)}],["lines",(a,c)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));t();let d=__,h=[];b.linesvisualheadsep=toBoolean(_$(b.linesvisualheadsep,"linesvisualheadsep").isString().default(__));let f=!1,e=!1;isUnDef(b.linesvisualsepre)&&
(b.linesvisualsepre=b.linesvisualheadsep?"\\s+":" \\s+");let g=n=>{n=n.split("\n").map(u=>{let p="",A=0;for(let y=0;y<u.length;y++)if("\t"===u[y]){let E=8-A%8;p+=" ".repeat(E);A+=E}else p+=u[y],A++;return p}).join("\n");if(f&&e){var r={};h.forEach((u,p)=>{r[d[p]]=n.substring(u,p+1<h.length?h[p+1]-1:__).trim()});return r}f||(d=[]);n.split(new RegExp(b.linesvisualsepre)).reduce((u,p)=>{if(0!=p.trim().length){f||d.push(p);if(!b.linesvisualheadsep&&!f||f&&b.linesvisualheadsep&&!e)p=n.substring(u).match(new RegExp(ow.format.escapeRE(p)+
"("+b.linesvisualsepre+"|$)")),!isNull(p)&&isDef(p.index)?(h.push(u+p.index),u+=p[0].length):l(-1,"Problem with linesvisual to find header positioning.");return u}},0);f?b.linesvisualheadsep&&!e&&(e=!0):(f=!0,b.linesvisualheadsep||(e=!0));return __};if(b.linesjoin)if(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=C(b.cmd,!0)),a=a.split(/\r?\n/),toBoolean(b.linesvisual)){var k=[];a.forEach(n=>{0!=n.length&&(n=g(n),isDef(n)&&k.push(n))});m(k,c)}else m(a,c);else a=isDef(b.file)&&
isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,n=>{toBoolean(b.linesvisual)?(n=g(n),isDef(n)&&m(n,clone(c),!0)):m(n,clone(c),!0)}),a.close()}],["ndjson",(a,c)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));t();global.__ndjsonbuf=__;var d=(f,e)=>{isUnDef(global.__ndjsonbuf)&&0!=f.length&&f.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=
f.length&&!f.trim().endsWith("}")){global.__ndjsonbuf+=f.trim();return}0<global.__ndjsonbuf.length&&(f=global.__ndjsonbuf+f,global.__ndjsonbuf=__)}0==f.length||0<f.length&&"{"!=f.trim().substring(0,1)?(e(f),global.__ndjsonbuf=__):e(f)},h=f=>{var e=[];f.split("\n").filter(g=>0<g.length).forEach(g=>d(g,k=>e.push(jsonParse(k,__,__,toBoolean(b.ndjsonfilter)))));return e};b.ndjsonjoin?(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=C(b.cmd,!0)),m(h(a),c)):(a=isDef(b.file)&&
isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,f=>{d(f,e=>m(jsonParse(e,__,__,!0),clone(c),!0))}),a.close())}],["md",(a,c)=>{t();__conConsole=__ansiColorFlag=!0;isUnDef(b.format)&&isUnDef(c.__format)&&(b.format="md",c.__format="md");m(a,c)}],["mdtable",(a,c)=>{t();ow.loadTemplate();if(toBoolean(b.inmdtablejoin)){var d=new Set,h=new Set,f=()=>{0<h.size&&(d.add(ow.template.md.fromTable(Array.from(h).join("\n"))),
h.clear())};a.split("\n").forEach(e=>{/^\|.+\|$/.test(e.trim())?h.add(e.trim()):f()});f();m(Array.from(d),c)}else h=ow.template.md.fromTable(a),m(h,c)}],["ask",(a,c)=>{var d=[];a=af.fromJSSLON(a);isDef(askStruct)&&isArray(a)&&(__conConsole=!0,__con.getTerminal().settings.set("-icanon min 1 -echo"),d=askStruct(a),__con.getTerminal().settings.set("icanon echo"),print(""));m(d,c)}],["raw",(a,c)=>{t();m(a,c)}],["ini",(a,c)=>{t();ow.loadJava();var d=new ow.java.ini;a=isDef(b.file)?d.loadFile(b.file).get():
d.load(a).get();m(a,c)}],["jwt",(a,c)=>{ow.loadServer();if(toBoolean(b.injwtverify)){isUnDef(b.injwtsecret)&&isUnDef(b.injwtpubkey)&&l(-1,"injwtsecret or injwtpubkey is not defined.");try{if(isDef(b.injwtpubkey)){ow.loadJava();var d=new ow.java.cipher;ow.server.jwt.verify(d.readKey4File(b.injwtpubkey,!1,b.injwtalg),a.trim())}else ow.server.jwt.verify(b.injwtsecret,a.trim());var h=!0}catch(f){isDef(f.javaException)&&printErr(f.javaException.getMessage()),h=!1}}a=ow.server.jwt.decode(a);isDef(h)&&(a.__verified=
h);!toBoolean(b.injwtraw)&&isDef(a)&&isMap(a.claims)&&(isDef(a.claims.exp)&&(a.claims.exp=new Date(1E3*a.claims.exp)),isDef(a.claims.iat)&&(a.claims.iat=new Date(1E3*a.claims.iat)),isDef(a.claims.nbf)&&(a.claims.nbf=new Date(1E3*a.claims.nbf)));m(a,c)}],["sql",(a,c)=>{isString(a)?toBoolean(b.sqlparse)?(isUnDef(ow.format.sqlFormat)&&l(-1,"SQL parse not available."),m(ow.format.sqlFormat(a,isDef(b.sqloptions)?x(b.sqloptions):__),c)):m(af.fromSQL(a).ast,c):m(a,c)}],["openmetrics",(a,c)=>{isString(a)?
(ow.loadMetrics(),m(ow.metrics.fromOpenMetrics2Array(a),c)):m(a,c)}],["ch",(a,c)=>{t();isUnDef(b.inch)&&l(-1,"inch is not defined.");b.inch=x(b.inch);if(isMap(b.inch)){isUnDef(b.inch.type)&&l(-1,"inch.type is not defined.");isDef(b.inch.lib)&&loadLib(b.inch.lib);"remote"==b.inch.type?$ch("oafp::indata").createRemote(b.inch.url):$ch("oafp::indata").create(b.inch.type,isDef($sec().procMap)?$sec().procMap(b.inch.options):b.inch.options);var d=x(a);toBoolean(b.inchall)||0==a.trim().length?m($ch("oafp::indata").getAll(isMap(d)?
d:__),c):m($ch("oafp::indata").get(isMap(d)?d:__),c);$ch("oafp::indata").destroy()}else l(-1,"inch is not a valid map.")}],["db",(a,c)=>{if(isString(a)){t();isString(b.indbjdbc)||l(-1,"indbjdbc URL is not defined.");try{isDef(b.indblib)&&loadLib("jdbc-"+b.indblib+".js");var d=new DB(b.indbjdbc,b.indbuser,b.indbpass,b.indbtimeout);d.convertDates(!0);if(toBoolean(b.indbexec)){var h=d.u(a);m({affectedRows:h},c);d.commit()}else h=d.q(a),isMap(h)&&isArray(h.results)?m(h.results,c):l(-1,"Invalid DB result: "+
stringify(h))}catch(f){printErr(f.message),isDef(d)&&d.rollback(),l(-1,"Error executing SQL: "+f.message)}finally{isDef(d)&&(d.rollback(),d.close())}}else l(-1,"db is only supported with a SQL string.")}],["xls",(a,c)=>{t();try{includeOPack("plugin-XLS")}catch(k){l(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");var d=a=!1;b.inxlsdesc=toBoolean(_$(b.inxlsdesc,"inxlsdesc").isString().default(!1));b.inxlsdesc&&(isUnDef(b.inxlssheet)?
d=!0:a=!0);b.inxlssheet=_$(b.inxlssheet||b.xlssheet,"xlssheet").isString().default(0);b.inxlsevalformulas=toBoolean(_$(b.inxlsevalformulas||b.xlsevalformulas,"xlsevalformulas").isString().default(!0));b.inxlscol=_$(b.inxlscol||b.xlscol,"xlscol").isString().default("A");b.inxlsrow=_$(b.inxlsrow||b.xlsrow,"xlsrow").isString().default(1);if(isDef(b.file)||isDef(b.cmd)){var h=new XLS(isDef(b.cmd)?C(b.cmd):b.file);if(d)g=h.getSheetNames();else if(d=h.getSheet(b.inxlssheet),a){var f=h.getCellValues(d,!1),
e=[];Object.keys(f).forEach(k=>{k=Object.keys(f[k]);k.length>e.length&&(e=k)});g=[];Object.keys(f).map(k=>{var n={" ":k};e.forEach(r=>n[r]=isNull(f[k][r])||"BLANK"==f[k][r].type?"___":"###");g.push(n)});isUnDef(b.format)&&isUnDef(c.__format)&&(b.format="ctable",c.__format="ctable")}else{var g=h.getTable(d,b.inxlsevalformulas,b.inxlscol,b.inxlsrow);isDef(g)&&isMap(g)&&(g=g.table)}h.close();m(g,c)}else l(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],
["csv",(a,c)=>{t();isUnDef(b.inputcsv)&&isDef(b.incsv)&&(b.inputcsv=b.incsv);if(isDef(b.file)||isDef(b.cmd)){var d=isDef(b.cmd)?af.fromBytes2InputStream(C(b.cmd)):io.readFileStream(b.file);a=$csv(b.inputcsv).fromInStream(d).toOutArray();d.close()}else a=$csv(b.inputcsv).fromInString(a).toOutArray();m(a,c)}],["javagc",(a,c)=>{isBoolean(b.javagcjoin)||(b.javagcjoin=toBoolean(_$(b.javagcjoin,"javagcjoin").isString().default(__)));var d=h=>{try{let f=[/([^ ]+) (\d+\.\d+): \[(GC) \((.*?)\)(.+?)\[PSYoungGen: (\d+K)->(\d+K)\((.*?)\)\] (\d+K)->(\d+K)\((.*?)\), (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/s,
/([^ ]+) (\d+\.\d+): \[(GC) \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\((.*?)\)\] (\d+K)->(\d+K)\((.*?)\), (\d+\.\d+) secs\]/,/([^ ]+) (\d+\.\d+): \[(Full GC) \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\((.*?)\)\] \[ParOldGen: (\d+K)->(\d+K)\((.*?)\)\] (\d+K)->(\d+K)\((.*?)\), \[Metaspace: (\d+K)->(\d+K)\((.*?)\)\], (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/,/([^ ]+) (\d+\.\d+): \[(Full GC) \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\((.*?)\)\] \[ParOldGen: (\d+K)->(\d+K)\((.*?)\)\] (\d+K)->(\d+K)\((.*?)\), \[Metaspace: (\d+K)->(\d+K)\((.*?)\)\], (\d+\.\d+) secs\]/,
/([^ ]+) (\d+\.\d+): \[(GC) \((.*?)\) \[PSYoungGen: (\d+K)->(\d+K)\((.*?)\)\] (\d+K)->(\d+K)\((.*?)\), (\d+\.\d+) secs\] \[Times: user=(\d+\.\d+) sys=(\d+\.\d+), real=(\d+\.\d+) secs\]/,/^\[(.+)\]\s+GC\((\d+)\)\s*(.*?)\s*(\d+[GMK])->(\d+[GMK])\((\d+[GMK])\)\s*(\d+\.\d+)ms/,/^\[(.+)\]\s+GC\((\d+)\)\s*(.*?)\s*Metaspace:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)\s*NonClass:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)\s*Class:\s*(\d+[GMK])\((\d+[GMK])\)->(\d+[GMK])\((\d+[GMK])\)/,
/^\[(.+)\]\s+GC\((\d+)\)\s*(Allocation Failure)\s*(.*?)\s+(\d+[KMGT])->(\d+[KMGT])\((\d+[KMGT])\)\s+(\d+\.\d+)ms/];for(let e=0;e<f.length;e++){let g=h.match(f[e]);if(g){let k={};if(h.startsWith("["))g[1].split("][").forEach(n=>{n.match(/^\d+\.\d+s$/)?k.sinceStart=parseFloat(n.replace(/s$/,"")):n.match(/\d{4}-\d{2}-\d{2}T/)&&(k.timestamp=ow.format.toDate(n,"yyyy-MM-dd'T'HH:mm:ss.SSSZ"))}),k.gcId=parseInt(g[2]),k.gcType=g[3].trim(),""==k.gcType&&(k.gcType="none"),k.durationSecs=parseFloat(g[g.length-
1])/1E3,5===e?(k.heapBeforeGC=ow.format.fromBytesAbbreviation(g[4]+"B"),k.heapAfterGC=ow.format.fromBytesAbbreviation(g[5]+"B"),k.heapTotal=ow.format.fromBytesAbbreviation(g[6]+"B")):5<e&&(6==e?(k.metaUsedBeforeGC=ow.format.fromBytesAbbreviation(g[4]+"B"),k.metaTotalBeforeGC=ow.format.fromBytesAbbreviation(g[5]+"B"),k.metaUsedAfterGC=ow.format.fromBytesAbbreviation(g[6]+"B"),k.metaTotalAfterGC=ow.format.fromBytesAbbreviation(g[7]+"B"),k.nonClassUsedBeforeGC=ow.format.fromBytesAbbreviation(g[8]+"B"),
k.nonClassTotalBeforeGC=ow.format.fromBytesAbbreviation(g[9]+"B"),k.nonClassUsedAfterGC=ow.format.fromBytesAbbreviation(g[10]+"B"),k.nonClassTotalAfterGC=ow.format.fromBytesAbbreviation(g[11]+"B"),k.classUsedBeforeGC=ow.format.fromBytesAbbreviation(g[12]+"B"),k.classTotalBeforeGC=ow.format.fromBytesAbbreviation(g[13]+"B"),k.classUsedAfterGC=ow.format.fromBytesAbbreviation(g[14]+"B"),k.classTotalAfterGC=ow.format.fromBytesAbbreviation(g[15]+"B")):(k.heapBeforeGC=ow.format.fromBytesAbbreviation(g[4]+
"B"),k.heapAfterGC=ow.format.fromBytesAbbreviation(g[5]+"B"),k.heapTotal=ow.format.fromBytesAbbreviation(g[6]+"B")));else if(k.timestamp=ow.format.toDate(g[1],"yyyy-MM-dd'T'HH:mm:ss.SSSZ"),k.sinceStart=parseFloat(g[2]),k.gcType=g[3]+" "+g[4],4>=e){h=5;k.PSYoungGenBeforeGC=ow.format.fromBytesAbbreviation(g[h++]+"B");k.PSYoungGenAfterGC=ow.format.fromBytesAbbreviation(g[h++]+"B");k.PSYoungGenTotal=ow.format.fromBytesAbbreviation(g[h++]+"B");if(2==e||3==e)k.ParOldGenBeforeGC=ow.format.fromBytesAbbreviation(g[h++]+
"B"),k.ParOldGenAfterGC=ow.format.fromBytesAbbreviation(g[h++]+"B"),k.ParOldGenTotal=ow.format.fromBytesAbbreviation(g[h++]+"B");k.heapBeforeGC=ow.format.fromBytesAbbreviation(g[h++]+"B");k.heapAfterGC=ow.format.fromBytesAbbreviation(g[h++]+"B");k.heapTotal=ow.format.fromBytesAbbreviation(g[h++]+"B");if(2==e||3==e)k.metaBeforeGC=ow.format.fromBytesAbbreviation(g[h++]+"B"),k.metaAfterGC=ow.format.fromBytesAbbreviation(g[h++]+"B"),k.metaTotal=ow.format.fromBytesAbbreviation(g[h++]+"B");k.durationSecs=
parseFloat(g[h++]);if(0==e||2==e||4==e)k.userTime=parseFloat(g[h++]),k.sysTime=parseFloat(g[h++]),k.realTime=parseFloat(g[h++])}return k}}}catch(f){printErr(f),l(-2,"Error parsing Java GC log: "+f)}};ow.loadFormat();t();if(isString(a)){a=a.split("\n");let h=/^(\[\d+|\d{4}-\d{2}-\d{2}T)/,f=[],e=[];for(let g of a)h.test(g)?(0<e.length&&f.push(e.join("\n")),e=[g]):e.push(g);0<e.length&&f.push(e.join("\n"));d=f.map(d).filter(g=>isMap(g));b.javagcjoin?m(d,c,!0):d.forEach(g=>m(g,c,!0))}else l(-1,"javagc is only supported with a string input.")}],
["hsperf",(a,c)=>{if(isDef(b.file)||isDef(b.cmd)){t();ow.loadJava();var d=isDef(b.cmd)?ow.java.parseHSPerf(C(b.cmd)):ow.java.parseHSPerf(b.file);d.__ts=new Date;var h=0,f=0;d.sun.gc.generation.forEach(e=>{e.space.forEach(g=>{f+=Number(g.used);h=isNumber(g.capacity)?h+Number(g.capacity):h;d.sun.gc["__percUsed_"+g.name]=100*g.used/g.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;
a=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);d.sun.gc.__ygc=isDef(a)?Number(a.invocations):0;d.sun.gc.__ygct=isDef(a)?Number(a.time/1E9):0;a=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name","").at(0);d.sun.gc.__fgc=isDef(a)?Number(a.invocations):0;d.sun.gc.__fgct=isDef(a)?Number(a.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/1E9;d.java.__mem={total:h,used:f,free:h-f,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,
metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-d.sun.gc.metaspace.used};m(d,c)}else l(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["rawhex",(a,c)=>{b.inrawhexline=_$(b.inrawhexline,"inrawhexline").isNumber().default(__);t();a=isDef(b.file)||isDef(b.cmd)?isDef(b.cmd)?C(b.cmd):io.readFileBytes(b.file):af.fromString2Bytes(a);a=ow.format.string.toHexArray(a,b.inrawhexline);a.forEach(d=>{d.characters=d.characters.replace(/[\x00-\x1F\x80-\xFF]/g,".")});m(a,
c)}],["base64",(a,c)=>{t();a=toBoolean(b.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(a,!0))):af.fromBytes2String(af.fromBase64(a));m(a,c)}],["gb64json",(a,c)=>{t();a=af.fromBytes2String(io.gunzip(af.fromBase64(a,!0)));m(a,c)}],["oaf",(a,c)=>{isString(a)||l(-1,"oaf is only supported with a string.");t();a=af.eval(a);m(a,c)}],["oafp",(a,c)=>{a=x(a);var d="_oafp_key_"+genUUID();isMap(a)?(a.out="key",a.__key=d,a.__inception=!0,oafp(a),a=$get(d),$unset(d),m(a,c)):isArray(a)?($set(d,!0),a=pForEach(a,
(h,f)=>{f=d+"_"+String(f);h.out="key";h.__key=f;h.__inception=!0;try{oafp(h);var e=$get(f);$unset(f)}catch(g){sprintErr(g)}finally{return e}},__,isDef(b.inoafpseq)?toBoolean(b.inoafpseq):__),m(a,c)):l(-1,"oafp input data needs to be a map or an array.")}],["sh",(a,c)=>{t();a=x(a);if(isString(a))a=$sh(a).get(0);else{isMap(a)||l(-1,"For in=sh the input data needs to a string or a map");var d=$sh();isUnDef(a.cmd)&&l(-1,"For in=sh the input data needs to a string or a map with the a 'cmd'");d=d.sh(a.cmd);
isDef(a.envs)&&(d=d.envs(a.envs,a.envsall));isDef(a.prefix)&&(d=d.prefix(a.prefix));isDef(a.pwd)&&(d=d.pwd(a.pwd));switch(b.inshformat){case "raw":a=d.get(0);break;case "yaml":a=d.getYaml(0);break;default:a=d.getJson(0)}}m(a,c)}],["llm",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&l(-1,"llmoptions not defined and "+b.llmenv+" not found.");t();var d=$llm(O(isDef(b.llmoptions)?
x(b.llmoptions):$sec("system","envs").get(b.llmenv)));isDef(b.llmconversation)&&io.fileExists(b.llmconversation)&&d.getGPT().setConversation(io.readFileJSON(b.llmconversation));let h;isString(b.llmimage)&&(b.llmimage.toLowerCase().match(/^https?:\/\//)?h=af.fromBytes2String(af.toBase64Bytes(af.fromInputStream2Bytes($rest().get2Stream(b.llmimage)))):io.fileExists(b.llmimage)&&(h=af.fromBytes2String(af.toBase64Bytes(io.readFileBytes(b.llmimage)))));a="md"==b.output||"mdtable"==b.output||"raw"==b.output?
isDef(h)?d.promptImage(a,h):d.prompt(a):isDef(h)?d.promptImage(a,h,__,__,__,__,!0):d.promptJSON(a);isDef(b.llmconversation)&&(d=d.getGPT().getConversation(),d.push({role:"assistant",content:stringify(a,__,"")}),io.writeFileJSON(b.llmconversation,d,""));m(jsonParse(a,__,__,isString(a)),c)}],["llmmodels",(a,c)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&l(-1,"llmoptions not defined and "+
b.llmenv+" not found.");t();a=$llm(O(isDef(b.llmoptions)?x(b.llmoptions):$sec("system","envs").get(b.llmenv)));isUnDef(a.getModels)&&l(-1,"OpenAF support for llm model listing API not found.");m(a.getModels(),c)}],["ls",(a,c)=>{t();if(isString(a)){var d=toBoolean(b.lsposix);isDef(b.file)&&(a=b.file);var h=io.fileExists(a),f;h&&(f=io.fileInfo(a));if(h&&f.isFile)switch(isDef(b.lsext)?b.lsext:f.filename.replace(/^.*\./,"").toLowerCase()){case "tgz":case "gz":a=io.listFilesTAR(a,!0);break;case "tar":a=
io.listFilesTAR(a);break;default:plugin("ZIP"),a=$m4a((new ZIP).list(a))}else a=toBoolean(b.lsrecursive)?listFilesRecursive(a,d):io.listFiles(a,d).files;m(a,c)}else l(-1,"ls is only supported with a string.")}],["toml",(a,c)=>{t();isUnDef(af.fromTOML)&&l(-1,"TOML support not found.");m(af.fromTOML(a),c)}],["slon",(a,c)=>{t();m(af.fromSLON(a),c)}],["json",(a,c)=>{t();m(jsonParse(a,__,__,isString(a)),c)}]]),D={};isString(b.libs)&&(b.libs=b.libs.split(",").map(a=>a.trim()).filter(a=>0<a.length));isDef(__flags.OAFP)&&
isArray(__flags.OAFP.libs)&&isArray(b.libs)?b.libs=__flags.OAFP.libs.concat(b.libs):b.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(b.libs)&&b.libs.forEach(a=>{try{if(a.startsWith("@"))if(/^@([^\/]+)\/(.+)\.js$/.test(a)){var c=a.match(/^@([^\/]+)\/(.+)\.js$/),d=getOPackPath(c[1])+"/"+c[2]+".js";io.fileExists(d)?loadLib(d):l(-1,"ERROR: Library '"+a+"' not found.")}else l(-1,"ERROR: Library '"+a+"' does not have the correct format (@oPack/library.js).");else{var h=require("oafp_"+a+".js");if(isDef(h.oafplib)){var f=
h.oafplib(clone(b),m,v,{_runCmd2Bytes:C,_fromJSSLON:x,_msg:"(processing data...)",_showTmpMsg:t,_clearTmpMsg:R,_chartPathParse:K,_exit:l,_print:q,_o$o:v});isMap(f)&&(isArray(f.fileExtensions)&&f.fileExtensions.forEach(e=>{var g=e.ext;e=e.type;L.has(g)?b.debug&&printErr("WARN: Extension '"+g+"' already exists."):L.set(g,e)}),isArray(f.fileExtensionsNoMem)&&f.fileExtensionsNoMem.forEach(e=>{e=e.ext;P.has(e)?b.debug&&printErr("WARN: Extension '"+e+"' already exists."):P.add(e)}),isArray(f.input)&&f.input.forEach(e=>
{var g=e.type;e=e.fn;G.has(g)?b.debug&&printErr("WARN: Input type '"+g+"' already exists."):G.set(g,e)}),isArray(f.inputLine)&&f.inputLine.forEach(e=>{var g=e.type;e=e.fn;isUnDef(_inputLinesFns[g])?Q[g]=e:b.debug&&printErr("WARN: Input type '"+g+"' already exists.")}),isArray(f.transform)&&f.transform.forEach(e=>{var g=e.type;e=e.fn;isUnDef(F[g])?F[g]=e:b.debug&&printErr("WARN: Transform '"+g+"' already exists.")}),isArray(f.output)&&f.output.forEach(e=>{var g=e.type;e=e.fn;H.has(g)?b.debug&&printErr("WARN: Output type '"+
g+"' already exists."):H.set(g,e)}),isString(f.help)&&(D[a.toLowerCase()]=f.help))}else printErr("WARN: Library '"+a+"' does not have oafplib.")}}catch(e){printErr("WARN: Library '"+a+"' error: "+e)}});(""==b["-h"]||isString(b.help)&&0<b.help.length)&&z();b.format=_$(b.format,"format").isString().default(__);__initializeCon();z=!String(java.lang.System.getProperty("os.name")).match(/Windows/);I=getEnv("OAFP_RESET");var T=getEnv("OAFP_CODESET");isDef(I)&&(z=toBoolean(I)?!1:!0);z&&isDef(__con)&&__con.getTerminal().settings.set("sane");
if(isDef(b.secKey)){toBoolean(b.secEnv)&&(b.secRepo="system",b.secBucket="envs");b.secRepo=_$(b.secRepo,"secRepo").isString().default(getEnv("OAFP_SECREPO"));b.secBucket=_$(b.secBucket,"secBucket").isString().default(getEnv("OAFP_SECBUCKET"));b.secPass=_$(b.secPass,"secPass").isString().default(getEnv("OAFP_SECPASS"));b.secMainPass=_$(b.secMainPass,"secMainPass").isString().default(getEnv("OAFP_SECMAINPASS"));b.secFile=_$(b.secFile,"secFile").isString().default(getEnv("OAFP_SECFILE"));let a=$sec(b.secRepo,
b.secBucket,b.secPass,b.secMainPass,b.secFile).get(secKey);isDef(a)&&Object.keys(a).forEach(c=>b[c]=a[c])}var B={__format:b.format,__from:b.from,__ifrom:b.ifrom,__isql:b.isql,__sql:b.sql,__path:b.path,__opath:b.opath,__csv:b.csv,__pause:b.pause,__key:b.__key};isDef(b.inputcsv)&&(b.inputcsv=x(b.inputcsv));isDef(b.incsv)&&(b.incsv=x(b.incsv));isDef(b.csv)&&(b.csv=x(b.csv));var U=!1;if(""==b["-v"]||toBoolean(b.version))U=!0,S();if(""==b["-examples"]||isString(b.examples)&&0<b.examples.length)b.url="https://ojob.io/oafp-examples.yaml",
b.in="yaml",isString(b.examples)&&0<b.examples.length?("?"!=b.examples.trim()&&(B.__format="template"),B.__path="data",b.templatepath="tmpl",0<b.examples.indexOf("::")?(z=b.examples.split("::").filter(a=>0<a.length),B.__sql=1==z.length?"select * where c like '"+z[0]+"'":"select * where c like '"+z[0]+"' and s like '"+z[1]+"'"):"?"==b.examples.trim()?(B.__path="data.sort(map(&concat(c,concat('::',s)),[]))",b.removedups=!0):B.__sql="select * where d like '%"+b.examples+"%' or s like '%"+b.examples+
"%' or c like '%"+b.examples+"%'"):(B.__path="data[].{category:c,subCategory:s,description:d}",B.__from="sort(category,subCategory,description)",B.__format="ctable"),delete b["-examples"];var w="",M=!1;isDef(b.outfile)&&("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"===typeof global.__oafp_streams[b.outfile]&&(global.__oafp_streams[b.outfile]={s:io.writeFileStream(b.outfile,toBoolean(b.outfileappend))}));isString(b.chs)&&(z=af.fromJSSLON(b.chs),isArray(z)||(z=[z]),
z.forEach(a=>{isMap(a)?isString(a.name)&&isString(a.type)?$ch(a.name).create(a.type,a.options):l(-1,"ERROR: chs must have a name and a type."):l(-1,"ERROR: chs must be an object or array of objects with name and a type")}));z=()=>{if(U)w=S();else if(b.jsonprefix=_$(b.jsonprefix,"jsonprefix").isString().default(__),b.jsondesc=toBoolean(_$(b.jsondesc,"jsondesc").default("false")),isDef(b.insecure)&&toBoolean(b.insecure)&&ow.loadJava().setIgnoreSSLDomains(),isDef(b.file)){if(0>b.file.indexOf("::")&&
!io.fileExists(b.file)&&l(-1,"ERROR: File not found: '"+b.file+"'"),!P.has(b.type))if("json"==b.type||isUnDef(b.type))if(b.jsondesc){var a=new Set;io.readStreamJSON(b.file,d=>{d=d.substring(2);isDef(b.jsonprefix)?d.startsWith(b.jsonprefix)&&a.add(d):a.add(d);return!1});w=stringify(Array.from(a),__,"")}else if(isDef(b.jsonprefix)){var c=io.readStreamJSON(b.file,d=>d.substring(2).startsWith(b.jsonprefix));w=stringify(c,__,"")}else w=io.readFileString(b.file,T),toBoolean(b._shebang)&&(w=w.replace(/^#!.*\n/,
""));else w=io.readFileString(b.file,T),toBoolean(b._shebang)&&(w=w.replace(/^#!.*\n/,""))}else if(b.jsondesc&&l(-1,"ERROR: jsondesc only available for file input."),b.jsonprefix&&l(-1,"ERROR: jsonprefix only available for file input."),isDef(b.cmd))w=C(b.cmd,!0);else if(isString(b.data))w=b.data;else if(isDef(b.url)){b.urlmethod=_$(b.urlmethod,"urlmethod").isString().default("GET");c=x(_$(b.urlparams).isString().default("{}"));let d;isDef(b.urldata)&&(d=x(b.urldata));switch(b.urlmethod.toLowerCase()){case "post":w=
$rest(c).post(b.url,d);break;case "put":w=$rest(c).put(b.url,d);break;case "delete":w=$rest(c).delete(b.url,d);break;case "head":w=$rest(c).head(b.url,d);break;default:w=$rest(c).get(b.url)}isObject(w)&&(w=stringify(w,__,""))}else"pm"!=b.input&&(w=[],io.pipeLn(d=>{try{isDef(Q[b.type])?Q[b.type](N(d),clone(B))&&w.push(d):w.push(d)}catch(h){printErr("ERROR: "+h)}return!1}),w=w.join("\n"));M||(isUnDef(b.type)&&(isDef(b.file)&&(c=b.file.substring(b.file.lastIndexOf(".")),L.has(c)&&(b.type=L.get(c))),
isUnDef(b.type)&&(c=w.trim(),c.startsWith("{")||c.startsWith("[")?b.type="json":c.startsWith("(")?b.type="slon":c.startsWith("<")?b.type="xml":isString(c)&&0<c.length?1<c.substring(0,c.indexOf("\n")).split(",").length?b.type="csv":c.substring(0,0<c.indexOf(": "))&&(b.type="yaml"):l(-1,"Please provide the input type."))),isDef(b.type)&&G.has(b.type)?G.get(b.type)(w,B):(isString(b.type)&&printErr("WARN: "+b.type+" input type not supported. Using json."),G.get("json")(w,B)),delete b.__origr)};b.debug&&
printErr("DEBUG: "+colorify(b));if(isNumber(b.loop))for(;;)toBoolean(b.loopcls)&&isDef(b.outfile)&&(global.__oafp_streams[b.outfile].close(),global.__oafp_streams[b.outfile]=io.writeFileStream(b.outfile,toBoolean(b.outfileappend))),z(),sleep(1E3*b.loop,!0);else z();isDef(global.__oafp_streams)&&Object.keys(global.__oafp_streams).forEach(a=>global.__oafp_streams[a].s.close())}};oafp(_params);
