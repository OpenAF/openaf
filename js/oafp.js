var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20240301, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("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")))};

const oafp=a=>{if(!isUnDef(a)&&!isDef(a.____ojob)){var E=b=>{for(var c=Object.keys(u),d=0;d<c.length;d++){var e=c[d];isDef(a[e])&&(b=u[e](b))}return b},A=(b,c)=>{c.__path&&(b=$path(b,c.__path.trim()),delete c.__path);if(isString(b))return E(b);c.__from&&(b=$from(b).query(af.fromNLinq(c.__from.trim())),delete c.__from);if(c.__sql){var d="auto";if(isString(a.sqlfilter))switch(a.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d="auto"}isArray(b)&&0<b.length&&
(b=$sql(b,c.__sql.trim(),d));delete c.__sql}return b=E(b)},l=(b,c,d)=>{c=clone(c);toBoolean(a.color)&&(__conConsole=!0);b=isString(b)?b.trim().startsWith("{")&&b.trim().endsWith("}")?A(jsonParse(b,__,__,!0),c):A(b,c):d?A([b],c)[0]:A(b,c);isDef(a.outputkey)&&(b=$$({}).set(a.outputkey,b));isDef(a.outkey)&&(b=$$({}).set(a.outkey,b));printErrnl("\r"+" ".repeat(_$(void 0).default("(processing data...)").length)+"\r");z.has(c.__format)?z.get(c.__format)(b,c):$o(b,c)},r=(b,c)=>{var d=af.fromString2Bytes(""),
e=af.newOutputStream();$sh(b).cb((f,h,g)=>{ioStreamCopy(e,f);f=e.toByteArray();0<f.length&&(d=f)}).get();return c?af.fromBytes2String(d):d},v=b=>{if(!isString(b)||""==b||isNull(b))return"";b=b.trim();return b.startsWith("{")?jsonParse(b,__,__,!0):af.fromSLON(b)},k=(b,c)=>{isUnDef(c)&&(c="exit: "+b);if(isUnDef(ow.oJob)&&!toBoolean(a.noexit))0!=b&&printErr(c),exit(b);else throw c;},B=()=>{__initializeCon();a.help=_$(a.help,"help").isString().default("");switch(a.help.toLowerCase()){case "filters":var b=
"docs/FILTERS.md";break;case "template":b="docs/TEMPLATE.md";break;case "examples":b="docs/EXAMPLES.md";break;case "readme":case "usage":b="docs/USAGE.md";break;default:b=a.help.toLowerCase(),b=isDef(w[b])?"docs/"+b+".md":"docs/USAGE.md"}var c=(getOPackPath("oafproc")||".")+"/"+b;let d="";if("docs/USAGE.md"==b&&0<Object.keys(w).length){d="\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let e in w)d+="| "+e+" | help="+e+" |\n"}isDef(c)&&io.fileExists(c)?(__conConsole=
__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c)+d)):print(ow.format.withMD(io.readFileString(c)+d))):isDef(global._oafphelp)&&isDef(global._oafphelp[b])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[b]+d)):print(ow.format.withMD(global._oafphelp[b]+d))):isString(w[a.help])?(__conConsole=__ansiColorFlag=
!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(w[a.help])):print(ow.format.withMD(w[a.help]))):print("Check https://github.com/OpenAF/oafp/blob/master/src/"+b);k(0)},I=()=>{var b=(getOPackPath("oafproc")||".")+"/.package.yaml";b={oafp:{version:io.fileExists(b)?io.readFileYAML(b).version:"(not available)",inputs:Array.from(x.keys()).filter(c=>"?"!=c).sort(),transforms:Object.keys(u).filter(c=>"transforms"!=c).sort(),outputs:Array.from(z.keys()).filter(c=>
"?"!=c).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},os:{name:String(java.lang.System.getProperty("os.name")),
version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};return stringify(b,__,"")};ow.loadFormat();
a.format=a.output||a.format||a.out;a.type=a.input||a.type||a.in;a.out=a.format;a.output=a.format;a.in=a.type;a.input=a.type;if(isUnDef(a.file)&&isUnDef(a.cmd)){let b=__;for(let c in a)if(""===a[c]){b=c;break}a.file=b}var C=new Map([[".json","json"],[".ndjson","ndjson"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"]]),F=new Set(["csv","ndjson"]),G={lines:(b,c)=>{isBoolean(a.linesjoin)||(a.linesjoin=toBoolean(_$(a.linesjoin,"linesjoin").isString().default(__)));
if(!a.linesjoin&&isString(b))0!=b.trim().length&&(0<b.trim().length&&(b=b.trim().split(/\r?\n/)),l(b,c,!0)),D=!0;else return!0},ndjson:(b,c)=>{isBoolean(a.ndjsonjoin)||(a.ndjsonjoin=toBoolean(_$(a.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(a.ndjsonjoin)return!0;isUnDef(global.__ndjsonbuf)&&0!=b.length&&b.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=b.length&&!b.trim().endsWith("}")){global.__ndjsonbuf+=b.trim();return}0<global.__ndjsonbuf.length&&(b=
global.__ndjsonbuf+b,global.__ndjsonbuf=__)}0==b.length||0<b.length&&"{"!=b.trim().substring(0,1)?(l(jsonParse(global.__ndjsonbuf,__,__,!0),c,!0),D=!0,global.__ndjsonbuf=__):(l(jsonParse(b,__,__,!0),c,!0),D=!0)}},u={transforms:b=>{if(toBoolean(a.transforms))return Object.keys(u).filter(c=>"transforms"!=c).sort()},jsonschemagen:b=>{if(toBoolean(a.jsonschemagen))return ow.loadObj(),ow.obj.schemaGenerator(b)},jsonschemacmd:b=>u.jsonschema(b),jsonschema:b=>{isMap(b)||k(-1,"jsonschema is only supported with a map.");
isUnDef(a.jsonschema)&&isUnDef(a.jsonschemacmd)&&k(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var c;if(isDef(a.jsonschemacmd)){var d=$sh(a.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:k(-1,"Error executing the command '"+a.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(a.jsonschema);isMap(c)||k(-1,"The schema provided is not a valid JSON schema.");ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(b),errors:c.errors}},
sortmapkeys:b=>{if(toBoolean(a.sortmapkeys)&&isObject(b)){let c=(d,e)=>{let f=Object.keys(d).sort(),h={};for(let g=0;g<f.length;g++){let n=f[g],m=d[n];Array.isArray(m)?h[n]=m.map(p=>"object"===typeof p&&null!==p&&void 0!==p?sortMapKeys(p,e):p):h[n]=e&&"object"===typeof m&&null!==m&&void 0!==m?c(m,e):m}return h};return c(b,!0)}return b},searchkeys:b=>isObject(b)?searchKeys(b,a.searchkeys):b,searchvalues:b=>isObject(b)?searchValues(b,a.searchvalues):b,maptoarray:b=>toBoolean(a.maptoarray)&&isMap(b)?
$m4a(b,a.maptoarraykey):b,arraytomap:b=>toBoolean(a.arraytomap)&&isArray(b)?$a4m(b,a.arraytomapkey,toBoolean(a.arraytomapkeepkey)):b,flatmap:b=>toBoolean(a.flatmap)&&isObject(b)?ow.loadObj().flatMap(b,a.flatmapkey):b,merge:b=>{if(toBoolean(a.merge)&&isArray(b)&&1<b.length){for(var c,d=0;d<b.length;d++)c=0==d?b[d]:merge(c,b[d]);return c}return b},correcttypes:b=>{toBoolean(a.correcttypes)&&isObject(b)&&traverse(b,(c,d,e,f)=>{switch(descType(d)){case "number":isString(d)&&(f[c]=Number(d));break;case "string":"true"==
d.trim().toLowerCase()||"false"==d.trim().toLowerCase()?f[c]=toBoolean(d):d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?f[c]=new Date(d):d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?f[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?f[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&(f[c]=new Date(d))}});return b},removenulls:b=>{toBoolean(a.removenulls)&&traverse(b,(c,d,e,f)=>{(isNull(d)||isUnDef(d))&&delete f[c]});return b},removedups:b=>{if(toBoolean(a.removedups)){if(isArray(b)){var c=
new Set,d=[];b.forEach(e=>{var f=e;isObject(e)&&(f=sortMapKeys(f));f=stringify(f,__,!0);c.has(f)||(c.add(f),d.push(e))});return d}k(-1,"removedups is only supported for arrays")}return b},llmprompt:b=>{if(isString(a.llmprompt)){a.llmenv=_$(a.llmenv,"llmenv").isString().default("OAFP_MODEL");a.llmoptions=_$(a.llmoptions,"llmoptions").isString().default(__);var c=$llm(isDef(a.llmoptions)?a.llmoptions:$sec("system","envs").get(a.llmenv)),d="json",e=!0;isString(a.input)&&("md"==a.input&&(d="markdown",
e=!1),"mdtable"==a.input&&(d="markdown table",e=!1),"hsperf"==a.input&&(d="java hsperf file"),"raw"==a.input&&(d="raw",e=!1));c=c.withContext(e?stringify(b,__,!0):b,isDef(a.llmcontext)?a.llmcontext:`${d} input data`);return!isString(a.output)||"md"!=a.output&&"mdtable"!=a.output&&"raw"!=a.output?c=c.promptJSON(a.llmprompt):c=c.prompt(a.llmprompt)}return b},splitlines:b=>toBoolean(a.splitlines)&&isString(b)?b.split(/\r?\n/):b},z=new Map([["?",(b,c)=>{b=Array.from(z.keys()).filter(d=>"?"!=d).sort();
$o(b,c)}],["pm",(b,c)=>{$o(b,c)}],["key",(b,c)=>{$o(b,c)}],["ctable",(b,c)=>{$o(b,c)}],["stable",(b,c)=>{$o(b,c)}],["table",(b,c)=>{$o(b,c)}],["log",(b,c)=>{isString(b)&&toBoolean(a.logprintall)?print(b.replace(/\n$/,"")):(c=b,isMap(b)&&(c=[b]),isArray(c)&&c.forEach(d=>{if(isMap(d)){let e=isDef(d["@timestamp"])?d["@timestamp"]:__,f=isDef(d.level)?d.level:__;d=isDef(d.message)?d.message:__;let h;isDef(f)&&(0<=f.toLowerCase().indexOf("err")&&(h="RED,BOLD"),0<=f.toLowerCase().indexOf("warn")&&(h="YELLOW"));
isDef(e)&&24<e.length&&(e=e.substring(0,23)+"Z");(isDef(d)||isDef(e))&&print(ansiColor("BOLD",e)+(isDef(f)?" | "+ansiColor(h,f):"")+" | "+ansiColor(h,d))}}))}],["raw",(b,c)=>{isString(b)?print(b):sprint(b)}],["ini",(b,c)=>{isString(b)||(ow.loadJava(),c=new ow.java.ini,print(c.put(b).save()))}],["mdyaml",(b,c)=>{isArray(b)?b.forEach((d,e)=>{$o(d,merge(c,{__format:"yaml"}));e<b.length-1&&print("---\n")}):$o(b,merge(c,{__format:"yaml"}))}],["mdtable",(b,c)=>{isArray(b)&&(ow.loadTemplate(),print(ow.template.md.table(b)))}],
["template",(b,c)=>{isString(b)||(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(a.template)&&k(-1,"For output=handlebars you need to provide a template=someFile.hbs"),tprint(io.readFileString(a.template),b))}],["openmetrics",(b,c)=>{isString(b)||(ow.loadMetrics(),b=ow.metrics.fromObj2OpenMetrics(b,a.metricsprefix,a.metricstimestamp),b=b.split("\n").map(d=>{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&
(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).join("\n"),$o(b,c))}],["pjson",(b,c)=>{c.__format="prettyjson";$o(b,c)}],["base64",(b,c)=>{b=isString(b)?b:stringify(b);toBoolean(a.base64gzip)?print(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(b))))):print(af.fromBytes2String(af.toBase64Bytes(b)))}],["chart",(b,c)=>{isUnDef(a.chart)&&k(-1,'For output=chart you need to provide a chart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&
k(-1,"Output=chart is not supported in this version of OpenAF");c=splitBySepWithEnc(a.chart," ",[['"','"'],["'","'"]]);let d=[];if(1<c.length){for(let e=0;e<c.length;e++)if(0==e)d.push(c[e]);else{let f=splitBySepWithEnc(c[e],":",[['"','"'],["'","'"]]).map((h,g)=>{if(0==g){if(h.startsWith("-"))return h;global["_oafp_fn_"+e]=()=>$path(b,h);return"_oafp_fn_"+e}return h}).join(":");d.push(f)}toBoolean(a.chartcls)&&cls();print(printChart("oafp "+d.join(" ")))}}],["ch",(b,c)=>{isUnDef(a.ch)&&k(-1,'For output=ch you need to provide a ch="(type: ...)"');
isUnDef(a.chkey)&&k(-1,'For output=ch you need to provide a chkey="key1, key2"');b=isMap(b)?[b]:b;a.ch=v(a.ch);isMap(a.ch)?(isUnDef(a.ch.type)&&k(-1,"ch.type is not defined."),isDef(a.ch.lib)&&loadLib(a.ch.lib),"remote"==a.ch.type?$ch("oafp::outdata").createRemote(a.ch.url):$ch("oafp::outdata").create(a.ch.type,a.ch.options),toBoolean(a.chunset)?$ch("oafp::outdata").unsetAll(a.chkey.split(",").map(d=>d.trim()),b):$ch("oafp::outdata").setAll(a.chkey.split(",").map(d=>d.trim()),b),$ch("oafp::outdata").destroy()):
k(-1,"Invalid ch parameter")}],["db",(b,c)=>{(!isArray(b)||1>b.length)&&k(-1,"db is only supported for filled arrays/lists");a.dbtable=_$(a.dbtable,"outdbtable").isString().default("data");a.dbnocreate=toBoolean(_$(a.dbnocreate,"outdbnocreate").isString().default("false"));a.dbicase=toBoolean(_$(a.dbicase,"outdbicase").isString().default("false"));a.dbbatchsize=_$(a.dbbatchsize,"dbbatchsize").isNumber().default(__);ow.loadObj();try{isString(a.dbjdbc)||k(-1,"dbjdbc URL is not defined.");isDef(a.dblib)&&
loadLib("jdbc-"+a.dblib+".js");var d=new DB(a.dbjdbc,a.dbuser,a.dbpass,a.dbtimeout);if(!a.dbnocreate)try{var e=ow.obj.fromObj2DBTableCreate(a.dbtable,b,__,!a.dbicase);d.u(e);d.commit()}catch(m){d.rollback(),k(-1,"Error creating table: "+m)}var f=Object.keys(ow.obj.flatMap(b[0]));var h=a.dbicase?f.join(",").toUpperCase():'"'+f.join('", "')+'"';let n="";var g=b.map(m=>{var p=ow.obj.flatMap(m);m=[];for(var t in f)m.push(p[f[t]]);t=f.map(y=>String(p[y]));m="INSERT INTO "+(a.dbicase?a.dbtable:'"'+a.dbtable+
'"')+" ("+h+") VALUES ("+t.map(y=>"?").join(", ")+")";m.length>n.length&&(n=String(m));return t});d.usArray(n,g,a.dbbatchsize)}catch(n){isDef(d)&&d.rollback(),printErr(n),k(-1,"Error connecting to the database: "+n)}finally{isDef(d)&&(d.commit(),d.close())}}],["sql",(b,c)=>{(!isArray(b)||1>b.length)&&k(-1,"sql is only supported for filled arrays/lists");a.sqltable=_$(a.sqltable,"sqltable").isString().default("data");a.sqlicase=toBoolean(_$(a.sqlicase,"sqlicase").isString().default("false"));a.sqlnocreate=
toBoolean(_$(a.sqlnocreate,"sqlnocreate").isString().default("false"));ow.loadObj();a.sqlnocreate||print(ow.obj.fromObj2DBTableCreate(a.sqltable,b,__,!a.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(b[0]));var e=a.sqlicase?d.join(",").toUpperCase():'"'+d.join('", "')+'"';print(b.map(f=>{var h=ow.obj.flatMap(f);f=[];for(var g in d)f.push(h[d[g]]);g=d.map(n=>{n=h[n];isString(n)&&(n="'"+n.replace(/'/g,"''")+"'");isNull(n)&&(n="null");return n});return"INSERT INTO "+(a.sqlicase?a.sqltable:'"'+a.sqltable+
'"')+" ("+e+") VALUES ("+g.join(",")+");"}).join("\n"))}],["xls",(b,c)=>{if(!isString(b)){try{includeOPack("plugin-XLS")}catch(h){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");if(isMap(b)){ow.loadObj();var d=ow.obj.flatMap(b);var e=Object.keys(d).map(h=>({key:h,value:d[h]}))}isArray(b)&&(e=b);traverse(e,(h,g,n,m)=>{isString(g)&&g.startsWith("=")&&(m[h]="'"+g)});b=!1;c=a.xlsfile;isUnDef(a.xlsfile)&&(b=!0,a.xlsfile=io.createTempFile("oafp",
".xlsx"));c=new XLS(isDef(c)&&io.fileExists(c)?c:__);var f=c.getSheet(_$(a.xlssheet,"xlssheet").isString().default("data"));a.xlsformat=_$(a.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');a.xlsformat=v(a.xlsformat);ow.format.xls.setTable(c,f,"A",1,e,__,a.xlsformat);c.writeFile(a.xlsfile);c.close();a.xlsopenwait=_$(a.xlsopenwait,"xlsopenwait").isNumber().default(5E3);a.xlsopen=toBoolean(_$(a.xlsopen,"xlsopen").isString().default("true"));
a.xlsopen&&(ow.format.isWindows()?($sh("start "+a.xlsfile).exec(),b&&sleep(a.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+a.xlsfile).exec(),b&&sleep(a.xlsopenwait,!0)))}}]]),x=new Map([["?",(b,c)=>{b=Array.from(x.keys()).filter(d=>"?"!=d).sort();l(b,c)}],["pm",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));isDef(__pm._map)&&(b=__pm._map);isDef(__pm._list)&&(b=__pm._list);l(b,c)}],["jsonschema",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));b=jsonParse(b,
__,__,!0);isMap(b)||k(-1,"jsonschema is only supported with a map.");ow.loadObj();b=ow.obj.schemaSampleGenerator(b);l(b,c)}],["yaml",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));b=af.fromYAML(b);l(b,c)}],["xml",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));a.xmlignored=_$(a.xmlignored,"xmlignored").isString().default(__);a.xmlprefix=_$(a.xmlprefix,"xmlprefix").isString().default(__);a.xmlfiltertag=toBoolean(_$(a.xmlfiltertag,"xmlfiltertag").isString().default(__));
0<=b.indexOf("<?xml")&&(b=b.substring(b.indexOf("?>")+2).trim());0<=b.indexOf("<!DOCTYPE")&&(b=b.substring(b.indexOf(">")+1).trim());b=af.fromXML2Obj(b,a.xmlignored,a.xmlprefix,!a.xmlfiltertag);l(b,c)}],["lines",(b,c)=>{isBoolean(a.linesjoin)||(a.linesjoin=toBoolean(_$(a.linesjoin,"linesjoin").isString().default(__)));printErrnl(_$(void 0).default("(processing data...)"));let d=__,e=[],f=g=>{g=g.split("\n").map(m=>{let p="",t=0;for(let y=0;y<m.length;y++)if("\t"===m[y]){let J=8-t%8;p+=" ".repeat(J);
t+=J}else p+=m[y],t++;return p}).join("\n");if(isUnDef(d))return d=[],lastPos=0,isUnDef(a.linesvisualsepre)&&(a.linesvisualsepre=" \\s+"),g.split(new RegExp(a.linesvisualsepre)).forEach(m=>{d.push(m);m=g.substring(lastPos).match(new RegExp(ow.format.escapeRE(m)+"("+a.linesvisualsepre+"|$)"));!isNull(m)&&isDef(m.index)?(e.push(lastPos+m.index),lastPos=m.index):k(-1,"Problem with linesvisual to find header positioning.")}),__;var n={};e.forEach((m,p)=>{n[d[p]]=g.substring(m,p+1<e.length?e[p+1]-1:__).trim()});
return n};if(a.linesjoin)if(isDef(a.file)&&isUnDef(a.cmd)&&(b=io.readFileString(a.file)),isDef(a.cmd)&&(b=r(a.cmd,!0)),b=b.split(/\r?\n/),toBoolean(a.linesvisual)){var h=[];b.forEach(g=>{0!=g.length&&(g=f(g),isDef(g)&&h.push(g))});l(h,c)}else l(b,c);else b=isDef(a.file)&&isUnDef(a.cmd)?io.readFileStream(a.file):isDef(a.cmd)?af.fromBytes2InputStream(r(a.cmd)):af.fromString2InputStream(b),ioStreamReadLines(b,g=>{toBoolean(a.linesvisual)?(g=f(g),isDef(g)&&l(g,clone(c),!0)):l(g,clone(c),!0)}),b.close()}],
["ndjson",(b,c)=>{isBoolean(a.ndjsonjoin)||(a.ndjsonjoin=toBoolean(_$(a.ndjsonjoin,"ndjsonjoin").isString().default(__)));printErrnl(_$(void 0).default("(processing data...)"));global.__ndjsonbuf=__;var d=(f,h)=>{isUnDef(global.__ndjsonbuf)&&0!=f.length&&f.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=f.length&&!f.trim().endsWith("}")){global.__ndjsonbuf+=f.trim();return}0<global.__ndjsonbuf.length&&(f=global.__ndjsonbuf+f,global.__ndjsonbuf=__)}0==f.length||
0<f.length&&"{"!=f.trim().substring(0,1)?(h(f),global.__ndjsonbuf=__):h(f)},e=f=>{var h=[];f.split("\n").filter(g=>0<g.length).forEach(g=>d(g,n=>h.push(jsonParse(n,__,__,toBoolean(a.ndjsonfilter)))));return h};a.ndjsonjoin?(isDef(a.file)&&isUnDef(a.cmd)&&(b=io.readFileString(a.file)),isDef(a.cmd)&&(b=r(a.cmd,!0)),l(e(b),c)):(b=isDef(a.file)&&isUnDef(a.cmd)?io.readFileStream(a.file):isDef(a.cmd)?af.fromBytes2InputStream(r(a.cmd)):af.fromString2InputStream(b),ioStreamReadLines(b,f=>{d(f,h=>l(jsonParse(h,
__,__,!0),clone(c),!0))}),b.close())}],["md",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));__conConsole=__ansiColorFlag=!0;isUnDef(a.format)&&isUnDef(c.__format)&&(a.format="md",c.__format="md");l(b,c)}],["mdtable",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));ow.loadTemplate();b=ow.template.md.fromTable(b);l(b,c)}],["raw",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));l(b,c)}],["ini",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));
ow.loadJava();var d=new ow.java.ini;b=isDef(a.file)?d.loadFile(a.file).get():d.load(b).get();l(b,c)}],["sql",(b,c)=>{isString(b)?l(af.fromSQL(b).ast,c):l(b,c)}],["openmetrics",(b,c)=>{isString(b)?(ow.loadMetrics(),l(ow.metrics.fromOpenMetrics2Array(b),c)):l(b,c)}],["ch",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));isUnDef(a.inch)&&k(-1,"inch is not defined.");a.inch=v(a.inch);if(isMap(a.inch)){isUnDef(a.inch.type)&&k(-1,"inch.type is not defined.");isDef(a.inch.lib)&&loadLib(a.inch.lib);
"remote"==a.inch.type?$ch("oafp::indata").createRemote(a.inch.url):$ch("oafp::indata").create(a.inch.type,a.inch.options);var d=v(b);toBoolean(a.inchall)||0==b.trim().length?l($ch("oafp::indata").getAll(isMap(d)?d:__),c):l($ch("oafp::indata").get(isMap(d)?d:__),c);$ch("oafp::indata").destroy()}else k(-1,"inch is not a valid map.")}],["db",(b,c)=>{if(isString(b)){printErrnl(_$(void 0).default("(processing data...)"));isString(a.indbjdbc)||k(-1,"indbjdbc URL is not defined.");try{isDef(a.indblib)&&
loadLib("jdbc-"+a.indblib+".js");var d=new DB(a.indbjdbc,a.indbuser,a.indbpass,a.indbtimeout);d.convertDates(!0);if(toBoolean(a.indbexec)){var e=d.u(b);l({affectedRows:e},c);d.commit()}else e=d.q(b),isMap(e)&&isArray(e.results)?l(e.results,c):k(-1,"Invalid DB result: "+stringify(e))}catch(f){printErr(f.message),isDef(d)&&d.rollback(),k(-1,"Error executing SQL: "+f.message)}finally{isDef(d)&&(d.rollback(),d.close())}}else k(-1,"db is only supported with a SQL string.")}],["xls",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));
try{includeOPack("plugin-XLS")}catch(e){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}a.xlssheet=_$(a.xlssheet,"xlssheet").isString().default(0);a.xlsevalformulas=toBoolean(_$(a.xlsevalformulas,"xlsevalformulas").isString().default(!0));a.xlscol=_$(a.xlscol,"xlscol").isString().default("A");a.xlsrow=_$(a.xlsrow,"xlsrow").isString().default(1);plugin("XLS");if(isDef(a.file)||isDef(a.cmd)){b=new XLS(isDef(a.cmd)?r(a.cmd):a.file);var d=b.getSheet(a.xlssheet);
d=b.getTable(d,a.xlsevalformulas,a.xlscol,a.xlsrow);b.close();isDef(d)&&isMap(d)&&(d=d.table);l(d,c)}else k(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],["csv",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));if(isDef(a.file)||isDef(a.cmd)){var d=isDef(a.cmd)?af.fromBytes2InputStream(r(a.cmd)):io.readFileStream(a.file);b=$csv(a.inputcsv).fromInStream(d).toOutArray();d.close()}else b=$csv(a.inputcsv).fromInString(b).toOutArray();l(b,
c)}],["hsperf",(b,c)=>{if(isDef(a.file)||isDef(a.cmd)){printErrnl(_$(void 0).default("(processing data...)"));ow.loadJava();var d=isDef(a.cmd)?ow.java.parseHSPerf(r(a.cmd)):ow.java.parseHSPerf(a.file);d.__ts=new Date;var e=0,f=0;d.sun.gc.generation.forEach(h=>{h.space.forEach(g=>{f+=Number(g.used);e=isNumber(g.capacity)?e+Number(g.capacity):e;d.sun.gc["__percUsed_"+g.name]=100*g.used/g.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=
100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;b=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);d.sun.gc.__ygc=isDef(b)?Number(b.invocations):0;d.sun.gc.__ygct=isDef(b)?Number(b.time/1E9):0;b=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name","").at(0);d.sun.gc.__fgc=isDef(b)?Number(b.invocations):0;d.sun.gc.__fgct=isDef(b)?Number(b.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/1E9;d.java.__mem={total:e,used:f,
free:e-f,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-d.sun.gc.metaspace.used};l(d,c)}else k(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["base64",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));b=toBoolean(a.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(b,!0))):af.fromBytes2String(af.fromBase64(b));l(b,c)}],["llm",(b,c)=>{a.llmenv=_$(a.llmenv,"llmenv").isString().default("OAFP_MODEL");
a.llmoptions=_$(a.llmoptions,"llmoptions").isString().default(__);isUnDef(a.llmoptions)&&!isString(getEnv(a.llmenv))&&k(-1,"llmoptions not defined and "+a.llmenv+" not found.");printErrnl(_$(void 0).default("(processing data...)"));var d=$llm(isDef(a.llmoptions)?a.llmoptions:$sec("system","envs").get(a.llmenv));d="md"==a.output||"mdtable"==a.output||"raw"==a.output?d.prompt(b):d.promptJSON(b);l(jsonParse(d,__,__,isString(d)),c)}],["slon",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));
l(af.fromSLON(b),c)}],["json",(b,c)=>{printErrnl(_$(void 0).default("(processing data...)"));l(jsonParse(b,__,__,isString(b)),c)}]]),w={};isString(a.libs)&&(a.libs=a.libs.split(",").map(b=>b.trim()).filter(b=>0<b.length));isDef(__flags.OAFP)&&isArray(__flags.OAFP.libs)&&isArray(a.libs)?a.libs=__flags.OAFP.libs.concat(a.libs):a.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(a.libs)&&a.libs.forEach(b=>{try{var c=require("oafp_"+b+".js");if(isDef(c.oafplib)){var d=c.oafplib(clone(a),l,$o);isMap(d)&&
(isArray(d.fileExtensions)&&d.fileExtensions.forEach(e=>{var f=e.ext;e=e.type;C.has(f)?printErr("WARN: Extension '"+f+"' already exists."):C.set(f,e)}),isArray(d.fileExtensionsNoMem)&&d.fileExtensionsNoMem.forEach(e=>{e=e.ext;F.has(e)?printErr("WARN: Extension '"+e+"' already exists."):F.add(e)}),isArray(d.input)&&d.input.forEach(e=>{var f=e.type;e=e.fn;x.has(f)?printErr("WARN: Input type '"+f+"' already exists."):x.set(f,e)}),isArray(d.inputLine)&&d.inputLine.forEach(e=>{var f=e.type;e=e.fn;isUnDef(_inputLinesFns[f])?
G[f]=e:printErr("WARN: Input type '"+f+"' already exists.")}),isArray(d.transform)&&d.transform.forEach(e=>{var f=e.type;e=e.fn;isUnDef(u[f])?u[f]=e:printErr("WARN: Transform '"+f+"' already exists.")}),isArray(d.output)&&d.output.forEach(e=>{var f=e.type;e=e.fn;z.has(f)?printErr("WARN: Output type '"+f+"' already exists."):z.set(f,e)}),isString(d.help)&&(w[b.toLowerCase()]=d.help))}else printErr("WARN: Library '"+b+"' does not have oafplib.")}catch(e){printErr("WARN: Library '"+b+"' error: "+e)}});
(""==a["-h"]||isString(a.help)&&0<a.help.length)&&B();a.format=_$(a.format,"format").isString().default(__);__initializeCon();String(java.lang.System.getProperty("os.name")).match(/Windows/)||__con.getTerminal().settings.set("sane");if(isDef(a.secKey)){toBoolean(a.secEnv)&&(a.secRepo="system",a.secBucket="envs");a.secRepo=_$(a.secRepo,"secRepo").isString().default(getEnv("OAFP_SECREPO"));a.secBucket=_$(a.secBucket,"secBucket").isString().default(getEnv("OAFP_SECBUCKET"));a.secPass=_$(a.secPass,"secPass").isString().default(getEnv("OAFP_SECPASS"));
a.secMainPass=_$(a.secMainPass,"secMainPass").isString().default(getEnv("OAFP_SECMAINPASS"));a.secFile=_$(a.secFile,"secFile").isString().default(getEnv("OAFP_SECFILE"));let b=$sec(a.secRepo,a.secBucket,a.secPass,a.secMainPass,a.secFile).get(secKey);isDef(b)&&Object.keys(b).forEach(c=>a[c]=b[c])}var H={__format:a.format,__from:a.from,__sql:a.sql,__path:a.path,__csv:a.csv,__pause:a.pause,__key:a.__key};isDef(a.inputcsv)&&(a.inputcsv=v(a.inputcsv));isDef(a.incsv)&&(a.incsv=v(a.incsv));isDef(a.csv)&&
(a.csv=v(a.csv));var K=!1;if(""==a["-v"]||isString(a.version)&&0<a.version.length)K=!0,I();var q="",D=!1;B=()=>{if(K)q=I();else if(a.jsonprefix=_$(a.jsonprefix,"jsonprefix").isString().default(__),a.jsondesc=toBoolean(_$(a.jsondesc,"jsondesc").default("false")),isDef(a.file)){if(io.fileExists(a.file)||k(-1,"ERROR: File not found: '"+a.file+"'"),!F.has(a.type))if("json"==a.type||isUnDef(a.type))if(a.jsondesc){var b=new Set;io.readStreamJSON(a.file,d=>{d=d.substring(2);isDef(a.jsonprefix)?d.startsWith(a.jsonprefix)&&
b.add(d):b.add(d);return!1});q=stringify(Array.from(b),__,"")}else if(isDef(a.jsonprefix)){var c=io.readStreamJSON(a.file,d=>d.substring(2).startsWith(a.jsonprefix));q=stringify(c,__,"")}else q=io.readFileString(a.file);else q=io.readFileString(a.file)}else a.jsondesc&&k(-1,"ERROR: jsondesc only available for file input."),a.jsonprefix&&k(-1,"ERROR: jsonprefix only available for file input."),isDef(a.cmd)?q=r(a.cmd,!0):isString(a.data)?q=a.data:"pm"!=a.input&&(q=[],io.pipeLn(d=>{isDef(G[a.type])?
G[a.type](E(d),clone(H))&&q.push(d):q.push(d);return!1}),q=q.join("\n"));D||(isUnDef(a.type)&&(isDef(a.file)&&(c=a.file.substring(a.file.lastIndexOf(".")),C.has(c)&&(a.type=C.get(c))),isUnDef(a.type)&&(c=q.trim(),c.startsWith("{")||c.startsWith("[")?a.type="json":c.startsWith("(")?a.type="slon":c.startsWith("<")?a.type="xml":isString(c)&&0<c.length?1<c.substring(0,c.indexOf("\n")).split(",").length?a.type="csv":c.substring(0,0<c.indexOf(": "))&&(a.type="yaml"):k(-1,"Please provide the input type."))),
isDef(a.type)&&x.has(a.type)?x.get(a.type)(q,H):(isString(a.type)&&printErr("WARN: "+a.type+" input type not supported. Using json."),x.get("json")(q,H)))};if(isNumber(a.loop))for(;;)B(),sleep(1E3*a.loop,!0);else B()}};oafp(params);
