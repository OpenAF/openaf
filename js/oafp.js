var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20240419, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("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")))};

const oafp=a=>{if(!isUnDef(a)&&!isDef(a.____ojob)){Object.keys(a).forEach(b=>{var c=b.toLowerCase();b!=c&&isUnDef(a[c])&&(a[c]=a[b],delete a[b])});var M=b=>{for(var c=Object.keys(C),d=0;d<c.length;d++){var f=c[d];isDef(a[f])&&(b=C[f](b))}return b},H=(b,c)=>{a.__origr=b;c.__ifrom&&(b=$from(b).query(af.fromNLinq(c.__ifrom.trim())),delete c.__ifrom);if(c.__isql){var d=__;if(isString(a.sqlfilter))switch(a.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(b)&&
0<b.length&&(b=$sql(b,c.__isql.trim(),d));delete c.__isql}c.__path&&(b=$path(b,c.__path.trim()),delete c.__path);if(isString(b))return M(b);b=M(b);c.__from&&(b=$from(b).query(af.fromNLinq(c.__from.trim())),delete c.__from);if(c.__sql){d=__;if(isString(a.sqlfilter))switch(a.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(b)&&0<b.length&&(b=$sql(b,c.__sql.trim(),d));delete c.__sql}c.__opath&&(b=$path(b,c.__opath.trim()),delete c.__opath);return b},
l=(b,c,d)=>{c=clone(c);toBoolean(a.color)?__conConsole=!0:isDef(a.color)&&(__conAnsi=!1);b=isString(b)?b.trim().startsWith("{")&&b.trim().endsWith("}")?H(jsonParse(b,__,__,!0),c):H(b,c):d?H([b],c)[0]:H(b,c);isDef(a.outputkey)&&(b=$$({}).set(a.outputkey,b));isDef(a.outkey)&&(b=$$({}).set(a.outkey,b));P();F.has(c.__format)?F.get(c.__format)(b,c):(isUnDef(c.__format)&&(c.__format="tree"),z(b,c,__))},A=(b,c)=>{var d=af.fromString2Bytes(""),f=af.newOutputStream();$sh(b).cb((e,h,g)=>{ioStreamCopy(f,e);
e=f.toByteArray();0<e.length&&(d=e)}).get();return c?af.fromBytes2String(d):d},u=b=>{if(!isString(b)||""==b||isNull(b))return"";b=b.trim();return b.startsWith("{")?jsonParse(b,__,__,!0):af.fromSLON(b)},I=(b,c,d,f)=>{d=_$(d).isString().default("_oafp_fn_");c=splitBySepWithEnc(c," ",[['"','"'],["'","'"]]);let e=[];$ch("__oaf::chart").create();if(1<c.length){for(let h=0;h<c.length;h++)if(0==h)e.push(c[h]);else{let g=splitBySepWithEnc(c[h],":",[['"','"'],["'","'"]]).map((m,n)=>{if(0==n){if(m.startsWith("-"))return m;
global[d+h]=()=>{if(isString(f)){var p=$ch("__oaf::chart").get({name:f});p=isUnDef(p)?[]:p.data;var v=$path(b,m);if(isArray(v))return v.forEach((y,w)=>{isArray(p[w])?p[w].push(y):p[w]=[y]}),v=p.pop(),$ch("__oaf::chart").set({name:f},{name:f,data:p}),v[0]}else return $path(b,m)};return d+h}return m}).join(":");e.push(g)}return e.join(" ")}return""},q=b=>{"undefined"===typeof a.outfile?print(b):("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"!==typeof global.__oafp_streams[a.outfile]&&
ioStreamWrite(global.__oafp_streams[a.outfile].s,b+(toBoolean(a.outfileappend)?"\n":"")))},z=(b,c,d)=>{b=$o(b,c,d,!0);isDef(b)&&q(b)},r=b=>{"grid"==a.out||a.__inception||toBoolean(a.loopcls)||toBoolean(a.chartcls)||printErrnl(_$(b).default("(processing data...)"))},P=b=>{"grid"==a.out||a.__inception||toBoolean(a.loopcls)||toBoolean(a.chartcls)||printErrnl("\r"+" ".repeat(_$(b).default("(processing data...)").length)+"\r")},k=(b,c)=>{isUnDef(c)&&(c="exit: "+b);if(isUnDef(ow.oJob)&&!toBoolean(a.noexit))0!=
b&&printErr(c),exit(b);else throw c;},J=()=>{__initializeCon();a.help=_$(a.help,"help").isString().default("");switch(a.help.toLowerCase()){case "filters":var b="docs/FILTERS.md";break;case "template":b="docs/TEMPLATE.md";break;case "examples":b="docs/EXAMPLES.md";break;case "readme":case "usage":b="docs/USAGE.md";break;default:b=a.help.toLowerCase(),b=isDef(D[b])?"docs/"+b+".md":"docs/USAGE.md"}var c=(getOPackPath("oafproc")||".")+"/"+b;let d="";if("docs/USAGE.md"==b&&0<Object.keys(D).length){d=
"\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let f in D)d+="| "+f+" | help="+f+" |\n"}isDef(c)&&io.fileExists(c)?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c)+d)):q(ow.format.withMD(io.readFileString(c)+d))):isDef(global._oafphelp)&&isDef(global._oafphelp[b])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[b]+
d)):q(ow.format.withMD(global._oafphelp[b]+d))):isString(D[a.help])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(D[a.help])):q(ow.format.withMD(D[a.help]))):q("Check https://github.com/OpenAF/oafp/blob/master/src/"+b);k(0)},Q=()=>{var b=(getOPackPath("oafproc")||".")+"/.package.yaml";b={oafp:{version:io.fileExists(b)?io.readFileYAML(b).version:"(not available/embedded)",inputs:Array.from(E.keys()).filter(c=>
"?"!=c).sort(),transforms:Object.keys(C).filter(c=>"transforms"!=c).sort(),outputs:Array.from(F.keys()).filter(c=>"?"!=c).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},
os:{name:String(java.lang.System.getProperty("os.name")),version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};
return stringify(b,__,"")};ow.loadFormat();a.format=a.output||a.format||a.out;a.type=a.input||a.type||a.in;a.out=a.format;a.output=a.format;a.in=a.type;a.input=a.type;if(isUnDef(a.file)&&isUnDef(a.cmd)){let b=__;for(let c in a)if(""===a[c]&&"-debug"!=c){b=c;break}a.file=b}var K=new Map([[".json","json"],[".ndjson","ndjson"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"],[".toml","toml"]]),N=new Set(["csv","ndjson"]),O={lines:(b,
c)=>{isBoolean(a.linesjoin)||(a.linesjoin=toBoolean(_$(a.linesjoin,"linesjoin").isString().default(__)));if(!a.linesjoin&&isString(b))0!=b.trim().length&&(0<b.trim().length&&(b=b.trim().split(/\r?\n/)),l(b,c,!0)),L=!0;else return!0},ndjson:(b,c)=>{isBoolean(a.ndjsonjoin)||(a.ndjsonjoin=toBoolean(_$(a.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(a.ndjsonjoin)return!0;isUnDef(global.__ndjsonbuf)&&0!=b.length&&b.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=
b.length&&!b.trim().endsWith("}")){global.__ndjsonbuf+=b.trim();return}0<global.__ndjsonbuf.length&&(b=global.__ndjsonbuf+b,global.__ndjsonbuf=__)}0==b.length||0<b.length&&"{"!=b.trim().substring(0,1)?(l(jsonParse(global.__ndjsonbuf,__,__,!0),c,!0),L=!0,global.__ndjsonbuf=__):(l(jsonParse(b,__,__,!0),c,!0),L=!0)}},C={transforms:b=>{if(toBoolean(a.transforms))return Object.keys(C).filter(c=>"transforms"!=c).sort()},cmlt:b=>{if(toBoolean(a.cmlt)){b=isArray(b)?b:[b];a.cmltch=_$(a.cmltch,"cmltch").default("(type: simple)");
var c=u(a.cmltch);if(isMap(c))return isUnDef(c.type)&&k(-1,"cmltch.type is not defined."),isDef(c.lib)&&loadLib(c.lib),0>$ch().list().indexOf("oafp::cmltdata")&&("remote"==c.type?$ch("oafp::cmltdata").createRemote(c.url):$ch("oafp::cmltdata").create(c.type,c.options),c=Number(_$(a.cmltsize,"cmltsize").isNumber().default(100))-1,0<c&&$ch("oafp::cmltdata").subscribe(ow.ch.utils.getHousekeepSubscriber("oafp::cmltdata",c))),b.forEach(d=>$ch("oafp::cmltdata").set({t:nowNano()},d)),$ch("oafp::cmltdata").getAll();
k(-1,"Invalid cmltch parameter")}},diff:b=>{var c=u(a.diff);if(isMap(c)){isDef(c.filea)&&isDef(c.fileb)||isDef(c.a)&&isDef(c.b)||k(-1,"diff.a path and diff.b path are required.");loadDiff();let d=$path(b,c.a);b=$path(b,c.b);let f=__;toBoolean(a.color)&&(isUnDef(a.difftheme)&&isDef(getEnv("OAFP_DIFFTHEME"))&&(a.difftheme=getEnv("OAFP_DIFFTHEME")),f=u(_$(a.difftheme,"difftheme").isString().default("")),f=merge({added:"GREEN",removed:"RED",common:"FAINT",linenum:"ITALIC",linediv:"FAINT",linesep:"|"},
f));let e=(h,g)=>{if(toBoolean(a.color)){isUnDef(g)&&(g="");var m=new Set;if(isArray(h)){let n=1,p=toBoolean(a.diffnlines),v=0;p&&(h.forEach(w=>{v+=w.value.split("\n").length}),v=String(v).length+1);let y=w=>{let x;x=p&&""!=g?ansiColor(f.linenum,0<w?$ft("% "+v+"d",n):" ".repeat(v))+ansiColor(f.linediv,`${f.linesep}`):"";n+=w;return x};h.forEach((w,x)=>{x=w.value;isString(x)&&(""!=g?(x=x.split(g),""==x[x.length-1]&&x.pop()):x=[x]);m.add(w.added?x.map(G=>y(1)+ansiColor(f.added,(""!=g?"+":"")+G)).join(ansiColor("RESET",
g)):w.removed?x.map(G=>y(0)+ansiColor(f.removed,(""!=g?"-":"")+G)).join(ansiColor("RESET",g)):x.map(G=>y(1)+ansiColor(f.common,(""!=g?" ":"")+G)).join(ansiColor("RESET",g)))})}return Array.from(m).join(ansiColor("RESET",g))}return $from(h).select({count:__,added:!1,removed:!1,value:[]})};return isString(d)||isString(b)?toBoolean(a.diffwords)?e(JsDiff.diffWords(d,b,c.options)):toBoolean(a.diffwordswithspace)?e(JsDiff.diffWordsWithSpace(d,b,c.options)):toBoolean(a.difflines)?e(JsDiff.diffLines(d,b,
c.options),"\n"):toBoolean(a.diffsentences)?e(JsDiff.diffSentences(d,b,c.options),"\n"):e(JsDiff.diffChars(d,b,c.options)):isArray(d)&&isArray(b)&&!toBoolean(a.color)?e(JsDiff.diffArrays(d,b,c.options)):e(JsDiff.diffJson(d,b,c.options),"\n")}},jsonschemagen:b=>{if(toBoolean(a.jsonschemagen))return ow.loadObj(),ow.obj.schemaGenerator(b)},jsonschemacmd:b=>C.jsonschema(b),jsonschema:b=>{isMap(b)||k(-1,"jsonschema is only supported with a map.");isUnDef(a.jsonschema)&&isUnDef(a.jsonschemacmd)&&k(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");
ow.loadObj();var c;if(isDef(a.jsonschemacmd)){var d=$sh(a.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:k(-1,"Error executing the command '"+a.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(a.jsonschema);isMap(c)||k(-1,"The schema provided is not a valid JSON schema.");ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(b),errors:c.errors}},sortmapkeys:b=>{if(toBoolean(a.sortmapkeys)&&isObject(b)){let c=(d,f)=>{let e=Object.keys(d).sort(),h={};for(let g=0;g<e.length;g++){let m=
e[g],n=d[m];Array.isArray(n)?h[m]=n.map(p=>"object"===typeof p&&null!==p&&void 0!==p?sortMapKeys(p,f):p):h[m]=f&&"object"===typeof n&&null!==n&&void 0!==n?c(n,f):n}return h};return c(b,!0)}return b},searchkeys:b=>isObject(b)?searchKeys(b,a.searchkeys):b,searchvalues:b=>isObject(b)?searchValues(b,a.searchvalues):b,maptoarray:b=>toBoolean(a.maptoarray)&&isMap(b)?$m4a(b,a.maptoarraykey):b,arraytomap:b=>toBoolean(a.arraytomap)&&isArray(b)?$a4m(b,a.arraytomapkey,toBoolean(a.arraytomapkeepkey)):b,flatmap:b=>
toBoolean(a.flatmap)&&isObject(b)?ow.loadObj().flatMap(b,a.flatmapkey):b,merge:b=>{if(toBoolean(a.merge)&&isArray(b)&&1<b.length){for(var c,d=0;d<b.length;d++)c=0==d?b[d]:merge(c,b[d]);return c}return b},correcttypes:b=>{toBoolean(a.correcttypes)&&isObject(b)&&traverse(b,(c,d,f,e)=>{switch(descType(d)){case "number":isString(d)&&(e[c]=Number(d));break;case "string":"true"==d.trim().toLowerCase()||"false"==d.trim().toLowerCase()?e[c]=toBoolean(d):d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?
e[c]=new Date(d):d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&(e[c]=new Date(d))}});return b},removenulls:b=>{toBoolean(a.removenulls)&&traverse(b,(c,d,f,e)=>{(isNull(d)||isUnDef(d))&&delete e[c]});return b},removedups:b=>{if(toBoolean(a.removedups)){if(isArray(b)){var c=new Set,d=[];b.forEach(f=>{var e=f;isObject(f)&&(e=sortMapKeys(e));e=stringify(e,__,!0);c.has(e)||(c.add(e),d.push(f))});return d}k(-1,
"removedups is only supported for arrays")}return b},llmprompt:b=>{if(isString(a.llmprompt)){a.llmenv=_$(a.llmenv,"llmenv").isString().default("OAFP_MODEL");a.llmoptions=_$(a.llmoptions,"llmoptions").isString().default(__);var c=$llm(isDef(a.llmoptions)?a.llmoptions:$sec("system","envs").get(a.llmenv));isDef(a.llmconversation)&&io.fileExists(a.llmconversation)&&c.getGPT().setConversation(io.readFileJSON(a.llmconversation));var d="json",f=!0;isString(a.input)&&("md"==a.input&&(d="markdown",f=!1),"mdtable"==
a.input&&(d="markdown table",f=!1),"hsperf"==a.input&&(d="java hsperf file"),"raw"==a.input&&(d="raw",f=!1));c=c.withContext(f?stringify(b,__,!0):b,isDef(a.llmcontext)?a.llmcontext:`${d} input data`);if(isString(a.output)&&("md"==a.output||"mdtable"==a.output||"raw"==a.output))return b=c.prompt(a.llmprompt),isDef(a.llmconversation)&&io.writeFileJSON(a.llmconversation,c.getGPT().getConversation(),""),b;b=c.promptJSON(a.llmprompt);isDef(a.llmconversation)&&io.writeFileJSON(a.llmconversation,c.getGPT().getConversation(),
"");return b}return b},splitlines:b=>toBoolean(a.splitlines)&&isString(b)?b.split(/\r?\n/):b,regression:b=>{if(isString(a.regression)){ow.loadAI();var c=ow.ai.regression(),d=_$(a.regressionpath,"regressionpath").isString().default("@");let f=u(_$(a.regressionoptions,"regressionoptions").isString().default("{order:2,precision:5}"));d=$path(b,d);if(isArray(d)){if(isString(a.regressionx)){let h=$path(b,a.regressionx);d=d.map((g,m)=>[h[m],g])}else d=d.map((h,g)=>[g+1,h]);let e;switch(a.regression){case "exp":e=
c.exponential(d,f);break;case "poly":e=c.polynomial(d,f);break;case "power":e=c.power(d,f);break;case "log":e=c.logarithmic(d,f);break;default:e=c.linear(d,f)}return isDef(e)&&isDef(e.points)?(isString(a.regressionforecast)&&(b=$path(b,a.regressionforecast),isArray(b)?b.forEach(h=>{e.points.push(e.predict(h))}):k(-1,"Invalid array of x for regression forecast")),e.points.map(h=>({x:h[0],y:h[1]}))):e}k(-1,"Invalid data for regression analysis")}return b},normalize:b=>{if(isString(a.normalize)){var c=
u(a.normalize);if(isMap(c)){ow.loadAI();if(isMap(b))return ow.ai.normalize.withSchema(b,c,!0);if(isArray(b))return b.map(d=>ow.ai.normalize.withSchema(d,c,!0))}else k(-1,"Invalid normalize schema")}else k(-1,"Invalid normalize schema")},denormalize:b=>{if(isString(a.denormalize)){var c=u(a.denormalize);if(isMap(c)){ow.loadAI();isUnDef(ow.ai.normalize.denormalizeWithSchema)&&k(-1,"This version of OpenAF does not support denormalizeWithSchema");if(isMap(b))return ow.ai.normalize.denormalizeWithSchema(b,
c,!1);if(isArray(b))return b.map(d=>ow.ai.normalize.denormalizeWithSchema(d,c,!1))}else k(-1,"Invalid denormalize schema")}else k(-1,"Invalid denormalize schema")},kmeans:b=>{isNumber(a.kmeans)||(a.kmeans=5);isArray(b)||k(-1,"For kmeans transform you need to provide an array as input");ow.loadAI();return ow.ai.cluster({type:"kmeans",numberOfClusters:Number(a.kmeans)}).classify(b)}},F=new Map([["?",(b,c)=>{b=Array.from(F.keys()).filter(d=>"?"!=d).sort();z(b,c)}],["pm",(b,c)=>{z(b,c)}],["key",(b,c)=>
{z(b,c)}],["html",(b,c)=>{let d;c=!1;a.htmlopen=toBoolean(_$(a.htmlopen,"htmlopen").isString().default("true"));a.htmlwait=_$(a.htmlwait,"htmlwait").isNumber().default(2500);a.htmlopen&&(d=io.createTempFile("oafp_",".html"));ow.loadTemplate();isString(b)?(b=ow.template.html.genStaticVersion(ow.template.parseMD2HTML(b,!toBoolean(a.htmlpart),!toBoolean(a.htmlcompact))),b=b.replace("<html>",'<html><meta charset="utf-8">')):(b=ow.template.html.parseMap(b,!0),b='<html><meta charset="utf-8"><style>'+b.css+
"</style><body>"+b.out+"</body></html>");a.htmlopen&&(io.writeFileString(d,b),c=openInBrowser("file:///"+d.replace(/\\/g,"/")));c?sleep(a.htmlwait,!0):q(b)}],["ctable",(b,c)=>{z(b,c)}],["stable",(b,c)=>{z(b,c)}],["table",(b,c)=>{z(b,c)}],["log",(b,c)=>{if(isString(b)&&toBoolean(a.logprintall))q(b.replace(/\n$/,""));else if(c=b,isMap(b)&&(c=[b]),isArray(c)){isUnDef(a.logtheme)&&isDef(getEnv("OAFP_LOGTHEME"))&&(a.logtheme=getEnv("OAFP_LOGTHEME"));let d=u(_$(a.logtheme,"logtheme").isString().default(""));
d=merge({errorLevel:"RED,BOLD",warnLevel:"YELLOW",timestamp:"BOLD"},d);c.forEach(f=>{if(isMap(f)){let e=isDef(f["@timestamp"])?f["@timestamp"]:__,h=isDef(f.level)?f.level:__;f=isDef(f.message)?f.message:__;let g;isDef(h)&&(0<=h.toLowerCase().indexOf("err")&&(g=d.errorLevel),0<=h.toLowerCase().indexOf("warn")&&(g=d.warnLevel));isDef(e)&&24<e.length&&(e=e.substring(0,23)+"Z");(isDef(f)||isDef(e))&&q(ansiColor(d.timestamp,e)+(isDef(h)?" | "+ansiColor(g,h):"")+" | "+ansiColor(g,f))}})}}],["raw",(b,c)=>
{isString(b)?q(b):q(stringify(b))}],["ini",(b,c)=>{isString(b)||(ow.loadJava(),c=new ow.java.ini,q(c.put(b).save()))}],["toml",(b,c)=>{isUnDef(af.toTOML)&&k(-1,"TOML support not found.");if(isMap(b))q(af.toTOML(b));else if(isArray(b))q(af.toTOML({list:b}));else return __}],["mdyaml",(b,c)=>{isArray(b)?b.forEach((d,f)=>{z(d,merge(c,{__format:"yaml"}));f<b.length-1&&q("---\n")}):z(b,merge(c,{__format:"yaml"}))}],["mdtable",(b,c)=>{isArray(b)&&(ow.loadTemplate(),q(ow.template.md.table(b)))}],["template",
(b,c)=>{isString(b)||(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(a.template)&&isUnDef(a.templatepath)&&k(-1,"For out=handlebars you need to provide a template=someFile.hbs or templatepath=..."),a.templatedata=_$(a.templatedata,"templatedata").isString().default("@"),q($t(isUnDef(a.template)?$path(a.__origr,a.templatepath):io.readFileString(a.template),$path(b,a.templatedata))))}],["openmetrics",(b,c)=>{isString(b)?k(-1,
"For out=openmetrics input needs to be an array or map."):(ow.loadMetrics(),b=ow.metrics.fromObj2OpenMetrics(b,a.metricsprefix,a.metricstimestamp),b=b.split("\n").map(d=>{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).join("\n"),q(b))}],["pjson",(b,c)=>{c.__format="prettyjson";z(b,c)}],["ndjson",(b,c)=>{isArray(b)?b.forEach(d=>q(stringify(d,__,""))):isMap(b)?q(stringify(b,
__,"")):z(b,c)}],["base64",(b,c)=>{b=isString(b)?b:stringify(b);toBoolean(a.base64gzip)?q(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(b))))):q(af.fromBytes2String(af.toBase64Bytes(b)))}],["grid",(b,c)=>{isUnDef(a.grid)&&k(-1,"For out=grid you need to provide a grid=...");c=u(_$(a.grid,"grid").isString().$_());isArray(c)&&0<c.length&&isArray(c[0])?(c.forEach((d,f)=>{d.forEach((e,h)=>{if(isUnDef(e.type)||"empty"!=e.type){if(isDef(e.cmd)){var g=$sh(e.cmd).getJson(0);g=isDef(g)&&
isDef(g.stdout)?g.stdout:""}else g=b;if("chart"==e.type||"bar"==e.type)h="_chrt"+(f+1)+"."+(h+1),e.obj=("chart"==e.type?h+" ":"")+I(g,e.obj,h),isUnDef(e.title)&&(e.title="Chart "+h);isDef(e.path)?(e.obj=$path(g,e.path),isUnDef(e.title)&&(e.title=e.path)):isString(g)?e.obj=g:isObject(g)&&"chart"!=e.type&&(e.obj=$path(g,"@"))}else e.obj=""})}),c=ow.format.string.grid(c,__,__," ",!0),q(c)):k(-1,"Invalid grid parameter: '"+stringify(a.grid,__,"")+"'")}],["chart",(b,c)=>{isUnDef(a.chart)&&k(-1,'For out=chart you need to provide a chart="<units> [<path[:color][:legend]>...]"');
isUnDef(splitBySepWithEnc)&&k(-1,"Output=chart is not supported in this version of OpenAF");b=I(b,a.chart);0<b.length&&(toBoolean(a.chartcls)&&cls(),q(printChart("oafp "+b)))}],["schart",(b,c)=>{isUnDef(a.schart)&&k(-1,'For out=schart you need to provide a schart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&k(-1,"Output=schart is not supported in this version of OpenAF");b=I(b,a.schart,"_oafp_sfn_","soafp");0<b.length&&q(printChart("soafp "+b))}],["ch",(b,c)=>{isUnDef(a.ch)&&
k(-1,'For out=ch you need to provide a ch="(type: ...)"');isUnDef(a.chkey)&&k(-1,'For out=ch you need to provide a chkey="key1, key2"');b=isMap(b)?[b]:b;a.ch=u(a.ch);isMap(a.ch)?(isUnDef(a.ch.type)&&k(-1,"ch.type is not defined."),isDef(a.ch.lib)&&loadLib(a.ch.lib),"remote"==a.ch.type?$ch("oafp::outdata").createRemote(a.ch.url):$ch("oafp::outdata").create(a.ch.type,a.ch.options),toBoolean(a.chunset)?$ch("oafp::outdata").unsetAll(a.chkey.split(",").map(d=>d.trim()),b):$ch("oafp::outdata").setAll(a.chkey.split(",").map(d=>
d.trim()),b),$ch("oafp::outdata").destroy()):k(-1,"Invalid ch parameter")}],["db",(b,c)=>{(!isArray(b)||1>b.length)&&k(-1,"db is only supported for filled arrays/lists");a.dbtable=_$(a.dbtable,"outdbtable").isString().default("data");a.dbnocreate=toBoolean(_$(a.dbnocreate,"outdbnocreate").isString().default("false"));a.dbicase=toBoolean(_$(a.dbicase,"outdbicase").isString().default("false"));a.dbbatchsize=_$(a.dbbatchsize,"dbbatchsize").isNumber().default(__);ow.loadObj();try{isString(a.dbjdbc)||
k(-1,"dbjdbc URL is not defined.");isDef(a.dblib)&&loadLib("jdbc-"+a.dblib+".js");var d=new DB(a.dbjdbc,a.dbuser,a.dbpass,a.dbtimeout);if(!a.dbnocreate)try{var f=ow.obj.fromObj2DBTableCreate(a.dbtable,b,__,!a.dbicase);d.u(f);d.commit()}catch(n){d.rollback(),k(-1,"Error creating table: "+n)}var e=Object.keys(ow.obj.flatMap(b[0]));var h=a.dbicase?e.join(",").toUpperCase():'"'+e.join('", "')+'"';let m="";var g=b.map(n=>{var p=ow.obj.flatMap(n);n=[];for(var v in e)n.push(p[e[v]]);v=e.map(y=>String(p[y]));
n="INSERT INTO "+(a.dbicase?a.dbtable:'"'+a.dbtable+'"')+" ("+h+") VALUES ("+v.map(y=>"?").join(", ")+")";n.length>m.length&&(m=String(n));return v});d.usArray(m,g,a.dbbatchsize)}catch(m){isDef(d)&&d.rollback(),printErr(m),k(-1,"Error connecting to the database: "+m)}finally{isDef(d)&&(d.commit(),d.close())}}],["sql",(b,c)=>{(!isArray(b)||1>b.length)&&k(-1,"sql is only supported for filled arrays/lists");a.sqltable=_$(a.sqltable,"sqltable").isString().default("data");a.sqlicase=toBoolean(_$(a.sqlicase,
"sqlicase").isString().default("false"));a.sqlnocreate=toBoolean(_$(a.sqlnocreate,"sqlnocreate").isString().default("false"));ow.loadObj();a.sqlnocreate||q(ow.obj.fromObj2DBTableCreate(a.sqltable,b,__,!a.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(b[0]));var f=a.sqlicase?d.join(",").toUpperCase():'"'+d.join('", "')+'"';q(b.map(e=>{var h=ow.obj.flatMap(e);e=[];for(var g in d)e.push(h[d[g]]);g=d.map(m=>{m=h[m];isString(m)&&(m="'"+m.replace(/'/g,"''")+"'");isNull(m)&&(m="null");return m});return"INSERT INTO "+
(a.sqlicase?a.sqltable:'"'+a.sqltable+'"')+" ("+f+") VALUES ("+g.join(",")+");"}).join("\n"))}],["xls",(b,c)=>{if(!isString(b)){try{includeOPack("plugin-XLS")}catch(h){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");if(isMap(b)){ow.loadObj();var d=ow.obj.flatMap(b);var f=Object.keys(d).map(h=>({key:h,value:d[h]}))}isArray(b)&&(f=b);traverse(f,(h,g,m,n)=>{isString(g)&&g.startsWith("=")&&(n[h]="'"+g)});b=!1;c=a.xlsfile;isUnDef(a.xlsfile)&&
(b=!0,a.xlsfile=io.createTempFile("oafp",".xlsx"));c=new XLS(isDef(c)&&io.fileExists(c)?c:__);var e=c.getSheet(_$(a.xlssheet,"xlssheet").isString().default("data"));a.xlsformat=_$(a.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');a.xlsformat=u(a.xlsformat);ow.format.xls.setTable(c,e,"A",1,f,__,a.xlsformat);c.writeFile(a.xlsfile);c.close();a.xlsopenwait=_$(a.xlsopenwait,"xlsopenwait").isNumber().default(5E3);a.xlsopen=toBoolean(_$(a.xlsopen,
"xlsopen").isString().default("true"));a.xlsopen&&(ow.format.isWindows()?($sh("start "+a.xlsfile).exec(),b&&sleep(a.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+a.xlsfile).exec(),b&&sleep(a.xlsopenwait,!0)))}}]]),E=new Map([["?",(b,c)=>{b=Array.from(E.keys()).filter(d=>"?"!=d).sort();l(b,c)}],["pm",(b,c)=>{r();isDef(__pm._map)&&(b=__pm._map);isDef(__pm._list)&&(b=__pm._list);l(b,c)}],["jsonschema",(b,c)=>{r();b=jsonParse(b,__,__,!0);isMap(b)||k(-1,"jsonschema is only supported with a map.");
ow.loadObj();b=ow.obj.schemaSampleGenerator(b);l(b,c)}],["yaml",(b,c)=>{r();b=af.fromYAML(b);l(b,c)}],["xml",(b,c)=>{r();a.xmlignored=_$(a.xmlignored,"xmlignored").isString().default(__);a.xmlprefix=_$(a.xmlprefix,"xmlprefix").isString().default(__);a.xmlfiltertag=toBoolean(_$(a.xmlfiltertag,"xmlfiltertag").isString().default(__));0<=b.indexOf("<?xml")&&(b=b.substring(b.indexOf("?>")+2).trim());0<=b.indexOf("<!DOCTYPE")&&(b=b.substring(b.indexOf(">")+1).trim());b=af.fromXML2Obj(b,a.xmlignored,a.xmlprefix,
!a.xmlfiltertag);l(b,c)}],["lines",(b,c)=>{isBoolean(a.linesjoin)||(a.linesjoin=toBoolean(_$(a.linesjoin,"linesjoin").isString().default(__)));r();let d=__,f=[],e=g=>{g=g.split("\n").map(n=>{let p="",v=0;for(let y=0;y<n.length;y++)if("\t"===n[y]){let w=8-v%8;p+=" ".repeat(w);v+=w}else p+=n[y],v++;return p}).join("\n");if(isUnDef(d))return d=[],lastPos=0,isUnDef(a.linesvisualsepre)&&(a.linesvisualsepre=" \\s+"),g.split(new RegExp(a.linesvisualsepre)).forEach(n=>{d.push(n);n=g.substring(lastPos).match(new RegExp(ow.format.escapeRE(n)+
"("+a.linesvisualsepre+"|$)"));!isNull(n)&&isDef(n.index)?(f.push(lastPos+n.index),lastPos=n.index):k(-1,"Problem with linesvisual to find header positioning.")}),__;var m={};f.forEach((n,p)=>{m[d[p]]=g.substring(n,p+1<f.length?f[p+1]-1:__).trim()});return m};if(a.linesjoin)if(isDef(a.file)&&isUnDef(a.cmd)&&(b=io.readFileString(a.file)),isDef(a.cmd)&&(b=A(a.cmd,!0)),b=b.split(/\r?\n/),toBoolean(a.linesvisual)){var h=[];b.forEach(g=>{0!=g.length&&(g=e(g),isDef(g)&&h.push(g))});l(h,c)}else l(b,c);else b=
isDef(a.file)&&isUnDef(a.cmd)?io.readFileStream(a.file):isDef(a.cmd)?af.fromBytes2InputStream(A(a.cmd)):af.fromString2InputStream(b),ioStreamReadLines(b,g=>{toBoolean(a.linesvisual)?(g=e(g),isDef(g)&&l(g,clone(c),!0)):l(g,clone(c),!0)}),b.close()}],["ndjson",(b,c)=>{isBoolean(a.ndjsonjoin)||(a.ndjsonjoin=toBoolean(_$(a.ndjsonjoin,"ndjsonjoin").isString().default(__)));r();global.__ndjsonbuf=__;var d=(e,h)=>{isUnDef(global.__ndjsonbuf)&&0!=e.length&&e.trim().startsWith("{")&&(global.__ndjsonbuf="");
if(isDef(global.__ndjsonbuf)){if(0!=e.length&&!e.trim().endsWith("}")){global.__ndjsonbuf+=e.trim();return}0<global.__ndjsonbuf.length&&(e=global.__ndjsonbuf+e,global.__ndjsonbuf=__)}0==e.length||0<e.length&&"{"!=e.trim().substring(0,1)?(h(e),global.__ndjsonbuf=__):h(e)},f=e=>{var h=[];e.split("\n").filter(g=>0<g.length).forEach(g=>d(g,m=>h.push(jsonParse(m,__,__,toBoolean(a.ndjsonfilter)))));return h};a.ndjsonjoin?(isDef(a.file)&&isUnDef(a.cmd)&&(b=io.readFileString(a.file)),isDef(a.cmd)&&(b=A(a.cmd,
!0)),l(f(b),c)):(b=isDef(a.file)&&isUnDef(a.cmd)?io.readFileStream(a.file):isDef(a.cmd)?af.fromBytes2InputStream(A(a.cmd)):af.fromString2InputStream(b),ioStreamReadLines(b,e=>{d(e,h=>l(jsonParse(h,__,__,!0),clone(c),!0))}),b.close())}],["md",(b,c)=>{r();__conConsole=__ansiColorFlag=!0;isUnDef(a.format)&&isUnDef(c.__format)&&(a.format="md",c.__format="md");l(b,c)}],["mdtable",(b,c)=>{r();ow.loadTemplate();b=ow.template.md.fromTable(b);l(b,c)}],["raw",(b,c)=>{r();l(b,c)}],["ini",(b,c)=>{r();ow.loadJava();
var d=new ow.java.ini;b=isDef(a.file)?d.loadFile(a.file).get():d.load(b).get();l(b,c)}],["sql",(b,c)=>{isString(b)?l(af.fromSQL(b).ast,c):l(b,c)}],["openmetrics",(b,c)=>{isString(b)?(ow.loadMetrics(),l(ow.metrics.fromOpenMetrics2Array(b),c)):l(b,c)}],["ch",(b,c)=>{r();isUnDef(a.inch)&&k(-1,"inch is not defined.");a.inch=u(a.inch);if(isMap(a.inch)){isUnDef(a.inch.type)&&k(-1,"inch.type is not defined.");isDef(a.inch.lib)&&loadLib(a.inch.lib);"remote"==a.inch.type?$ch("oafp::indata").createRemote(a.inch.url):
$ch("oafp::indata").create(a.inch.type,a.inch.options);var d=u(b);toBoolean(a.inchall)||0==b.trim().length?l($ch("oafp::indata").getAll(isMap(d)?d:__),c):l($ch("oafp::indata").get(isMap(d)?d:__),c);$ch("oafp::indata").destroy()}else k(-1,"inch is not a valid map.")}],["db",(b,c)=>{if(isString(b)){r();isString(a.indbjdbc)||k(-1,"indbjdbc URL is not defined.");try{isDef(a.indblib)&&loadLib("jdbc-"+a.indblib+".js");var d=new DB(a.indbjdbc,a.indbuser,a.indbpass,a.indbtimeout);d.convertDates(!0);if(toBoolean(a.indbexec)){var f=
d.u(b);l({affectedRows:f},c);d.commit()}else f=d.q(b),isMap(f)&&isArray(f.results)?l(f.results,c):k(-1,"Invalid DB result: "+stringify(f))}catch(e){printErr(e.message),isDef(d)&&d.rollback(),k(-1,"Error executing SQL: "+e.message)}finally{isDef(d)&&(d.rollback(),d.close())}}else k(-1,"db is only supported with a SQL string.")}],["xls",(b,c)=>{r();try{includeOPack("plugin-XLS")}catch(f){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}a.xlssheet=
_$(a.xlssheet,"xlssheet").isString().default(0);a.xlsevalformulas=toBoolean(_$(a.xlsevalformulas,"xlsevalformulas").isString().default(!0));a.xlscol=_$(a.xlscol,"xlscol").isString().default("A");a.xlsrow=_$(a.xlsrow,"xlsrow").isString().default(1);plugin("XLS");if(isDef(a.file)||isDef(a.cmd)){b=new XLS(isDef(a.cmd)?A(a.cmd):a.file);var d=b.getSheet(a.xlssheet);d=b.getTable(d,a.xlsevalformulas,a.xlscol,a.xlsrow);b.close();isDef(d)&&isMap(d)&&(d=d.table);l(d,c)}else k(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],
["csv",(b,c)=>{r();if(isDef(a.file)||isDef(a.cmd)){var d=isDef(a.cmd)?af.fromBytes2InputStream(A(a.cmd)):io.readFileStream(a.file);b=$csv(a.inputcsv).fromInStream(d).toOutArray();d.close()}else b=$csv(a.inputcsv).fromInString(b).toOutArray();l(b,c)}],["hsperf",(b,c)=>{if(isDef(a.file)||isDef(a.cmd)){r();ow.loadJava();var d=isDef(a.cmd)?ow.java.parseHSPerf(A(a.cmd)):ow.java.parseHSPerf(a.file);d.__ts=new Date;var f=0,e=0;d.sun.gc.generation.forEach(h=>{h.space.forEach(g=>{e+=Number(g.used);f=isNumber(g.capacity)?
f+Number(g.capacity):f;d.sun.gc["__percUsed_"+g.name]=100*g.used/g.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;b=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);d.sun.gc.__ygc=isDef(b)?Number(b.invocations):0;d.sun.gc.__ygct=isDef(b)?Number(b.time/1E9):0;b=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name","").at(0);
d.sun.gc.__fgc=isDef(b)?Number(b.invocations):0;d.sun.gc.__fgct=isDef(b)?Number(b.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/1E9;d.java.__mem={total:f,used:e,free:f-e,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-d.sun.gc.metaspace.used};l(d,c)}else k(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["rawhex",(b,c)=>{a.inrawhexline=_$(a.inrawhexline,"inrawhexline").isNumber().default(__);
r();b=isDef(a.file)||isDef(a.cmd)?isDef(a.cmd)?A(a.cmd):io.readFileBytes(a.file):af.fromString2Bytes(b);b=ow.format.string.toHexArray(b,a.inrawhexline);b.forEach(d=>{d.characters=d.characters.replace(/[\x00-\x1F\x80-\xFF]/g,".")});l(b,c)}],["base64",(b,c)=>{r();b=toBoolean(a.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(b,!0))):af.fromBytes2String(af.fromBase64(b));l(b,c)}],["oafp",(b,c)=>{a.__inception=!0;b=u(b);var d="_oafp_key_"+genUUID();if(isMap(b))b.out="key",b.__key=d,b.__inception=
!0,oafp(b),b=$get(d),$unset(d),l(b,c);else if(isArray(b)){ow.loadObj();$set(d,!0);var f=new ow.obj.syncArray;b=b.map((e,h)=>{var g=d+"_"+String(h);e.out="key";e.__key=g;e.__inception=!0;return $do(()=>{oafp(e);f.add($get(g));$unset(g)}).catch(m=>{sprintErr(m)})});$doWait($doAll(b));l(f.toArray(),c)}else k(-1,"oafp input data needs to be a map or an array.")}],["llm",(b,c)=>{a.llmenv=_$(a.llmenv,"llmenv").isString().default("OAFP_MODEL");a.llmoptions=_$(a.llmoptions,"llmoptions").isString().default(__);
isUnDef(a.llmoptions)&&!isString(getEnv(a.llmenv))&&k(-1,"llmoptions not defined and "+a.llmenv+" not found.");r();var d=$llm(isDef(a.llmoptions)?a.llmoptions:$sec("system","envs").get(a.llmenv));isDef(a.llmconversation)&&io.fileExists(a.llmconversation)&&d.getGPT().setConversation(io.readFileJSON(a.llmconversation));b="md"==a.output||"mdtable"==a.output||"raw"==a.output?d.prompt(b):d.promptJSON(b);isDef(a.llmconversation)&&io.writeFileJSON(a.llmconversation,d.getGPT().getConversation(),"");l(jsonParse(b,
__,__,isString(b)),c)}],["llmmodels",(b,c)=>{a.llmenv=_$(a.llmenv,"llmenv").isString().default("OAFP_MODEL");a.llmoptions=_$(a.llmoptions,"llmoptions").isString().default(__);isUnDef(a.llmoptions)&&!isString(getEnv(a.llmenv))&&k(-1,"llmoptions not defined and "+a.llmenv+" not found.");r();b=$llm(isDef(a.llmoptions)?a.llmoptions:$sec("system","envs").get(a.llmenv));isUnDef(b.getModels)&&k(-1,"OpenAF support for llm model listing API not found.");l(b.getModels(),c)}],["toml",(b,c)=>{r();isUnDef(af.fromTOML)&&
k(-1,"TOML support not found.");l(af.fromTOML(b),c)}],["slon",(b,c)=>{r();l(af.fromSLON(b),c)}],["json",(b,c)=>{r();l(jsonParse(b,__,__,isString(b)),c)}]]),D={};isString(a.libs)&&(a.libs=a.libs.split(",").map(b=>b.trim()).filter(b=>0<b.length));isDef(__flags.OAFP)&&isArray(__flags.OAFP.libs)&&isArray(a.libs)?a.libs=__flags.OAFP.libs.concat(a.libs):a.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(a.libs)&&a.libs.forEach(b=>{try{var c=require("oafp_"+b+".js");if(isDef(c.oafplib)){var d=c.oafplib(clone(a),
l,z,{_runCmd2Bytes:A,_fromJSSLON:u,_msg:"(processing data...)",_showTmpMsg:r,_clearTmpMsg:P,_chartPathParse:I,_exit:k,_print:q,_o$o:z});isMap(d)&&(isArray(d.fileExtensions)&&d.fileExtensions.forEach(f=>{var e=f.ext;f=f.type;K.has(e)?printErr("WARN: Extension '"+e+"' already exists."):K.set(e,f)}),isArray(d.fileExtensionsNoMem)&&d.fileExtensionsNoMem.forEach(f=>{f=f.ext;N.has(f)?printErr("WARN: Extension '"+f+"' already exists."):N.add(f)}),isArray(d.input)&&d.input.forEach(f=>{var e=f.type;f=f.fn;
E.has(e)?printErr("WARN: Input type '"+e+"' already exists."):E.set(e,f)}),isArray(d.inputLine)&&d.inputLine.forEach(f=>{var e=f.type;f=f.fn;isUnDef(_inputLinesFns[e])?O[e]=f:printErr("WARN: Input type '"+e+"' already exists.")}),isArray(d.transform)&&d.transform.forEach(f=>{var e=f.type;f=f.fn;isUnDef(C[e])?C[e]=f:printErr("WARN: Transform '"+e+"' already exists.")}),isArray(d.output)&&d.output.forEach(f=>{var e=f.type;f=f.fn;F.has(e)?printErr("WARN: Output type '"+e+"' already exists."):F.set(e,
f)}),isString(d.help)&&(D[b.toLowerCase()]=d.help))}else printErr("WARN: Library '"+b+"' does not have oafplib.")}catch(f){printErr("WARN: Library '"+b+"' error: "+f)}});(""==a["-h"]||isString(a.help)&&0<a.help.length)&&J();a.format=_$(a.format,"format").isString().default(__);__initializeCon();String(java.lang.System.getProperty("os.name")).match(/Windows/)||__con.getTerminal().settings.set("sane");if(isDef(a.secKey)){toBoolean(a.secEnv)&&(a.secRepo="system",a.secBucket="envs");a.secRepo=_$(a.secRepo,
"secRepo").isString().default(getEnv("OAFP_SECREPO"));a.secBucket=_$(a.secBucket,"secBucket").isString().default(getEnv("OAFP_SECBUCKET"));a.secPass=_$(a.secPass,"secPass").isString().default(getEnv("OAFP_SECPASS"));a.secMainPass=_$(a.secMainPass,"secMainPass").isString().default(getEnv("OAFP_SECMAINPASS"));a.secFile=_$(a.secFile,"secFile").isString().default(getEnv("OAFP_SECFILE"));let b=$sec(a.secRepo,a.secBucket,a.secPass,a.secMainPass,a.secFile).get(secKey);isDef(b)&&Object.keys(b).forEach(c=>
a[c]=b[c])}var B={__format:a.format,__from:a.from,__ifrom:a.ifrom,__isql:a.isql,__sql:a.sql,__path:a.path,__opath:a.opath,__csv:a.csv,__pause:a.pause,__key:a.__key};isDef(a.inputcsv)&&(a.inputcsv=u(a.inputcsv));isDef(a.incsv)&&(a.incsv=u(a.incsv));isDef(a.csv)&&(a.csv=u(a.csv));var R=!1;if(""==a["-v"]||isString(a.version)&&0<a.version.length)R=!0,Q();if(""==a["-examples"]||isString(a.examples)&&0<a.examples.length)a.url="https://ojob.io/oafp-examples.yaml",a.in="yaml",isString(a.examples)&&0<a.examples.length?
(B.__format="template",B.__path="data",a.templatepath="tmpl",B.__sql="select * where d like '%"+a.examples+"%'"):(B.__path="data[].{category:c,subCategory:s,description:d}",B.__from="sort(category,subCategory,description)",B.__format="ctable"),delete a["-examples"],delete a.file;var t="",L=!1;isDef(a.outfile)&&("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"===typeof global.__oafp_streams[a.outfile]&&(global.__oafp_streams[a.outfile]={s:io.writeFileStream(a.outfile,
toBoolean(a.outfileappend))}));J=()=>{if(R)t=Q();else if(a.jsonprefix=_$(a.jsonprefix,"jsonprefix").isString().default(__),a.jsondesc=toBoolean(_$(a.jsondesc,"jsondesc").default("false")),isDef(a.insecure)&&toBoolean(a.insecure)&&ow.loadJava().setIgnoreSSLDomains(),isDef(a.file)){if(0>a.file.indexOf("::")&&!io.fileExists(a.file)&&k(-1,"ERROR: File not found: '"+a.file+"'"),!N.has(a.type))if("json"==a.type||isUnDef(a.type))if(a.jsondesc){var b=new Set;io.readStreamJSON(a.file,d=>{d=d.substring(2);
isDef(a.jsonprefix)?d.startsWith(a.jsonprefix)&&b.add(d):b.add(d);return!1});t=stringify(Array.from(b),__,"")}else if(isDef(a.jsonprefix)){var c=io.readStreamJSON(a.file,d=>d.substring(2).startsWith(a.jsonprefix));t=stringify(c,__,"")}else t=io.readFileString(a.file);else t=io.readFileString(a.file)}else if(a.jsondesc&&k(-1,"ERROR: jsondesc only available for file input."),a.jsonprefix&&k(-1,"ERROR: jsonprefix only available for file input."),isDef(a.cmd))t=A(a.cmd,!0);else if(isString(a.data))t=
a.data;else if(isDef(a.url)){a.urlmethod=_$(a.urlmethod,"urlmethod").isString().default("GET");c=u(_$(a.urlparams).isString().default("{}"));let d;isDef(a.urldata)&&(d=u(a.urldata));switch(a.urlmethod.toLowerCase()){case "post":t=$rest(c).post(a.url,d);break;case "put":t=$rest(c).put(a.url,d);break;case "delete":t=$rest(c).delete(a.url,d);break;default:t=$rest(c).get(a.url)}isObject(t)&&(t=stringify(t,__,""))}else"pm"!=a.input&&(t=[],io.pipeLn(d=>{isDef(O[a.type])?O[a.type](M(d),clone(B))&&t.push(d):
t.push(d);return!1}),t=t.join("\n"));L||(isUnDef(a.type)&&(isDef(a.file)&&(c=a.file.substring(a.file.lastIndexOf(".")),K.has(c)&&(a.type=K.get(c))),isUnDef(a.type)&&(c=t.trim(),c.startsWith("{")||c.startsWith("[")?a.type="json":c.startsWith("(")?a.type="slon":c.startsWith("<")?a.type="xml":isString(c)&&0<c.length?1<c.substring(0,c.indexOf("\n")).split(",").length?a.type="csv":c.substring(0,0<c.indexOf(": "))&&(a.type="yaml"):k(-1,"Please provide the input type."))),isDef(a.type)&&E.has(a.type)?E.get(a.type)(t,
B):(isString(a.type)&&printErr("WARN: "+a.type+" input type not supported. Using json."),E.get("json")(t,B)),delete a.__origr)};isDef(a["-debug"])&&printErr("DEBUG: "+colorify(a));if(isNumber(a.loop))for(;;)toBoolean(a.loopcls)&&(isDef(a.outfile)?(global.__oafp_streams[a.outfile].close(),global.__oafp_streams[a.outfile]=io.writeFileStream(a.outfile,toBoolean(a.outfileappend))):cls()),J(),sleep(1E3*a.loop,!0);else J();isDef(global.__oafp_streams)&&Object.keys(global.__oafp_streams).forEach(b=>global.__oafp_streams[b].s.close())}};
oafp(params);
