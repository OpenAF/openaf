var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20240227, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("H4sIAAAAAAAA/+1aS2/kuBG+968g2gnaNlr9ltTdgQfw2Duz3h0/4FcWsAc7lMRucSyJCil53N5dINhLkvvubYEcghz2ECBAgJxym38yvyA/IUVKakn98HTP7DiHRDOWmiKLrCoWvyqWuIGOQxLsPkMhZzYRgnFE7rAfekRUKhsb6N9//uuf0FMsqC2LG+j44vzk4hx9cXZ8NER7nOCIBmMUOK8FC9CIegSNOPPRtAi9bG/vMd/HgTPc3q68evXKwsKtbCTERCCMHBzhRrGLNy7hBBFsu4gTm3EHUYFGjPs4iogzOwKiAWoK5pOm7AhVRjRwii+0APsEVbcbkqSKNHJHbMTwKETffIdYHIVxtKN6u/4NelJkRjKbSP3s4MX5Z6foZPf88yE6xAENYw+YRxG5i+TwGDghnrNU1uckgjZqkDc0clHkEuRNOLUFYiOogYpxxY65hzSB3CgKxbDZxCFtJI0a7NZt3rabe8xzQg9Pmpf0Fv+603ohb5fUwejbRKAQR+5OVcSWiDjMy2ZCXgeFkLuv2Sgro9p1UNuqeyQYR276cmurmsi7vX1KROxFIhWhcoBiAVqPGOIxTI7k/Q3jIO1Vo9F4WTlmcLmo9FiiuX1m3xCOwulkAo9LdKbEsX1np+pMiTQtIUPJRNJAzlxqN8njNaPBTsRjkmri6mXjG+oMD/br0gaGR3ATdRHB1A3P5L1OfTwmwwN5rwckArluxPAo/VEPGQc1nMh7XbaPxTB5fFdF4nceaJp4xI7QNgIbBR6tCco6SUZRw1YzI7MjbHmkrOVMyUhe1FGPdz98j6aXMt7pJatUz+VGQCpFKL4oNMh4mquYv5TES2sVZaIBhCrvfvj9Cv//tVqzj+nqFxziE3X+STl8PGEreNTFjqVb/W5vAMbAyZgC0kwW2AmPgwBWd6HRsLPEpCxOHVh+N11Hu+kKzSEjDAsDKloN9W+ot1ot7Ym8NyM7XGqdhS4vQtRBLou5qNgWNki33zKtXg9qZkbRBOG3hGutMss4sMEFNaHh8Lbd6JiNniRqT/uf6WWFhbUOy5Zp6tjpAc/GcpY9q8Ty2LV5g7KmbJw+wKPfTYZ6w2i0HmK5r7RaR5m2260+aFvey+97ujHoak+MXq8rK8osX210EWdvxMsM+WXg8Ed0SBwa+ws8wZexBcDpoTE4xpA5azmEm1labRdpLHUKCe7TiPhCgn8ghj6JcOLUJfqH2AZTA4eYv2dvAsJPyQhijgBCICCT9YnHKBErTAcfkDwaoYsFqXMCRekmROxvpjU2CyJModcEK1Wfabs9FgfRVj1gDhmKkNgN+Uv6pbp0RBH1CR6zrB9FcQ7vtpY7nKTpeo4mEAV7lcIuMd6y7ylYuUh9gFreifxlpwVClSnkNfVQq7iO90LmfwVTHx70gdpHcIOLAFuuFU1MBKwHmIVTEnrUxmdEoivE1cQJhGaatu3oZt/UNd3v9SJUuiRVAjLqdyt//QCSGgbyaRCr6H7MHmLCYzb2NLloJVzdUkEZLBttoJsjZ9S3bK3Tc/3RJ2YCFrmMgDNio9e3dGekGz3NvbfeWI+jCQFh7pQFx7T7ds8x+xo3XtuDTzkd+5j4LAAeZCfi1vYsrcSK2bcGZtfG2v3tSO8/HhMRx2REbzTSNk3D7Pc1874zHj2aYWbDG72RrluWYTrauHMbzsTGvzwTX7CCvbnE8zUaAMB63lQhxmv9/m6GibPYtglxiAO/24/BhM0d7V4fjMQSJj5IE1cbg3IQUQ4a1goMpAcSy8MC6X7Lvj1iIODeyUXm3W0MoQKNJg07jOsgOrMLlaqMlZdV9Yr4kPjDiH1tTUCeXcvimzJPUSjOduyDzfPJ1lbS+4rUxZGnHajhzyLGVQyxBgvXVRK6xCccQFgk9NfVjKOFHUIhiH2LLGRoWXcQDzk0AmgXQ7lD37x+VUfwl0dLaa0KkzBMmIx33h/LqOnP18Fc0JFNKfzMJjB7e6jsPFN89jaVOKvJi2jFKxdlVYpVt9EfGRg8ZtWna/Y/9L/yAGz2chMv/Ow2+jp6/nTmp2k2DPkzbWRCVaEot2EeiT7H4iwejahNSRAdKlSpo7zuiO1TcXMCkb6IOSnW5FQnB/vTilOCnQmgeVuieQHMD45k6vjFi8MhuhDSZ2JZkInFMYGoT2a1MEqWewW8sMosx6FKOMp2PqxvDwH6ozGgOex+ZIXK8NIA+kjzyNO88DJ/Qe5kkgsd7z47+frweP+zFzvVzWgSkiFiIQkwrScDDdE4jLRuQ9eimFusjm7IZIgajUYdyV0aoNMQDVry2qpWiO0yVPWoiBAgB7oIqMxTH+EECgSxOfgaTsEjZelfygEsOKg0lJABgtakF6rV0zrJtNRHzSJjGkjJFtQRUIWqUUpZ1Gk28gS6jxUu16pZrjhJn3qeX8qBP8m1mEzcnkvsG9mX1Daz5L5WNRnOwfEE+17ijfMuwJJL4r/78W/oqvVSPfPd5RCd88n4FqaZElQp42OGvu9++Anlyhii9qBnaK2O1mo/RJGpSI7RHugdrd3W2q2lFD/+HaV6Ulwt6PondNWeZ38fj9HnGEyNi5vXb//pOatLoXe1Vu8hnuakMNpaa6C1+6tK0VkoRWdeigt07uIgWp134AT02V2DdxMoOlp3+ZzN8N5dyHt3nvcvY1jTv8WeA6vAX10CUxrQWjbUX1OC3kIJevMSfIFvKYDaydufOblHEMrsxW9/9jzMV5emv7Y0gzWl0RdKo89L8xRAhTORPbXnLvbo6pIM1pfEWE8SY6EkxgLLYiOKdoMAB2uwb67HfqfVWpN9cyH75oKJAL6/pJrP2Mr8Azdr899ek/959IIGV/15/neD6O0/AsrQc9gnSt82S5iLX5ahvUSGvH1RghB6JvPYl/NWZH6AFvjGNBLJQpg0oz3vJmdcZLI1LfrI8sZnysTch8BcXKnkqTBQSHn9pbYWH5+KXdygUvD6MzaTe3dVyBx3nt6ozLvcAnHmVFUh85dQSD9BVTJPN2cU3+dOTRUyfyWD6pS27GnKtJk7UYV+TpuG6ZWlGJ8QFKkHObWeUi/G1GTkQYnWmNIaGdc5is1JnKGVVNAUiORmIRu3ACFl2hwpVKGd0/ZT2vnlWyBu58TZ+lM1acJzUULo/HT36OzZ8enhwn1ExHEg5MKDiDgJcCuVpMl0haZ7B1g5V7X37EJqLzc3YtlEwxrEyVrEtKwJvFFNtuTZiEXj0+gx9x8zkALMhpz5YbRTtVkA28ZIyZ9BWJLAyXZN0BCUlbyrvg+Nlp9d+D9ETSHq4GMg6uDgwyHqICH+IIg6uPwYiLr8CIi6PPhwiLpMJf4QiLpM1PVhEHXw1VKIWpDmCDm9lYY/CzRCnbRTK3d9tIBJ8fEULWq+PGWBvaFM1fPYjmp1FHNZkZ0nUw1FQ31yqy3PYhyrBQ9MyzN+CHOOJ0nWoq0jm0YqiZGfzwOF8AlysVAIU5NZ5ZrCAZWtQETAMFgmQ0KmzsxRmKA0WzGbALHlp3E+WSdDMYN7Jaxa9sG8wIhDhK1OvS0GNSlMagg5kQSylNPH+ZBdOQMcGLuYpiZptvR+DyZMFvZcGuDEEM/ZzYRNDbdr9rrGQH6vk59zcJiuqco+8Vyat2p1Bq1B10gsGqYh7evs7V8YOsGxx5Ih24Ou3hkkzZ5yfE+9ZNER+lp9+kpb6W1D8jXD2CG5ozZDe6BM1aoHg/bbqlVapVqB/8E0X3dmu9M3e7OM7WHKcyE7LaNr9HoDVfhsPAkTtKwcC3yDC+DRNXSz1Z5ThVtq1deNftfsJjKCwj0M1uHKLGaruMA1TcuOt/wB7Tq3OLCJUzoa+9WLs8LJWBgNXtyl51rlMvLByKhc9cIlJFp+PvYkOZALy00ttPx0bPm4q52P5KA4dJJCFu407jxRHBwno8rNSdKtqnrfkdlv0R3mY4G0A1T75rsaalo0aAoXaTaqqSUoe9nJT9PCoAj+1NucC7jJCGdnhD2ImaCkWNn51abCHaD+FslzplXRbGxfN6834b51rThoXreb4yraqkn1/AdI/M9YsiwAAA=="))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64("H4sIAAAAAAAA/7Vby3LkOHbd6ysQWYuUalKZU+OJiYl0yBMaKdVdbb1cUtnV0dXBRpLIJEskwSZIPWo02/FyFrObsMNLb/wBXvlj/AP2J/g+ABDMTGU9Qq5Fd5IELi7u49wHoBfiolLl4Ymoah0rY3S9I+DfzsuXb41cqpcvpyLSclGJHxZZrn4UP+iqyXRpfox2dq7ljTJCliIrq7YZida0Ms8fhBSJbKQwTd3GTVsrYdo4FdKID0aXI5iQiKaWpVnoujAia0SjkYr6uc1uZa7KZnV+VsJ33aSqFjhHNkLX4jbD5bKPEvkZi+tUCd02wAjPjoHiXAngulG1ghXTWrfLVHx3Nru6lE06Elf/cIp0eP9DI8rTrPyZuANZ3GaJCthUtSGKMjcaycqqyjMcoIH/8c7O34nXC9h3hEKKkCr9OjC6UCuvPmYV/n867b5lsLZuglVTxSIVd1me43LqvlJxw+vBYzCSN2WaJCsnVVapMbBywSoSsn56JmgjYlUegMxbFY3FUariG1o8z0xjYHiu71DgsOuc3stbmeVynoOkeQnY+YsX4kyCguyb6c7Oo2VAPIpjZeI6c087j/v2n//BTzBlP0Wzg0FXKSzapCCTRMdtgdaA31OVV/T9EPVZgtJvlbiTD7gvsz4FmCZ7MWJXjZdjawZmJBpVVLls1B5RRfkTVbQeegBylayNErvZItQKixhV1RqV8Oy4SMQaT0CACKEd8Rx4o+5V3DbwUsS6KPATs3XTzkE7+QgZv1H1Ho5dqoaETVRiXTawH0PrWfN+DG3d+sNuohayzZupiJta2d2xDdnx/NA8VGtbS9AFydKa+sHaiWwbvZ+ohmzHyqrWBe+2dJjBHlOBN6Gd1QAfqGiWAEjEMwyzzc+5lRX53WcMty8fxaxEkzMsFF3HWbkUekGPSNWOI63VYpes2UxpByNhMlC3AsxJbmUZu60Qx8yMg4NPchSbW94AODpK8QBejIiJo6t/dNaPU8E+yNbt5Bv1wJNAQ1lpvbuQ1QSdzC3g/BxYWGT38AgM4TivIaJCnCN5JjgEfFTDnub4szcaxM2+aUYgSCP264j3pHNwlHVqKGXFX2FtyyMYTef/5LK31mWPUlkurYKsmQGg4ya7nTRa54Cxt+CEKOKsXGgi4l5sdOyYCH8J3UeE4hOrPAeDgNUPKAs2oBxQjUyoTlQN0Q2NIRoBOoN9R+S2EZhVRKB+grBNA4R5KBt5DywhSKZNU5npZPKhUAY/j3W9nDRgcXUm83HaFDnO/l63FDRI07QBANUHMBBcPqIXB4PfDaK/tSKmrxH/th+COInfuscDVBfEYIBPwuD//o9//p///LMQr72bm52dUzKxBQfEDgBQU4AZNkL2XF3supDiIUjdgzGRcEEY7mvWgNCdne2N/VZlDqozQoM+akRNQBZYgneMFHnXkdUNBYuOYzKmXsjoIsaGkIHZhMOU764uzj0WbgCvB1l4/Pn+8Ox029h7HspI9277WIsKRBdxYMvQMmGGcej5ccgwxTdTqXphNwN+Zl+g5l6yHnZrTJAAo+jxoPsegc/Xk1e/+hteZy6N+s2vmZL93YAOw8U4bvGQM1nfJPqu7H9v2MvD7/wqGIXbMeAPhYSB34DbgvpZEfatHdvUmTIc2UpVQ+wVRiIqs1lifpExwRzw0Vi2lkQPUkCwnAnx7xMYTFPBUnE0OgX9n6bnhd9VLmsAjhzgo4UsVhQ6Ubn1gF0QlxFDGK3K2yEaNf62YDHcC6MVkLoA4jCkACTEwGWAJdhBQfAKHB1eXYvdwznwKeNGXDFGXAcROLN0Xp+/nlzWGnTWoDQCMd7nxrP97vTqHlMEwJSMpL1B8XIej2HOPa9Qyzs7+1Ia0wPhBOZAckFIGuAIIpyPax4//vff/vovNm+TeTAcXBSyB+MzPg4QATBT3E3ckgw0cd5Sjlk+uMTLR7JxLz+8Rq9/0ucfn/J8WdfyodEYCB7F7yECKFnayAyo2IuIgFGARU0gFprcRZJdo1RAEALtqPeo8BXLeu31xtVRvt1Iwmla3cX/3lriTpdDwshaFYCaCadZSkLBRNtbWRaXvCKngB8YnVZX4lXYDEpZKJcpIbGK7e+B4d/XFriWysmmKc9Yk0gggljXaFQcRT5X9jKvUrlfQmZeZzFYhMoTwWkax/EPLYQp+DxHQ4F5/JMHQsrOIIC2pew7HISPbMxzy4T9RrkqpPhPWQervSsunRxwDhImbjS4fa5uATTWkM6LH7PqHtzZ+gFTMEQ12GKWUHUKyoWlSpwWpC/Sc04jaS8QNjUIAXItdY/Bu786FhwBA2HGxO6Jyw+78UN8hrUBgG/ZCEN+yVn/X/kFwN9iJPJGlf0slx0UF5TUV1D3HCjC2AGvLXpROHVqYfynjOS+CYWEqS18gTWKqhliAecc0S5rMMOppXBzES1TFzJqtZR14rKXAOTsgky2p5TNsccODKF4lSTaHm6JAxSVN+jAPMLBr49bKP31wAWyazQj3JcjIwqeWzFMgYCgo+hBoPdqRdbdt6/Co1TnXCEhZTRKj4Q2fy/VneWOOFEo6pWd8mZA0ZIy7wkP18SbjV88r4d8WQlbR7d3sGsBua0+DXQ8VMDYPIsJlwjFvSA7cmWb559NjwejotvSGa3FTaZPvLogwImLknWcgvBMqJd/Qtrs06FD6xKSAxpLCoCEJF4pOy30dpTt8k/RLlaI2+GfQ17XDUe4zeLBeZACtXmDM3AVGurAG6cDwcewIPoTFUQXYZ8kqIm6WtZ+clDoS0tbifWKlR61LdXKhqSFGjMu0cPf+3l2wx0NBaJy1XaQGcabKpwnB3N+bsnj7630d0k/6GFBH8KwfztG1zkNU3+xyllBTtykQEtAVRw71VZPFWokaTdyN2j/YicDTKp5wJm2ZeOft5MJi721ao9rG/sZPxZoT13XsFcZbhGQeVrWHUMKMmOOpltlbSltIUXyzD5SXwcLjQxrj200XQG7VsGGZegTdWhs8k5ZV6fdx1U7IjnkgRmEg8PSeK023sI5+rWfg4kmBNGcITmslZuwQv/2elXB4vOq2y3l7TYeIWaVBeZUMSLVEUdR04ExzQALxh7pmR0XrO7K8yfrcxHUjTRoc+m4S6DPTX5s5pq2qggE93pVZVdW9hvGZHu2F05jvoU4k6u5xBTcvXdL+QLUfaGDjWv7ME7nVjS5XrpFfRxOIZU71UtwGZP2S1vK1l3nS4q0LWS5XyuZkCaQVliKCwe+ONYo6ikAjGMzOSjJ6bTCHkiF0d/nbK5exvzd9SWsZDgRopQaIxq2g4GmdWEbqoA8Y5JNY2xTzR8TJW4l2zwcOokNVzqHS3Dsdj4GgUy4mT5Bu5KLfQ1AdmMm81zPJ4U0wM4Ez99qHU8Ap8zkenZ2eXp4PRsXSVi9//t/MSb2ssUu2q30p+9SSL1tBxL3E02foyxHSpBPx08G8JVut7TetWDWsZFqnGB1nS0zVAQSHQsfdWyHPEhAuPOEc4aOgQPuZdvlaJEH26DE3VPe1zX559mSAxoWcNRn5UXG/f4ISLhMvlLGDLrPI2Wm9UFnW2or+krpMqM9QKmuuW6et1meBFVUlzvyWH/ssk6a5Ebttsywp2BU5sNEn+vO1QJ7Za7v406+dul8TmLz3QSy73GnMTtlLvbWZA8Y9hWCBxh8HqkDIZMq1Sv1roOahj9yWWUgua39kZwrKBdZDezSOA/RChIexI02l2tp70LCd5pJpTUu6Yf6rhESaCU17u1yhmvMVvlFIGKvcg2v2qJEgVOZSbyD2Gr0SQ6EBtIOsJM5VnDuaICOLAeHA0+51ndA8JzbNUwZX30N2VfrGj+lwvHLdU5t5OfROpF60tXcsamrfpwLUP5HzrLSrfYk+e7CVqK2FEQx1QVOTiEyqprKQau+SpuMtkLVIGbAtiMGsjarixkMaKEdvFFLsKU6PPj0Qc81PGwSC4Fsrpo7BTLmpQ0LPCDP1X7PCIfi/XvzC2xMiBXNYjZIuppYEPqken1NRtMgtYx6hiF2iZ/uiAtPZ/dQFhM6tIKJNKe3nJ1kz9twwhj0wUfBYJo0jfqdpoKwQtG/42rea1sJPODKbXsNVqRcmIpfbqJ0VylsS2vvWczTp4xeqe4cLk61Nspr7Xh2cvj29HokZu+OZqcjSClPLt6cvX4XvT0/vTg8XnsRgYZG4ux7yK5G4s3J0a9f/faXI3Hx5vDodDYSlxdX19+8mcFHHhc8X8/eXZMJXh+fkAWi5r5ly92YFbgcDA/MYC9ZTDeIWot8XZFurb9PEjHz0Da7Dn0ykdpvq7azosva0fu51Y0604n6DEEenoJA4D/R+cV5dP4Wn84gPz87hB/86mz25vURiQCeZ2PP8bHKsyLj0Bo0C63hxKnEEyT0b8xv49aAOMD53RxPZmZiWakvoKHsBDv/vM1zP3X1h5UYTF9Jf0Gq2Ixy/RxKb2e2ORt4a+gR6ApTLAIPBn/oNDalqDbqCWQ6fBz+cfBpiuhUU+EA4GCwG5DlaDnqdDlFLe0NVoDn91xvfRn2BKGF6zW+zWVxw756Fn9mWsuP2eaTCzZie7eDg0QKERbHT5ZtidPQwAG7ICXObScxaWOeSS0Em13bunPTMSAG3tMzK6KuV/1FATgvWES+QX4wHo+fKSJT+3s1n4FXWa1LauLcyjojyEBRyax0sYzhWC96XfN+xLo4PLmMzi6OZ6d7rsHvttlzuB7M28qQYMbfJUQRDjEQDW1+Q9VdNtF5Lgu5NxJDOhYYUv4IT01WKNDGEO28cGWsuQMYK+BrW8PIhY1kTIIvTGCFeaMe+CMvwR/WQi6U4OKLDN6aN5Thz6Q4vaxAUA3eJdx4LAfvfdFXAlEqpG3dvWfvBrjK8QnDpRudX7FJvO/zLJsEQu7mRM8++SXVCsGBG2pzpX/RT6BQBN2NBIiNZu2wwwMDL4Fxx3ZWcLWgUkh0i81FAsjEkSx1XCvuAD0BN/zZJu+Oz46qO5ZLNtZrX6OL56zY6ER2RRWuDQafSB/uMqQ/nqcml65l/cAnus7m8N4ndYvAzbqk4uIKvH12H6t8P2hu0fXgmGKnL5Y+r3xEeYSVY2gDuKO1jM82XsGc+Gw3QCN7YRImNMGdyUAAFpt25zpPpqT0kZhTYgR5MCQPUzEoVJK1xaD//gh7wPARostgz/NGgtlYxGbOYmxRQyM/S3pbylokcifx6lC/ApWFbksyMwTVESPqCKfjTQb2lb6GnS9+mhu8bNxIvNKAl2jcLtjMrP17Bwj7v1/jCEGf+XkcwhJb76Bdp/7maYBOfPJKc1ZgyRJyR878hMIG2RRVqI+3JdCcVRooYZGkICQnZo36GnScfR2M3xfPBONAKFuWfMwRehpd3t63RTEV9cwUMtzIJXHFE905zLqwDwNRy4QQBUOfJ2Encn8M3jzd5LMtNLTAYHYgyr/8q0upQYA//fQTZH3pzgt7J9r1Jjg94lud+AcEO2DqAtv73xldnoBlj+2hG3ahdz453R5+xTWkKfBtKzVfetOBI6QIfDeZFoEsNls89C9eUGYTXF9jbKMlECXHttlpiYed167Iz3WJogjlUbgjILzKZoGSb/PsECH/lxzEf2GvqRxg//2FjYwebrHVj5eZ1J09o/9Ga6jNdmJI4cQ+7O7UnwDMISMaL+nzpDbGsY1d8IMBvBjjJbtS5WOokYoBRuuDgVE5dSayBi+1V+38GNYbdHJEZjZwZS9Uwb4qpVF56IzYLoLn2v6Ka7loPJ/IJPAoq2yMOLQPERLUQdecJYQYbXp6ZJ6Zdp/T9wOi+x4CSIywvPtqD97xyPcDsQTDqbDj7sdt2EzRP6Lr6vkW6nlA+jiHCh2EToclOuM2twKUTv12Bk7ouKFSGgmCv52USk+gYGomt68mC6WS3x1evo7+fvb9wfHs7AJ/DPobLIFoRIQjPf8A2zODtfsulvt16fzwyx9/+HH8Bwz4U0r6C7kss6aFUlXOjc7bRkX+VZSOUvlR1pC0mWlmokpj0ZdhbyTyHyK34VECOIR/3jAlUUQQsWoN+BqhV8C64yIzJnKDxjdZDsaM3fk/9pX10jZFQB9usFeHPTRd9R2HgPYPQvQlHl5xDzJVWb3Sc7G39Nmt9m+tZPjga8wHXxv0v7KG/0M1e6V+tPlyq1ldBZ7GPGPQh4MN4zqKnx5rlxtswJgAiv8qLujv1+jvmNyFA4PB6lt880SMWg9NOP/AHa48ikt3h40uKCcKCt7crNxawzgJ4hswzyMxQGA6GJCsBqR//xdWB8GR8JeQtlt3swOCtt8Z8AppANgBFHndJzcYD38LRb1p7Kibtb8D+z8KKTWSrjgAAA=="))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("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")))};

const oafp=b=>{if(!isUnDef(b)&&!isDef(b.____ojob)){var E=a=>{for(var d=Object.keys(v),c=0;c<d.length;c++){var e=d[c];isDef(b[e])&&(a=v[e](a))}return a},A=(a,d)=>{d.__path&&(a=$path(a,d.__path.trim()),delete d.__path);if(isString(a))return E(a);d.__from&&(a=$from(a).query(af.fromNLinq(d.__from.trim())),delete d.__from);if(d.__sql){var c="auto";if(isString(b.sqlfilter))switch(b.sqlfilter.toLowerCase()){case "simple":c="nlinq";break;case "advanced":c="h2";break;default:c="auto"}isArray(a)&&0<a.length&&
(a=$sql(a,d.__sql.trim(),c));delete d.__sql}return a=E(a)},k=(a,d,c)=>{toBoolean(b.color)&&(__conConsole=!0);a=isString(a)?a.trim().startsWith("{")&&a.trim().endsWith("}")?A(jsonParse(a,__,__,!0),d):A(a,d):c?A([a],d)[0]:A(a,d);isDef(b.outputkey)&&(a=$$({}).set(b.outputkey,a));isDef(b.outkey)&&(a=$$({}).set(b.outkey,a));printErrnl("\r"+" ".repeat(_$(void 0).default("(processing data...)").length)+"\r");z.has(d.__format)?z.get(d.__format)(a,d):$o(a,d)},t=(a,d)=>{var c=af.fromString2Bytes(""),e=af.newOutputStream();
$sh(a).cb((f,h,g)=>{ioStreamCopy(e,f);f=e.toByteArray();0<f.length&&(c=f)}).get();return d?af.fromBytes2String(c):c},m=(a,d)=>{isUnDef(d)&&(d="exit: "+a);if(isUnDef(ow.oJob)&&!toBoolean(b.noexit))0!=a&&printErr(d),exit(a);else throw d;},B=()=>{__initializeCon();b.help=_$(b.help,"help").isString().default("");switch(b.help.toLowerCase()){case "filters":var a="docs/FILTERS.md";break;case "template":a="docs/TEMPLATE.md";break;case "examples":a="docs/EXAMPLES.md";break;case "readme":case "usage":a="docs/USAGE.md";
break;default:a=b.help.toLowerCase(),a=isDef(w[a])?"docs/"+a+".md":"docs/USAGE.md"}var d=(getOPackPath("oafproc")||".")+"/"+a;let c="";if("docs/USAGE.md"==a&&0<Object.keys(w).length){c="\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let e in w)c+="| "+e+" | help="+e+" |\n"}isDef(d)&&io.fileExists(d)?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(d)+c)):print(ow.format.withMD(io.readFileString(d)+
c))):isDef(global._oafphelp)&&isDef(global._oafphelp[a])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[a]+c)):print(ow.format.withMD(global._oafphelp[a]+c))):isString(w[b.help])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(b.pause)?ow.format.string.pauseString(ow.format.withMD(w[b.help])):print(ow.format.withMD(w[b.help]))):print("Check https://github.com/OpenAF/oafp/blob/master/src/"+
a);m(0)},p=()=>{var a=(getOPackPath("oafproc")||".")+"/.package.yaml";a={oafp:{version:io.fileExists(a)?io.readFileYAML(a).version:"(not available)",inputs:Array.from(x.keys()).filter(d=>"?"!=d).sort(),transforms:Object.keys(v).filter(d=>"transforms"!=d).sort(),outputs:Array.from(z.keys()).filter(d=>"?"!=d).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",
version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},os:{name:String(java.lang.System.getProperty("os.name")),version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},
store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};return stringify(a,__,"")};ow.loadFormat();b.format=b.output||b.format||b.out;b.type=b.input||b.type||b.in;b.out=b.format;b.output=b.format;b.in=b.type;b.input=b.type;if(isUnDef(b.file)&&isUnDef(b.cmd)){let a=__;for(let d in b)if(""===b[d]){a=d;break}b.file=a}var C=new Map([[".json",
"json"],[".ndjson","ndjson"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"]]),F=new Set(["csv","ndjson"]),G={lines:(a,d)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));if(!b.linesjoin&&isString(a))0!=a.trim().length&&(0<a.trim().length&&(a=a.trim().split(/\r?\n/)),k(a,d,!0)),D=!0;else return!0},ndjson:(a,d)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,
"ndjsonjoin").isString().default(__)));if(b.ndjsonjoin)return!0;isUnDef(global.__ndjsonbuf)&&0!=a.length&&a.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=a.length&&!a.trim().endsWith("}")){global.__ndjsonbuf+=a.trim();return}0<global.__ndjsonbuf.length&&(a=global.__ndjsonbuf+a,global.__ndjsonbuf=__)}0==a.length||0<a.length&&"{"!=a.trim().substring(0,1)?(k(jsonParse(global.__ndjsonbuf,__,__,!0),d,!0),D=!0,global.__ndjsonbuf=__):(k(jsonParse(a,__,__,!0),d,!0),D=
!0)}},v={transforms:a=>{if(toBoolean(b.transforms))return Object.keys(v).filter(d=>"transforms"!=d).sort()},jsonschemagen:a=>{if(toBoolean(b.jsonschemagen))return ow.loadObj(),ow.obj.schemaGenerator(a)},jsonschemacmd:a=>v.jsonschema(a),jsonschema:a=>{isMap(a)||m(-1,"jsonschema is only supported with a map.");isUnDef(b.jsonschema)&&isUnDef(b.jsonschemacmd)&&m(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var d;if(isDef(b.jsonschemacmd)){var c=$sh(b.jsonschemacmd).getJson(0);
0==c.exitcode?d=c.stdout:m(-1,"Error executing the command '"+b.jsonschemacmd+"': "+c.stderr)}else d=io.readFileJSON(b.jsonschema);isMap(d)||m(-1,"The schema provided is not a valid JSON schema.");ow.obj.schemaInit({allErrors:!0});d=ow.obj.schemaCompile(d);return{valid:d(a),errors:d.errors}},sortmapkeys:a=>{if(toBoolean(b.sortmapkeys)&&isObject(a)){let d=(c,e)=>{let f=Object.keys(c).sort(),h={};for(let g=0;g<f.length;g++){let n=f[g],l=c[n];Array.isArray(l)?h[n]=l.map(q=>"object"===typeof q&&null!==
q&&void 0!==q?sortMapKeys(q,e):q):h[n]=e&&"object"===typeof l&&null!==l&&void 0!==l?d(l,e):l}return h};return d(a,!0)}return a},searchkeys:a=>isObject(a)?searchKeys(a,b.searchkeys):a,searchvalues:a=>isObject(a)?searchValues(a,b.searchvalues):a,maptoarray:a=>toBoolean(b.maptoarray)&&isMap(a)?$m4a(a,b.maptoarraykey):a,arraytomap:a=>toBoolean(b.arraytomap)&&isArray(a)?$a4m(a,b.arraytomapkey,toBoolean(b.arraytomapkeepkey)):a,flatmap:a=>toBoolean(b.flatmap)&&isObject(a)?ow.loadObj().flatMap(a,b.flatmapkey):
a,merge:a=>{if(toBoolean(b.merge)&&isArray(a)&&1<a.length){for(var d,c=0;c<a.length;c++)d=0==c?a[c]:merge(d,a[c]);return d}return a},correcttypes:a=>{toBoolean(b.correcttypes)&&isObject(a)&&traverse(a,(d,c,e,f)=>{switch(descType(c)){case "number":isString(c)&&(f[d]=Number(c));break;case "string":"true"==c.trim().toLowerCase()||"false"==c.trim().toLowerCase()?f[d]=toBoolean(c):c.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?f[d]=new Date(c):c.trim().match(/^\d{4}-\d{2}-\d{2}$/)?f[d]=new Date(c):
c.trim().match(/^\d{2}:\d{2}:\d{2}$/)?f[d]=new Date(c):c.trim().match(/^\d{2}:\d{2}$/)&&(f[d]=new Date(c))}});return a},removenulls:a=>{toBoolean(b.removenulls)&&traverse(a,(d,c,e,f)=>{(isNull(c)||isUnDef(c))&&delete f[d]});return a},removedups:a=>{if(toBoolean(b.removedups)){if(isArray(a)){var d=new Set,c=[];a.forEach(e=>{var f=e;isObject(e)&&(f=sortMapKeys(f));f=stringify(f,__,!0);d.has(f)||(d.add(f),c.push(e))});return c}m(-1,"removedups is only supported for arrays")}return a},llmprompt:a=>{if(isString(b.llmprompt)){b.llmenv=
_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);var d=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system","envs").get(b.llmenv)),c="json",e=!0;isString(b.input)&&("md"==b.input&&(c="markdown",e=!1),"mdtable"==b.input&&(c="markdown table",e=!1),"hsperf"==b.input&&(c="java hsperf file"),"raw"==b.input&&(c="raw",e=!1));d=d.withContext(e?stringify(a,__,!0):a,isDef(b.llmcontext)?b.llmcontext:`${c} input data`);return!isString(b.output)||
"md"!=b.output&&"mdtable"!=b.output&&"raw"!=b.output?d=d.promptJSON(b.llmprompt):d=d.prompt(b.llmprompt)}return a},splitlines:a=>toBoolean(b.splitlines)&&isString(a)?a.split(/\r?\n/):a},z=new Map([["?",(a,d)=>{a=Array.from(z.keys()).filter(c=>"?"!=c).sort();$o(a,d)}],["pm",(a,d)=>{$o(a,d)}],["key",(a,d)=>{$o(a,d)}],["ctable",(a,d)=>{$o(a,d)}],["stable",(a,d)=>{$o(a,d)}],["table",(a,d)=>{$o(a,d)}],["log",(a,d)=>{isString(a)&&toBoolean(b.logprintall)?print(a.replace(/\n$/,"")):(d=a,isMap(a)&&(d=[a]),
isArray(d)&&d.forEach(c=>{if(isMap(c)){let e=isDef(c["@timestamp"])?c["@timestamp"]:__,f=isDef(c.level)?c.level:__;c=isDef(c.message)?c.message:__;let h;isDef(f)&&(0<=f.toLowerCase().indexOf("err")&&(h="RED,BOLD"),0<=f.toLowerCase().indexOf("warn")&&(h="YELLOW"));isDef(e)&&24<e.length&&(e=e.substring(0,23)+"Z");(isDef(c)||isDef(e))&&print(ansiColor("BOLD",e)+(isDef(f)?" | "+ansiColor(h,f):"")+" | "+ansiColor(h,c))}}))}],["raw",(a,d)=>{isString(a)?print(a):sprint(a)}],["ini",(a,d)=>{isString(a)||(ow.loadJava(),
d=new ow.java.ini,print(d.put(a).save()))}],["mdyaml",(a,d)=>{isArray(a)?a.forEach((c,e)=>{$o(c,merge(d,{__format:"yaml"}));e<a.length-1&&print("---\n")}):$o(a,merge(d,{__format:"yaml"}))}],["mdtable",(a,d)=>{isArray(a)&&(ow.loadTemplate(),print(ow.template.md.table(a)))}],["template",(a,d)=>{isString(a)||(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(b.template)&&m(-1,"For output=handlebars you need to provide a template=someFile.hbs"),
tprint(io.readFileString(b.template),a))}],["openmetrics",(a,d)=>{isString(a)||(ow.loadMetrics(),a=ow.metrics.fromObj2OpenMetrics(a,b.metricsprefix,b.metricstimestamp),a=a.split("\n").map(c=>{0<=c.indexOf('{_id="')&&(c=c.replace(/{_id="\d+",/,"{"));0<=c.indexOf(',_id="')&&(c=c.replace(/,_id="\d+"}/,"}"));0<=c.indexOf('_id="')&&(c=c.replace(/,_id="\d+",/,","));return c}).join("\n"),$o(a,d))}],["pjson",(a,d)=>{d.__format="prettyjson";$o(a,d)}],["base64",(a,d)=>{a=isString(a)?a:stringify(a);toBoolean(b.base64gzip)?
print(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(a))))):print(af.fromBytes2String(af.toBase64Bytes(a)))}],["db",(a,d)=>{(!isArray(a)||1>a.length)&&m(-1,"db is only supported for filled arrays/lists");b.dbtable=_$(b.dbtable,"outdbtable").isString().default("data");b.dbnocreate=toBoolean(_$(b.dbnocreate,"outdbnocreate").isString().default("false"));b.dbicase=toBoolean(_$(b.dbicase,"outdbicase").isString().default("false"));ow.loadObj();try{isString(b.dbjdbc)||m(-1,"dbjdbc URL is not defined.");
isDef(b.dblib)&&loadLib("jdbc-"+b.dblib+".js");var c=new DB(b.dbjdbc,b.dbuser,b.dbpass,b.dbtimeout);if(!b.dbnocreate)try{var e=ow.obj.fromObj2DBTableCreate(b.dbtable,a,__,!b.dbicase);c.u(e);c.commit()}catch(l){c.rollback(),m(-1,"Error creating table: "+l)}var f=Object.keys(ow.obj.flatMap(a[0]));var h=b.dbicase?f.join(",").toUpperCase():'"'+f.join('", "')+'"';let n="";var g=a.map(l=>{var q=ow.obj.flatMap(l);l=[];for(var u in f)l.push(q[f[u]]);u=f.map(y=>String(q[y]));l="INSERT INTO "+(b.dbicase?b.dbtable:
'"'+b.dbtable+'"')+" ("+h+") VALUES ("+u.map(y=>"?").join(", ")+")";l.length>n.length&&(n=String(l));return u});c.usArray(n,g,b.dbbatchsize)}catch(n){isDef(c)&&c.rollback(),printErr(n),m(-1,"Error connecting to the database: "+n)}finally{isDef(c)&&(c.commit(),c.close())}}],["sql",(a,d)=>{(!isArray(a)||1>a.length)&&m(-1,"sql is only supported for filled arrays/lists");b.sqltable=_$(b.sqltable,"sqltable").isString().default("data");b.sqlicase=toBoolean(_$(b.sqlicase,"sqlicase").isString().default("false"));
b.sqlnocreate=toBoolean(_$(b.sqlnocreate,"sqlnocreate").isString().default("false"));ow.loadObj();b.sqlnocreate||print(ow.obj.fromObj2DBTableCreate(b.sqltable,a,__,!b.sqlicase)+";\n");var c=Object.keys(ow.obj.flatMap(a[0]));var e=b.sqlicase?c.join(",").toUpperCase():'"'+c.join('", "')+'"';print(a.map(f=>{var h=ow.obj.flatMap(f);f=[];for(var g in c)f.push(h[c[g]]);g=c.map(n=>{n=h[n];isString(n)&&(n="'"+n.replace(/'/g,"''")+"'");isNull(n)&&(n="null");return n});return"INSERT INTO "+(b.sqlicase?b.sqltable:
'"'+b.sqltable+'"')+" ("+e+") VALUES ("+g.join(",")+");"}).join("\n"))}],["xls",(a,d)=>{if(!isString(a)){try{includeOPack("plugin-XLS")}catch(h){m(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");if(isMap(a)){ow.loadObj();var c=ow.obj.flatMap(a);var e=Object.keys(c).map(h=>({key:h,value:c[h]}))}isArray(a)&&(e=a);traverse(e,(h,g,n,l)=>{isString(g)&&g.startsWith("=")&&(l[h]="'"+g)});a=!1;d=b.xlsfile;isUnDef(b.xlsfile)&&(a=!0,b.xlsfile=
io.createTempFile("oafp",".xlsx"));d=new XLS(isDef(d)&&io.fileExists(d)?d:__);var f=d.getSheet(_$(b.xlssheet,"xlssheet").isString().default("data"));b.xlsformat=_$(b.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');b.xlsformat.trim().startsWith("{")&&(b.xlsformat=jsonParse(b.xlsformat,!0));b.xlsformat.trim().startsWith("(")&&(b.xlsformat=af.fromSLON(b.xlsformat));ow.format.xls.setTable(d,f,"A",1,e,__,b.xlsformat);d.writeFile(b.xlsfile);d.close();
b.xlsopenwait=_$(b.xlsopenwait,"xlsopenwait").isNumber().default(5E3);b.xlsopen=toBoolean(_$(b.xlsopen,"xlsopen").isString().default("true"));b.xlsopen&&(ow.format.isWindows()?($sh("start "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+b.xlsfile).exec(),a&&sleep(b.xlsopenwait,!0)))}}]]),x=new Map([["?",(a,d)=>{a=Array.from(x.keys()).filter(c=>"?"!=c).sort();k(a,d)}],["pm",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));isDef(__pm._map)&&
(a=__pm._map);isDef(__pm._list)&&(a=__pm._list);k(a,d)}],["jsonschema",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));a=jsonParse(a,__,__,!0);isMap(a)||m(-1,"jsonschema is only supported with a map.");ow.loadObj();a=ow.obj.schemaSampleGenerator(a);k(a,d)}],["yaml",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));a=af.fromYAML(a);k(a,d)}],["xml",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));b.xmlignored=_$(b.xmlignored,"xmlignored").isString().default(__);
b.xmlprefix=_$(b.xmlprefix,"xmlprefix").isString().default(__);b.xmlfiltertag=toBoolean(_$(b.xmlfiltertag,"xmlfiltertag").isString().default(__));0<=a.indexOf("<?xml")&&(a=a.substring(a.indexOf("?>")+2).trim());0<=a.indexOf("<!DOCTYPE")&&(a=a.substring(a.indexOf(">")+1).trim());a=af.fromXML2Obj(a,b.xmlignored,b.xmlprefix,!b.xmlfiltertag);k(a,d)}],["lines",(a,d)=>{isBoolean(b.linesjoin)||(b.linesjoin=toBoolean(_$(b.linesjoin,"linesjoin").isString().default(__)));printErrnl(_$(void 0).default("(processing data...)"));
let c=__,e=[],f=g=>{g=g.split("\n").map(l=>{let q="",u=0;for(let y=0;y<l.length;y++)if("\t"===l[y]){let J=8-u%8;q+=" ".repeat(J);u+=J}else q+=l[y],u++;return q}).join("\n");if(isUnDef(c))return c=[],isUnDef(b.linesvisualsepre)&&(b.linesvisualsepre=" \\s+"),g.split(new RegExp(b.linesvisualsepre)).forEach(l=>{c.push(l);e.push(g.indexOf(l))}),__;var n={};e.forEach((l,q)=>{n[c[q]]=g.substring(l,q+1<e.length?e[q+1]-1:__).trim()});return n};if(b.linesjoin)if(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),
isDef(b.cmd)&&(a=t(b.cmd,!0)),a=a.split(/\r?\n/),toBoolean(b.linesvisual)){var h=[];a.forEach(g=>{0!=g.length&&(g=f(g),isDef(g)&&h.push(g))});k(h,d)}else k(a,d);else a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(t(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,g=>{toBoolean(b.linesvisual)?(g=f(g),isDef(g)&&k(g,clone(d),!0)):k(g,clone(d),!0)}),a.close()}],["ndjson",(a,d)=>{isBoolean(b.ndjsonjoin)||(b.ndjsonjoin=toBoolean(_$(b.ndjsonjoin,"ndjsonjoin").isString().default(__)));
printErrnl(_$(void 0).default("(processing data...)"));global.__ndjsonbuf=__;var c=(f,h)=>{isUnDef(global.__ndjsonbuf)&&0!=f.length&&f.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=f.length&&!f.trim().endsWith("}")){global.__ndjsonbuf+=f.trim();return}0<global.__ndjsonbuf.length&&(f=global.__ndjsonbuf+f,global.__ndjsonbuf=__)}0==f.length||0<f.length&&"{"!=f.trim().substring(0,1)?(h(f),global.__ndjsonbuf=__):h(f)},e=f=>{var h=[];f.split("\n").filter(g=>0<g.length).forEach(g=>
c(g,n=>h.push(jsonParse(n,__,__,toBoolean(b.ndjsonfilter)))));return h};b.ndjsonjoin?(isDef(b.file)&&isUnDef(b.cmd)&&(a=io.readFileString(b.file)),isDef(b.cmd)&&(a=t(b.cmd,!0)),k(e(a),d)):(a=isDef(b.file)&&isUnDef(b.cmd)?io.readFileStream(b.file):isDef(b.cmd)?af.fromBytes2InputStream(t(b.cmd)):af.fromString2InputStream(a),ioStreamReadLines(a,f=>{c(f,h=>k(jsonParse(h,__,__,!0),clone(d),!0))}),a.close())}],["md",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));__conConsole=__ansiColorFlag=
!0;isUnDef(b.format)&&isUnDef(d.__format)&&(b.format="md",d.__format="md");k(a,d)}],["mdtable",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));ow.loadTemplate();a=ow.template.md.fromTable(a);k(a,d)}],["raw",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));k(a,d)}],["ini",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));ow.loadJava();var c=new ow.java.ini;a=isDef(b.file)?c.loadFile(b.file).get():c.load(a).get();k(a,d)}],["sql",(a,d)=>{isString(a)?k(af.fromSQL(a).ast,
d):k(a,d)}],["db",(a,d)=>{if(isString(a)){printErrnl(_$(void 0).default("(processing data...)"));isString(b.indbjdbc)||m(-1,"indbjdbc URL is not defined.");try{isDef(b.indblib)&&loadLib("jdbc-"+b.indblib+".js");var c=new DB(b.indbjdbc,b.indbuser,b.indbpass,b.indbtimeout);c.convertDates(!0);if(toBoolean(b.indbexec)){var e=c.u(a);k({affectedRows:e},d);c.commit()}else e=c.q(a),isMap(e)&&isArray(e.results)?k(e.results,d):m(-1,"Invalid DB result: "+stringify(e))}catch(f){printErr(f.message),isDef(c)&&
c.rollback(),m(-1,"Error executing SQL: "+f.message)}finally{isDef(c)&&(c.rollback(),c.close())}}else m(-1,"db is only supported with a SQL string.")}],["xls",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));try{includeOPack("plugin-XLS")}catch(e){m(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}b.xlssheet=_$(b.xlssheet,"xlssheet").isString().default(0);b.xlsevalformulas=toBoolean(_$(b.xlsevalformulas,"xlsevalformulas").isString().default(!0));
b.xlscol=_$(b.xlscol,"xlscol").isString().default("A");b.xlsrow=_$(b.xlsrow,"xlsrow").isString().default(1);plugin("XLS");if(isDef(b.file)||isDef(b.cmd)){a=new XLS(isDef(b.cmd)?t(b.cmd):b.file);var c=a.getSheet(b.xlssheet);c=a.getTable(c,b.xlsevalformulas,b.xlscol,b.xlsrow);a.close();isDef(c)&&isMap(c)&&(c=c.table);k(c,d)}else m(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],["csv",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));if(isDef(b.file)||
isDef(b.cmd)){var c=isDef(b.cmd)?af.fromBytes2InputStream(t(b.cmd)):io.readFileStream(b.file);a=$csv(b.inputcsv).fromInStream(c).toOutArray();c.close()}else a=$csv(b.inputcsv).fromInString(a).toOutArray();k(a,d)}],["hsperf",(a,d)=>{if(isDef(b.file)||isDef(b.cmd)){printErrnl(_$(void 0).default("(processing data...)"));ow.loadJava();var c=isDef(b.cmd)?ow.java.parseHSPerf(t(b.cmd)):ow.java.parseHSPerf(b.file);c.__ts=new Date;var e=0,f=0;c.sun.gc.generation.forEach(h=>{h.space.forEach(g=>{f+=Number(g.used);
e=isNumber(g.capacity)?e+Number(g.capacity):e;c.sun.gc["__percUsed_"+g.name]=100*g.used/g.capacity})});c.sun.gc.__percUsed_meta=100*c.sun.gc.metaspace.used/c.sun.gc.metaspace.capacity;c.sun.gc.__percUsed_ccs=100*c.sun.gc.compressedclassspace.used/c.sun.gc.compressedclassspace.capacity;a=$from(c.sun.gc.collector).equals("name","PSScavenge").at(0);c.sun.gc.__ygc=isDef(a)?Number(a.invocations):0;c.sun.gc.__ygct=isDef(a)?Number(a.time/1E9):0;a=$from(c.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name",
"").at(0);c.sun.gc.__fgc=isDef(a)?Number(a.invocations):0;c.sun.gc.__fgct=isDef(a)?Number(a.time/1E9):0;c.sun.gc.__gct=$from(c.sun.gc.collector).sum("time")/1E9;c.java.__mem={total:e,used:f,free:e-f,metaMax:c.sun.gc.metaspace.maxCapacity,metaTotal:c.sun.gc.metaspace.capacity,metaUsed:c.sun.gc.metaspace.used,metaFree:c.sun.gc.metaspace.capacity-c.sun.gc.metaspace.used};k(c,d)}else m(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["base64",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));
a=toBoolean(b.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(a,!0))):af.fromBytes2String(af.fromBase64(a));k(a,d)}],["llm",(a,d)=>{b.llmenv=_$(b.llmenv,"llmenv").isString().default("OAFP_MODEL");b.llmoptions=_$(b.llmoptions,"llmoptions").isString().default(__);isUnDef(b.llmoptions)&&!isString(getEnv(b.llmenv))&&m(-1,"llmoptions not defined and "+b.llmenv+" not found.");printErrnl(_$(void 0).default("(processing data...)"));var c=$llm(isDef(b.llmoptions)?b.llmoptions:$sec("system","envs").get(b.llmenv));
c="md"==b.output||"mdtable"==b.output||"raw"==b.output?c.prompt(a):c.promptJSON(a);k(jsonParse(c,__,__,isString(c)),d)}],["json",(a,d)=>{printErrnl(_$(void 0).default("(processing data...)"));k(jsonParse(a,__,__,isString(a)),d)}]]),w={};isString(b.libs)&&(b.libs=b.libs.split(",").map(a=>a.trim()).filter(a=>0<a.length));isDef(__flags.OAFP)&&isArray(__flags.OAFP.libs)&&isArray(b.libs)?b.libs=__flags.OAFP.libs.concat(b.libs):b.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(b.libs)&&b.libs.forEach(a=>
{try{var d=require("oafp_"+a+".js");if(isDef(d.oafplib)){var c=d.oafplib(clone(b),k,$o);isMap(c)&&(isArray(c.fileExtensions)&&c.fileExtensions.forEach(e=>{var f=e.ext;e=e.type;C.has(f)?printErr("WARN: Extension '"+f+"' already exists."):C.set(f,e)}),isArray(c.fileExtensionsNoMem)&&c.fileExtensionsNoMem.forEach(e=>{e=e.ext;F.has(e)?printErr("WARN: Extension '"+e+"' already exists."):F.add(e)}),isArray(c.input)&&c.input.forEach(e=>{var f=e.type;e=e.fn;x.has(f)?printErr("WARN: Input type '"+f+"' already exists."):
x.set(f,e)}),isArray(c.inputLine)&&c.inputLine.forEach(e=>{var f=e.type;e=e.fn;isUnDef(_inputLinesFns[f])?G[f]=e:printErr("WARN: Input type '"+f+"' already exists.")}),isArray(c.transform)&&c.transform.forEach(e=>{var f=e.type;e=e.fn;isUnDef(v[f])?v[f]=e:printErr("WARN: Transform '"+f+"' already exists.")}),isArray(c.output)&&c.output.forEach(e=>{var f=e.type;e=e.fn;z.has(f)?printErr("WARN: Output type '"+f+"' already exists."):z.set(f,e)}),isString(c.help)&&(w[a.toLowerCase()]=c.help))}else printErr("WARN: Library '"+
a+"' does not have oafplib.")}catch(e){printErr("WARN: Library '"+a+"' error: "+e)}});(""==b["-h"]||isString(b.help)&&0<b.help.length)&&B();b.format=_$(b.format,"format").isString().default(__);__initializeCon();String(java.lang.System.getProperty("os.name")).match(/Windows/)||__con.getTerminal().settings.set("sane");var H={__format:b.format,__from:b.from,__sql:b.sql,__path:b.path,__csv:b.csv,__pause:b.pause,__key:b.__key};isDef(b.inputcsv)&&(b.inputcsv=b.inputcsv.trim().startsWith("{")?jsonParse(b.inputcsv,
!0):af.fromSLON(b.inputcsv));isDef(b.csv)&&(b.csv=b.csv.trim().startsWith("{")?jsonParse(b.csv,!0):af.fromSLON(b.csv));B=!1;if(""==b["-v"]||isString(b.version)&&0<b.version.length)B=!0,p();var r="",D=!1;if(B)r=p();else if(b.jsonprefix=_$(b.jsonprefix,"jsonprefix").isString().default(__),b.jsondesc=toBoolean(_$(b.jsondesc,"jsondesc").isString().default("false")),isDef(b.file)){if(io.fileExists(b.file)||m(-1,"ERROR: File not found: '"+b.file+"'"),!F.has(b.type))if("json"==b.type||isUnDef(b.type))if(b.jsondesc){var I=
new Set;io.readStreamJSON(b.file,a=>{a=a.substring(2);isDef(b.jsonprefix)?a.startsWith(b.jsonprefix)&&I.add(a):I.add(a);return!1});r=stringify(Array.from(I),__,"")}else isDef(b.jsonprefix)?(p=io.readStreamJSON(b.file,a=>a.substring(2).startsWith(b.jsonprefix)),r=stringify(p,__,"")):r=io.readFileString(b.file);else r=io.readFileString(b.file)}else b.jsondesc&&m(-1,"ERROR: jsondesc only available for file input."),b.jsonprefix&&m(-1,"ERROR: jsonprefix only available for file input."),isDef(b.cmd)?r=
t(b.cmd,!0):"pm"!=b.input&&(r=[],io.pipeLn(a=>{isDef(G[b.type])?G[b.type](E(a),clone(H))&&r.push(a):r.push(a);return!1}),r=r.join("\n"));D||(isUnDef(b.type)&&(isDef(b.file)&&(p=b.file.substring(b.file.lastIndexOf(".")),C.has(p)&&(b.type=C.get(p))),isUnDef(b.type)&&(p=r.trim(),p.startsWith("{")||p.startsWith("[")?b.type="json":p.startsWith("<")?b.type="xml":isString(p)&&0<p.length?1<p.substring(0,p.indexOf("\n")).split(",").length?b.type="csv":p.substring(0,0<p.indexOf(": "))&&(b.type="yaml"):m(-1,
"Please provide the input type."))),isDef(b.type)&&x.has(b.type)?x.get(b.type)(r,H):(isString(b.type)&&printErr("WARN: "+b.type+" input type not supported. Using json."),x.get("json")(r,H)))}};oafp(params);
