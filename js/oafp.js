var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20240427, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64(""))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("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")))};

const oafp=a=>{if(!isUnDef(a)&&!isDef(a.____ojob)){Object.keys(a).forEach(b=>{var c=b.toLowerCase();b!=c&&isUnDef(a[c])&&(a[c]=a[b],delete a[b])});var M=b=>{for(var c=Object.keys(D),d=0;d<c.length;d++){var f=c[d];isDef(a[f])&&(b=D[f](b))}return b},I=(b,c)=>{a.__origr=b;c.__ifrom&&(b=$from(b).query(af.fromNLinq(c.__ifrom.trim())),delete c.__ifrom);if(c.__isql){var d=__;if(isString(a.sqlfilter))switch(a.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}if(isArray(b)&&
0<b.length)if(isString(a.isqlfiltertables)){var f=$sql();d=u(a.isqlfiltertables);isArray(d)&&(d.forEach(e=>{isUnDef(e.table)&&k(-1,"One 'table' not defined in isqlfiltertables");e.path=_$(e.path,"isqlfiltertables table "+e.table+" path").isString().default("@");var h=$path(b,e.path);isArray(h)&&(f=f.table(e.table,h))}),b=f.closeQuery(c.__isql.trim()))}else b=$sql(b,c.__isql.trim(),d);delete c.__isql}c.__path&&(b=$path(b,c.__path.trim()),delete c.__path);if(isString(b))return M(b);b=M(b);c.__from&&
(b=$from(b).query(af.fromNLinq(c.__from.trim())),delete c.__from);if(c.__sql){d=__;if(isString(a.sqlfilter))switch(a.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(b)&&0<b.length&&(isString(a.sqlfiltertables)?(f=$sql(),d=u(a.sqlfiltertables),isArray(d)&&(d.forEach(e=>{isUnDef(e.table)&&k(-1,"One 'table' not defined in sqlfiltertables");e.path=_$(e.path,"sqlfiltertables table "+e.table+" path").isString().default("@");var h=$path(b,e.path);
isArray(h)&&(f=f.table(e.table,h))}),b=f.closeQuery(c.__sql.trim()))):b=$sql(b,c.__sql.trim(),d));delete c.__sql}c.__opath&&(b=$path(b,c.__opath.trim()),delete c.__opath);return b},l=(b,c,d)=>{c=clone(c);toBoolean(a.color)?__conConsole=!0:isDef(a.color)&&(__conAnsi=!1);b=isString(b)?b.trim().startsWith("{")&&b.trim().endsWith("}")?I(jsonParse(b,__,__,!0),c):I(b,c):d?I([b],c)[0]:I(b,c);isDef(a.outputkey)&&(b=$$({}).set(a.outputkey,b));isDef(a.outkey)&&(b=$$({}).set(a.outkey,b));P();G.has(c.__format)?
G.get(c.__format)(b,c):(isUnDef(c.__format)&&(c.__format="tree"),z(b,c,__))},B=(b,c)=>{var d=af.fromString2Bytes(""),f=af.newOutputStream();$sh(b).cb((e,h,g)=>{ioStreamCopy(f,e);e=f.toByteArray();0<e.length&&(d=e)}).get();return c?af.fromBytes2String(d):d},u=b=>{if(!isString(b)||""==b||isNull(b))return"";b=b.trim();return b.startsWith("{")?jsonParse(b,__,__,!0):af.fromSLON(b)},J=(b,c,d,f)=>{d=_$(d).isString().default("_oafp_fn_");c=splitBySepWithEnc(c," ",[['"','"'],["'","'"]]);let e=[];$ch("__oaf::chart").create();
if(1<c.length){for(let h=0;h<c.length;h++)if(0==h)e.push(c[h]);else{let g=splitBySepWithEnc(c[h],":",[['"','"'],["'","'"]]).map((m,n)=>{if(0==n){if(m.startsWith("-"))return m;global[d+h]=()=>{if(isString(f)){var p=$ch("__oaf::chart").get({name:f});p=isUnDef(p)?[]:p.data;var v=$path(b,m);if(isArray(v))return v.forEach((y,w)=>{isArray(p[w])?p[w].push(y):p[w]=[y]}),v=p.pop(),$ch("__oaf::chart").set({name:f},{name:f,data:p}),v[0]}else return $path(b,m)};return d+h}return m}).join(":");e.push(g)}return e.join(" ")}return""},
q=b=>{"undefined"===typeof a.outfile?print(b):("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"!==typeof global.__oafp_streams[a.outfile]&&ioStreamWrite(global.__oafp_streams[a.outfile].s,b+(toBoolean(a.outfileappend)?"\n":"")))},z=(b,c,d)=>{b=$o(b,c,d,!0);isDef(b)&&q(b)},r=b=>{"grid"==a.out||a.__inception||toBoolean(a.loopcls)||toBoolean(a.chartcls)||printErrnl(_$(b).default("(processing data...)"))},P=b=>{"grid"==a.out||a.__inception||toBoolean(a.loopcls)||toBoolean(a.chartcls)||
printErrnl("\r"+" ".repeat(_$(b).default("(processing data...)").length)+"\r")},k=(b,c)=>{isUnDef(c)&&(c="exit: "+b);if(isUnDef(ow.oJob)&&!toBoolean(a.noexit))0!=b&&printErr(c),exit(b);else throw c;},C=()=>{__initializeCon();a.help=_$(a.help,"help").isString().default("");switch(a.help.toLowerCase()){case "filters":var b="docs/FILTERS.md";break;case "template":b="docs/TEMPLATE.md";break;case "examples":b="docs/EXAMPLES.md";break;case "readme":case "usage":b="docs/USAGE.md";break;default:b=a.help.toLowerCase(),
b=isDef(E[b])?"docs/"+b+".md":"docs/USAGE.md"}var c=(getOPackPath("oafproc")||".")+"/"+b;let d="";if("docs/USAGE.md"==b&&0<Object.keys(E).length){d="\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let f in E)d+="| "+f+" | help="+f+" |\n"}isDef(c)&&io.fileExists(c)?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c)+d)):q(ow.format.withMD(io.readFileString(c)+
d))):isDef(global._oafphelp)&&isDef(global._oafphelp[b])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[b]+d)):q(ow.format.withMD(global._oafphelp[b]+d))):isString(E[a.help])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(E[a.help])):q(ow.format.withMD(E[a.help]))):q("Check https://github.com/OpenAF/oafp/blob/master/src/"+
b);k(0)},Q=()=>{var b=(getOPackPath("oafproc")||".")+"/.package.yaml";b={oafp:{version:io.fileExists(b)?io.readFileYAML(b).version:"(not available/embedded)",inputs:Array.from(F.keys()).filter(c=>"?"!=c).sort(),transforms:Object.keys(D).filter(c=>"transforms"!=c).sort(),outputs:Array.from(G.keys()).filter(c=>"?"!=c).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",
version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},os:{name:String(java.lang.System.getProperty("os.name")),version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},
store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};return stringify(b,__,"")};ow.loadFormat();a.format=a.output||a.format||a.out;a.type=a.input||a.type||a.in;a.out=a.format;a.output=a.format;a.in=a.type;a.input=a.type;if(isUnDef(a.file)&&isUnDef(a.cmd)){let b=__;for(let c in a)if(""===a[c]&&"-debug"!=c&&"-v"!=c&&"-r"!=c&&"-examples"!=
c){b=c;break}a.file=b}var K=new Map([[".json","json"],[".ndjson","ndjson"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"],[".toml","toml"]]),N=new Set(["csv","ndjson"]),O={lines:(b,c)=>{isBoolean(a.linesjoin)||(a.linesjoin=toBoolean(_$(a.linesjoin,"linesjoin").isString().default(__)));if(!a.linesjoin&&isString(b))0!=b.trim().length&&(0<b.trim().length&&(b=b.trim().split(/\r?\n/)),l(b,c,!0)),L=!0;else return!0},ndjson:(b,c)=>
{isBoolean(a.ndjsonjoin)||(a.ndjsonjoin=toBoolean(_$(a.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(a.ndjsonjoin)return!0;isUnDef(global.__ndjsonbuf)&&0!=b.length&&b.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=b.length&&!b.trim().endsWith("}")){global.__ndjsonbuf+=b.trim();return}0<global.__ndjsonbuf.length&&(b=global.__ndjsonbuf+b,global.__ndjsonbuf=__)}0==b.length||0<b.length&&"{"!=b.trim().substring(0,1)?(l(jsonParse(global.__ndjsonbuf,__,__,!0),
c,!0),L=!0,global.__ndjsonbuf=__):(l(jsonParse(b,__,__,!0),c,!0),L=!0)}},D={transforms:b=>{if(toBoolean(a.transforms))return Object.keys(D).filter(c=>"transforms"!=c).sort()},cmlt:b=>{if(toBoolean(a.cmlt)){b=isArray(b)?b:[b];a.cmltch=_$(a.cmltch,"cmltch").default("(type: simple)");var c=u(a.cmltch);if(isMap(c))return isUnDef(c.type)&&k(-1,"cmltch.type is not defined."),isDef(c.lib)&&loadLib(c.lib),0>$ch().list().indexOf("oafp::cmltdata")&&("remote"==c.type?$ch("oafp::cmltdata").createRemote(c.url):
$ch("oafp::cmltdata").create(c.type,c.options),c=Number(_$(a.cmltsize,"cmltsize").isNumber().default(100))-1,0<c&&$ch("oafp::cmltdata").subscribe(ow.ch.utils.getHousekeepSubscriber("oafp::cmltdata",c))),b.forEach(d=>$ch("oafp::cmltdata").set({t:nowNano()},d)),$ch("oafp::cmltdata").getAll();k(-1,"Invalid cmltch parameter")}},diff:b=>{var c=u(a.diff);if(isMap(c)){isDef(c.filea)&&isDef(c.fileb)||isDef(c.a)&&isDef(c.b)||k(-1,"diff.a path and diff.b path are required.");loadDiff();let d=$path(b,c.a);b=
$path(b,c.b);let f=__;toBoolean(a.color)&&(isUnDef(a.difftheme)&&isDef(getEnv("OAFP_DIFFTHEME"))&&(a.difftheme=getEnv("OAFP_DIFFTHEME")),f=u(_$(a.difftheme,"difftheme").isString().default("")),f=merge({added:"GREEN",removed:"RED",common:"FAINT",linenum:"ITALIC",linediv:"FAINT",linesep:"|"},f));let e=(h,g)=>{if(toBoolean(a.color)){isUnDef(g)&&(g="");var m=new Set;if(isArray(h)){let n=1,p=toBoolean(a.diffnlines),v=0;p&&(h.forEach(w=>{v+=w.value.split("\n").length}),v=String(v).length+1);let y=w=>{let x;
x=p&&""!=g?ansiColor(f.linenum,0<w?$ft("% "+v+"d",n):" ".repeat(v))+ansiColor(f.linediv,`${f.linesep}`):"";n+=w;return x};h.forEach((w,x)=>{x=w.value;isString(x)&&(""!=g?(x=x.split(g),""==x[x.length-1]&&x.pop()):x=[x]);m.add(w.added?x.map(H=>y(1)+ansiColor(f.added,(""!=g?"+":"")+H)).join(ansiColor("RESET",g)):w.removed?x.map(H=>y(0)+ansiColor(f.removed,(""!=g?"-":"")+H)).join(ansiColor("RESET",g)):x.map(H=>y(1)+ansiColor(f.common,(""!=g?" ":"")+H)).join(ansiColor("RESET",g)))})}return Array.from(m).join(ansiColor("RESET",
g))}return $from(h).select({count:__,added:!1,removed:!1,value:[]})};return isString(d)&&isString(b)?toBoolean(a.diffwords)?e(JsDiff.diffWords(d,b,c.options)):toBoolean(a.diffwordswithspace)?e(JsDiff.diffWordsWithSpace(d,b,c.options)):toBoolean(a.difflines)?e(JsDiff.diffLines(d,b,c.options),"\n"):toBoolean(a.diffsentences)?e(JsDiff.diffSentences(d,b,c.options),"\n"):e(JsDiff.diffChars(d,b,c.options)):isArray(d)&&isArray(b)&&!toBoolean(a.color)?e(JsDiff.diffArrays(d,b,c.options)):e(JsDiff.diffJson(d,
b,c.options),"\n")}},jsonschemagen:b=>{if(toBoolean(a.jsonschemagen))return ow.loadObj(),ow.obj.schemaGenerator(b)},jsonschemacmd:b=>D.jsonschema(b),jsonschema:b=>{isMap(b)||k(-1,"jsonschema is only supported with a map.");isUnDef(a.jsonschema)&&isUnDef(a.jsonschemacmd)&&k(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var c;if(isDef(a.jsonschemacmd)){var d=$sh(a.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:k(-1,"Error executing the command '"+
a.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(a.jsonschema);isMap(c)||k(-1,"The schema provided is not a valid JSON schema.");ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(b),errors:c.errors}},sortmapkeys:b=>{if(toBoolean(a.sortmapkeys)&&isObject(b)){let c=(d,f)=>{let e=Object.keys(d).sort(),h={};for(let g=0;g<e.length;g++){let m=e[g],n=d[m];Array.isArray(n)?h[m]=n.map(p=>"object"===typeof p&&null!==p&&void 0!==p?sortMapKeys(p,f):p):h[m]=f&&"object"===typeof n&&
null!==n&&void 0!==n?c(n,f):n}return h};return c(b,!0)}return b},searchkeys:b=>isObject(b)?searchKeys(b,a.searchkeys):b,searchvalues:b=>isObject(b)?searchValues(b,a.searchvalues):b,maptoarray:b=>toBoolean(a.maptoarray)&&isMap(b)?$m4a(b,a.maptoarraykey):b,arraytomap:b=>toBoolean(a.arraytomap)&&isArray(b)?$a4m(b,a.arraytomapkey,toBoolean(a.arraytomapkeepkey)):b,flatmap:b=>toBoolean(a.flatmap)&&isObject(b)?ow.loadObj().flatMap(b,a.flatmapsep):b,merge:b=>{if(toBoolean(a.merge)&&isArray(b)&&1<b.length){for(var c,
d=0;d<b.length;d++)c=0==d?b[d]:merge(c,b[d]);return c}return b},correcttypes:b=>{toBoolean(a.correcttypes)&&isObject(b)&&traverse(b,(c,d,f,e)=>{switch(descType(d)){case "number":isString(d)&&(e[c]=Number(d));break;case "string":"true"==d.trim().toLowerCase()||"false"==d.trim().toLowerCase()?e[c]=toBoolean(d):d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?e[c]=new Date(d):d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&
(e[c]=new Date(d))}});return b},removenulls:b=>{toBoolean(a.removenulls)&&traverse(b,(c,d,f,e)=>{(isNull(d)||isUnDef(d))&&delete e[c]});return b},removedups:b=>{if(toBoolean(a.removedups)){if(isArray(b)){var c=new Set,d=[];b.forEach(f=>{var e=f;isObject(f)&&(e=sortMapKeys(e));e=stringify(e,__,!0);c.has(e)||(c.add(e),d.push(f))});return d}k(-1,"removedups is only supported for arrays")}return b},llmprompt:b=>{if(isString(a.llmprompt)){a.llmenv=_$(a.llmenv,"llmenv").isString().default("OAFP_MODEL");
a.llmoptions=_$(a.llmoptions,"llmoptions").isString().default(__);var c=$llm(isDef(a.llmoptions)?a.llmoptions:$sec("system","envs").get(a.llmenv));isDef(a.llmconversation)&&io.fileExists(a.llmconversation)&&c.getGPT().setConversation(io.readFileJSON(a.llmconversation));var d="json",f=!0;isString(a.input)&&("md"==a.input&&(d="markdown",f=!1),"mdtable"==a.input&&(d="markdown table",f=!1),"hsperf"==a.input&&(d="java hsperf file"),"raw"==a.input&&(d="raw",f=!1));c=c.withContext(f?stringify(b,__,!0):b,
isDef(a.llmcontext)?a.llmcontext:`${d} input data`);if(isString(a.output)&&("md"==a.output||"mdtable"==a.output||"raw"==a.output))return b=c.prompt(a.llmprompt),isDef(a.llmconversation)&&io.writeFileJSON(a.llmconversation,c.getGPT().getConversation(),""),b;b=c.promptJSON(a.llmprompt);isDef(a.llmconversation)&&io.writeFileJSON(a.llmconversation,c.getGPT().getConversation(),"");return b}return b},splitlines:b=>toBoolean(a.splitlines)&&isString(b)?b.split(/\r?\n/):b,regression:b=>{if(isString(a.regression)){ow.loadAI();
var c=ow.ai.regression(),d=_$(a.regressionpath,"regressionpath").isString().default("@");let f=u(_$(a.regressionoptions,"regressionoptions").isString().default("{order:2,precision:5}"));d=$path(b,d);if(isArray(d)){if(isString(a.regressionx)){let h=$path(b,a.regressionx);d=d.map((g,m)=>[h[m],g])}else d=d.map((h,g)=>[g+1,h]);let e;switch(a.regression){case "exp":e=c.exponential(d,f);break;case "poly":e=c.polynomial(d,f);break;case "power":e=c.power(d,f);break;case "log":e=c.logarithmic(d,f);break;default:e=
c.linear(d,f)}return isDef(e)&&isDef(e.points)?(isString(a.regressionforecast)&&(b=$path(b,a.regressionforecast),isArray(b)?b.forEach(h=>{e.points.push(e.predict(h))}):k(-1,"Invalid array of x for regression forecast")),e.points.map(h=>({x:h[0],y:h[1]}))):e}k(-1,"Invalid data for regression analysis")}return b},normalize:b=>{if(isString(a.normalize)){var c=u(a.normalize);if(isMap(c)){ow.loadAI();if(isMap(b))return ow.ai.normalize.withSchema(b,c,!0);if(isArray(b))return b.map(d=>ow.ai.normalize.withSchema(d,
c,!0))}else k(-1,"Invalid normalize schema")}else k(-1,"Invalid normalize schema")},denormalize:b=>{if(isString(a.denormalize)){var c=u(a.denormalize);if(isMap(c)){ow.loadAI();isUnDef(ow.ai.normalize.denormalizeWithSchema)&&k(-1,"This version of OpenAF does not support denormalizeWithSchema");if(isMap(b))return ow.ai.normalize.denormalizeWithSchema(b,c,!1);if(isArray(b))return b.map(d=>ow.ai.normalize.denormalizeWithSchema(d,c,!1))}else k(-1,"Invalid denormalize schema")}else k(-1,"Invalid denormalize schema")},
kmeans:b=>{isNumber(a.kmeans)||(a.kmeans=5);isArray(b)||k(-1,"For kmeans transform you need to provide an array as input");ow.loadAI();return ow.ai.cluster({type:"kmeans",numberOfClusters:Number(a.kmeans)}).classify(b)},getlist:b=>{if(isObject(b)&&(toBoolean(a.getlist)||isNumber(a.getlist))){var c=!1,d,f=isNumber(a.getlist)?a.getlist:1;traverse(b,(e,h,g,m)=>{!c&&isArray(h)&&(f--,0==f&&(c=!0),d=h)});return c?d:b}}},G=new Map([["?",(b,c)=>{b=Array.from(G.keys()).filter(d=>"?"!=d).sort();z(b,c)}],["pm",
(b,c)=>{z(b,c)}],["key",(b,c)=>{z(b,c)}],["html",(b,c)=>{let d;c=!1;a.htmlopen=toBoolean(_$(a.htmlopen,"htmlopen").isString().default("true"));a.htmlwait=_$(a.htmlwait,"htmlwait").isNumber().default(2500);a.htmlopen&&(d=io.createTempFile("oafp_",".html"));ow.loadTemplate();isString(b)?(b=ow.template.html.genStaticVersion(ow.template.parseMD2HTML(b,!toBoolean(a.htmlpart),!toBoolean(a.htmlcompact))),b=b.replace("<html>",'<html><meta charset="utf-8">')):(b=ow.template.html.parseMap(b,!0),b='<html><meta charset="utf-8"><style>'+
b.css+"</style><body>"+b.out+"</body></html>");a.htmlopen&&(io.writeFileString(d,b),c=openInBrowser("file:///"+d.replace(/\\/g,"/")));c?sleep(a.htmlwait,!0):q(b)}],["ctable",(b,c)=>{z(b,c)}],["stable",(b,c)=>{z(b,c)}],["table",(b,c)=>{z(b,c)}],["log",(b,c)=>{if(isString(b)&&toBoolean(a.logprintall))q(b.replace(/\n$/,""));else if(c=b,isMap(b)&&(c=[b]),isArray(c)){isUnDef(a.logtheme)&&isDef(getEnv("OAFP_LOGTHEME"))&&(a.logtheme=getEnv("OAFP_LOGTHEME"));let d=u(_$(a.logtheme,"logtheme").isString().default(""));
d=merge({errorLevel:"RED,BOLD",warnLevel:"YELLOW",timestamp:"BOLD"},d);c.forEach(f=>{if(isMap(f)){let e=isDef(f["@timestamp"])?f["@timestamp"]:__,h=isDef(f.level)?f.level:__;f=isDef(f.message)?f.message:__;let g;isDef(h)&&(0<=h.toLowerCase().indexOf("err")&&(g=d.errorLevel),0<=h.toLowerCase().indexOf("warn")&&(g=d.warnLevel));isDef(e)&&24<e.length&&(e=e.substring(0,23)+"Z");(isDef(f)||isDef(e))&&q(ansiColor(d.timestamp,e)+(isDef(h)?" | "+ansiColor(g,h):"")+" | "+ansiColor(g,f))}})}}],["raw",(b,c)=>
{isString(b)?q(b):q(stringify(b))}],["ini",(b,c)=>{isString(b)||(ow.loadJava(),c=new ow.java.ini,q(c.put(b).save()))}],["toml",(b,c)=>{isUnDef(af.toTOML)&&k(-1,"TOML support not found.");if(isMap(b))q(af.toTOML(b));else if(isArray(b))q(af.toTOML({list:b}));else return __}],["mdyaml",(b,c)=>{isArray(b)?b.forEach((d,f)=>{z(d,merge(c,{__format:"yaml"}));f<b.length-1&&q("---\n")}):z(b,merge(c,{__format:"yaml"}))}],["mdtable",(b,c)=>{isArray(b)&&(ow.loadTemplate(),q(ow.template.md.table(b)))}],["template",
(b,c)=>{isString(b)||(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(a.template)&&isUnDef(a.templatepath)&&k(-1,"For out=handlebars you need to provide a template=someFile.hbs or templatepath=..."),a.templatedata=_$(a.templatedata,"templatedata").isString().default("@"),q($t(isUnDef(a.template)?$path(a.__origr,a.templatepath):io.readFileString(a.template),$path(b,a.templatedata))))}],["openmetrics",(b,c)=>{isString(b)?k(-1,
"For out=openmetrics input needs to be an array or map."):(ow.loadMetrics(),b=ow.metrics.fromObj2OpenMetrics(b,a.metricsprefix,a.metricstimestamp),b=b.split("\n").map(d=>{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).join("\n"),q(b))}],["pjson",(b,c)=>{c.__format="prettyjson";z(b,c)}],["ndjson",(b,c)=>{isArray(b)?b.forEach(d=>q(stringify(d,__,""))):isMap(b)?q(stringify(b,
__,"")):z(b,c)}],["base64",(b,c)=>{b=isString(b)?b:stringify(b);toBoolean(a.base64gzip)?q(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(b))))):q(af.fromBytes2String(af.toBase64Bytes(b)))}],["grid",(b,c)=>{isUnDef(a.grid)&&k(-1,"For out=grid you need to provide a grid=...");c=u(_$(a.grid,"grid").isString().$_());isArray(c)&&0<c.length&&isArray(c[0])?(c.forEach((d,f)=>{d.forEach((e,h)=>{if(isUnDef(e.type)||"empty"!=e.type){if(isDef(e.cmd)){var g=$sh(e.cmd).getJson(0);g=isDef(g)&&
isDef(g.stdout)?g.stdout:""}else g=b;if("chart"==e.type||"bar"==e.type)h="_chrt"+(f+1)+"."+(h+1),e.obj=("chart"==e.type?h+" ":"")+J(g,e.obj,h),isUnDef(e.title)&&(e.title="Chart "+h);isDef(e.path)?(e.obj=$path(g,e.path),isUnDef(e.title)&&(e.title=e.path)):isString(g)?e.obj=g:isObject(g)&&"chart"!=e.type&&(e.obj=$path(g,"@"))}else e.obj=""})}),c=ow.format.string.grid(c,__,__," ",!0),q(c)):k(-1,"Invalid grid parameter: '"+stringify(a.grid,__,"")+"'")}],["envs",(b,c)=>{b=ow.loadObj().flatMap(b,"_");isUnDef(a.envscmd)&&
(a.envscmd=ow.format.isWindows()?"set":"export");a.envscmd=String(a.envscmd);isUnDef(a.envsprefix)&&(a.envsprefix="_OAFP_");a.envsprefix=String(a.envsprefix);c=new Set;for(var d in b){var f=c,e=f.add,h=a.envscmd+(0<a.envscmd.length?" ":"")+(a.envsprefix+d.replace(/[^a-zA-Z0-9_]/g,"_"))+"=";var g=b[d];g=0<=String(g).indexOf(" ")?'"'+g+'"':g;e.call(f,h+g)}q(Array.from(c).join("\n"))}],["cmd",(b,c)=>{isString(a.outcmd)||k(-1,'For out=cmd you need to provide a outcmd="..."');let d=f=>{f=isString(f)?f:
stringify(f,__,"");if(toBoolean(a.outcmdparam))try{var e=$sh(a.outcmd.replace(/([^\\]?){}/g,"$1"+f)).get(0)}catch(h){sprintErr(h)}else e=$sh(a.outcmd,f).get(0);toBoolean(a.outcmdnl)?(0<e.stdout.length&&print(e.stdout),0<e.stderr.length&&printErr(e.stderr)):(0<e.stdout.length&&printnl(e.stdout),0<e.stderr.length&&printErrnl(e.stderr))};isArray(b)?toBoolean(a.outcmdjoin)?d(b):toBoolean(a.outcmdseq)?b.forEach(d):parallel4Array(b,f=>{d(f)}):(isString(b),d(b))}],["chart",(b,c)=>{isUnDef(a.chart)&&k(-1,
'For out=chart you need to provide a chart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&k(-1,"Output=chart is not supported in this version of OpenAF");b=J(b,a.chart);0<b.length&&(toBoolean(a.chartcls)&&cls(),q(printChart("oafp "+b)))}],["schart",(b,c)=>{isUnDef(a.schart)&&k(-1,'For out=schart you need to provide a schart="<units> [<path[:color][:legend]>...]"');isUnDef(splitBySepWithEnc)&&k(-1,"Output=schart is not supported in this version of OpenAF");b=J(b,a.schart,"_oafp_sfn_",
"soafp");0<b.length&&q(printChart("soafp "+b))}],["ch",(b,c)=>{isUnDef(a.ch)&&k(-1,'For out=ch you need to provide a ch="(type: ...)"');isUnDef(a.chkey)&&k(-1,'For out=ch you need to provide a chkey="key1, key2"');b=isMap(b)?[b]:b;a.ch=u(a.ch);isMap(a.ch)?(isUnDef(a.ch.type)&&k(-1,"ch.type is not defined."),isDef(a.ch.lib)&&loadLib(a.ch.lib),"remote"==a.ch.type?$ch("oafp::outdata").createRemote(a.ch.url):$ch("oafp::outdata").create(a.ch.type,a.ch.options),toBoolean(a.chunset)?$ch("oafp::outdata").unsetAll(a.chkey.split(",").map(d=>
d.trim()),b):$ch("oafp::outdata").setAll(a.chkey.split(",").map(d=>d.trim()),b),$ch("oafp::outdata").destroy()):k(-1,"Invalid ch parameter")}],["db",(b,c)=>{(!isArray(b)||1>b.length)&&k(-1,"db is only supported for filled arrays/lists");a.dbtable=_$(a.dbtable,"outdbtable").isString().default("data");a.dbnocreate=toBoolean(_$(a.dbnocreate,"outdbnocreate").isString().default("false"));a.dbicase=toBoolean(_$(a.dbicase,"outdbicase").isString().default("false"));a.dbbatchsize=_$(a.dbbatchsize,"dbbatchsize").isNumber().default(__);
ow.loadObj();try{isString(a.dbjdbc)||k(-1,"dbjdbc URL is not defined.");isDef(a.dblib)&&loadLib("jdbc-"+a.dblib+".js");var d=new DB(a.dbjdbc,a.dbuser,a.dbpass,a.dbtimeout);if(!a.dbnocreate)try{var f=ow.obj.fromObj2DBTableCreate(a.dbtable,b,__,!a.dbicase);d.u(f);d.commit()}catch(n){d.rollback(),k(-1,"Error creating table: "+n)}var e=Object.keys(ow.obj.flatMap(b[0]));var h=a.dbicase?e.join(",").toUpperCase():'"'+e.join('", "')+'"';let m="";var g=b.map(n=>{var p=ow.obj.flatMap(n);n=[];for(var v in e)n.push(p[e[v]]);
v=e.map(y=>String(p[y]));n="INSERT INTO "+(a.dbicase?a.dbtable:'"'+a.dbtable+'"')+" ("+h+") VALUES ("+v.map(y=>"?").join(", ")+")";n.length>m.length&&(m=String(n));return v});d.usArray(m,g,a.dbbatchsize)}catch(m){isDef(d)&&d.rollback(),printErr(m),k(-1,"Error connecting to the database: "+m)}finally{isDef(d)&&(d.commit(),d.close())}}],["sql",(b,c)=>{(!isArray(b)||1>b.length)&&k(-1,"sql is only supported for filled arrays/lists");a.sqltable=_$(a.sqltable,"sqltable").isString().default("data");a.sqlicase=
toBoolean(_$(a.sqlicase,"sqlicase").isString().default("false"));a.sqlnocreate=toBoolean(_$(a.sqlnocreate,"sqlnocreate").isString().default("false"));ow.loadObj();a.sqlnocreate||q(ow.obj.fromObj2DBTableCreate(a.sqltable,b,__,!a.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(b[0]));var f=a.sqlicase?d.join(",").toUpperCase():'"'+d.join('", "')+'"';q(b.map(e=>{var h=ow.obj.flatMap(e);e=[];for(var g in d)e.push(h[d[g]]);g=d.map(m=>{m=h[m];isString(m)&&(m="'"+m.replace(/'/g,"''")+"'");isNull(m)&&(m=
"null");return m});return"INSERT INTO "+(a.sqlicase?a.sqltable:'"'+a.sqltable+'"')+" ("+f+") VALUES ("+g.join(",")+");"}).join("\n"))}],["xls",(b,c)=>{if(!isString(b)){try{includeOPack("plugin-XLS")}catch(h){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");if(isMap(b)){ow.loadObj();var d=ow.obj.flatMap(b);var f=Object.keys(d).map(h=>({key:h,value:d[h]}))}isArray(b)&&(f=b);traverse(f,(h,g,m,n)=>{isString(g)&&g.startsWith("=")&&(n[h]=
"'"+g)});b=!1;c=a.xlsfile;isUnDef(a.xlsfile)&&(b=!0,a.xlsfile=io.createTempFile("oafp",".xlsx"));c=new XLS(isDef(c)&&io.fileExists(c)?c:__);var e=c.getSheet(_$(a.xlssheet,"xlssheet").isString().default("data"));a.xlsformat=_$(a.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');a.xlsformat=u(a.xlsformat);ow.format.xls.setTable(c,e,"A",1,f,__,a.xlsformat);c.writeFile(a.xlsfile);c.close();a.xlsopenwait=_$(a.xlsopenwait,"xlsopenwait").isNumber().default(5E3);
a.xlsopen=toBoolean(_$(a.xlsopen,"xlsopen").isString().default("true"));a.xlsopen&&(ow.format.isWindows()?($sh("start "+a.xlsfile).exec(),b&&sleep(a.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+a.xlsfile).exec(),b&&sleep(a.xlsopenwait,!0)))}}]]),F=new Map([["?",(b,c)=>{b=Array.from(F.keys()).filter(d=>"?"!=d).sort();l(b,c)}],["pm",(b,c)=>{r();isDef(__pm._map)&&(b=__pm._map);isDef(__pm._list)&&(b=__pm._list);l(b,c)}],["jsonschema",(b,c)=>{r();b=jsonParse(b,__,__,!0);isMap(b)||
k(-1,"jsonschema is only supported with a map.");ow.loadObj();b=ow.obj.schemaSampleGenerator(b);l(b,c)}],["yaml",(b,c)=>{r();b=af.fromYAML(b);l(b,c)}],["xml",(b,c)=>{r();a.xmlignored=_$(a.xmlignored,"xmlignored").isString().default(__);a.xmlprefix=_$(a.xmlprefix,"xmlprefix").isString().default(__);a.xmlfiltertag=toBoolean(_$(a.xmlfiltertag,"xmlfiltertag").isString().default(__));0<=b.indexOf("<?xml")&&(b=b.substring(b.indexOf("?>")+2).trim());0<=b.indexOf("<!DOCTYPE")&&(b=b.substring(b.indexOf(">")+
1).trim());b=af.fromXML2Obj(b,a.xmlignored,a.xmlprefix,!a.xmlfiltertag);l(b,c)}],["lines",(b,c)=>{isBoolean(a.linesjoin)||(a.linesjoin=toBoolean(_$(a.linesjoin,"linesjoin").isString().default(__)));r();let d=__,f=[],e=g=>{g=g.split("\n").map(n=>{let p="",v=0;for(let y=0;y<n.length;y++)if("\t"===n[y]){let w=8-v%8;p+=" ".repeat(w);v+=w}else p+=n[y],v++;return p}).join("\n");if(isUnDef(d))return d=[],lastPos=0,isUnDef(a.linesvisualsepre)&&(a.linesvisualsepre=" \\s+"),g.split(new RegExp(a.linesvisualsepre)).forEach(n=>
{d.push(n);n=g.substring(lastPos).match(new RegExp(ow.format.escapeRE(n)+"("+a.linesvisualsepre+"|$)"));!isNull(n)&&isDef(n.index)?(f.push(lastPos+n.index),lastPos=n.index):k(-1,"Problem with linesvisual to find header positioning.")}),__;var m={};f.forEach((n,p)=>{m[d[p]]=g.substring(n,p+1<f.length?f[p+1]-1:__).trim()});return m};if(a.linesjoin)if(isDef(a.file)&&isUnDef(a.cmd)&&(b=io.readFileString(a.file)),isDef(a.cmd)&&(b=B(a.cmd,!0)),b=b.split(/\r?\n/),toBoolean(a.linesvisual)){var h=[];b.forEach(g=>
{0!=g.length&&(g=e(g),isDef(g)&&h.push(g))});l(h,c)}else l(b,c);else b=isDef(a.file)&&isUnDef(a.cmd)?io.readFileStream(a.file):isDef(a.cmd)?af.fromBytes2InputStream(B(a.cmd)):af.fromString2InputStream(b),ioStreamReadLines(b,g=>{toBoolean(a.linesvisual)?(g=e(g),isDef(g)&&l(g,clone(c),!0)):l(g,clone(c),!0)}),b.close()}],["ndjson",(b,c)=>{isBoolean(a.ndjsonjoin)||(a.ndjsonjoin=toBoolean(_$(a.ndjsonjoin,"ndjsonjoin").isString().default(__)));r();global.__ndjsonbuf=__;var d=(e,h)=>{isUnDef(global.__ndjsonbuf)&&
0!=e.length&&e.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=e.length&&!e.trim().endsWith("}")){global.__ndjsonbuf+=e.trim();return}0<global.__ndjsonbuf.length&&(e=global.__ndjsonbuf+e,global.__ndjsonbuf=__)}0==e.length||0<e.length&&"{"!=e.trim().substring(0,1)?(h(e),global.__ndjsonbuf=__):h(e)},f=e=>{var h=[];e.split("\n").filter(g=>0<g.length).forEach(g=>d(g,m=>h.push(jsonParse(m,__,__,toBoolean(a.ndjsonfilter)))));return h};a.ndjsonjoin?(isDef(a.file)&&isUnDef(a.cmd)&&
(b=io.readFileString(a.file)),isDef(a.cmd)&&(b=B(a.cmd,!0)),l(f(b),c)):(b=isDef(a.file)&&isUnDef(a.cmd)?io.readFileStream(a.file):isDef(a.cmd)?af.fromBytes2InputStream(B(a.cmd)):af.fromString2InputStream(b),ioStreamReadLines(b,e=>{d(e,h=>l(jsonParse(h,__,__,!0),clone(c),!0))}),b.close())}],["md",(b,c)=>{r();__conConsole=__ansiColorFlag=!0;isUnDef(a.format)&&isUnDef(c.__format)&&(a.format="md",c.__format="md");l(b,c)}],["mdtable",(b,c)=>{r();ow.loadTemplate();b=ow.template.md.fromTable(b);l(b,c)}],
["raw",(b,c)=>{r();l(b,c)}],["ini",(b,c)=>{r();ow.loadJava();var d=new ow.java.ini;b=isDef(a.file)?d.loadFile(a.file).get():d.load(b).get();l(b,c)}],["sql",(b,c)=>{isString(b)?l(af.fromSQL(b).ast,c):l(b,c)}],["openmetrics",(b,c)=>{isString(b)?(ow.loadMetrics(),l(ow.metrics.fromOpenMetrics2Array(b),c)):l(b,c)}],["ch",(b,c)=>{r();isUnDef(a.inch)&&k(-1,"inch is not defined.");a.inch=u(a.inch);if(isMap(a.inch)){isUnDef(a.inch.type)&&k(-1,"inch.type is not defined.");isDef(a.inch.lib)&&loadLib(a.inch.lib);
"remote"==a.inch.type?$ch("oafp::indata").createRemote(a.inch.url):$ch("oafp::indata").create(a.inch.type,a.inch.options);var d=u(b);toBoolean(a.inchall)||0==b.trim().length?l($ch("oafp::indata").getAll(isMap(d)?d:__),c):l($ch("oafp::indata").get(isMap(d)?d:__),c);$ch("oafp::indata").destroy()}else k(-1,"inch is not a valid map.")}],["db",(b,c)=>{if(isString(b)){r();isString(a.indbjdbc)||k(-1,"indbjdbc URL is not defined.");try{isDef(a.indblib)&&loadLib("jdbc-"+a.indblib+".js");var d=new DB(a.indbjdbc,
a.indbuser,a.indbpass,a.indbtimeout);d.convertDates(!0);if(toBoolean(a.indbexec)){var f=d.u(b);l({affectedRows:f},c);d.commit()}else f=d.q(b),isMap(f)&&isArray(f.results)?l(f.results,c):k(-1,"Invalid DB result: "+stringify(f))}catch(e){printErr(e.message),isDef(d)&&d.rollback(),k(-1,"Error executing SQL: "+e.message)}finally{isDef(d)&&(d.rollback(),d.close())}}else k(-1,"db is only supported with a SQL string.")}],["xls",(b,c)=>{r();try{includeOPack("plugin-XLS")}catch(f){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}a.xlssheet=
_$(a.xlssheet,"xlssheet").isString().default(0);a.xlsevalformulas=toBoolean(_$(a.xlsevalformulas,"xlsevalformulas").isString().default(!0));a.xlscol=_$(a.xlscol,"xlscol").isString().default("A");a.xlsrow=_$(a.xlsrow,"xlsrow").isString().default(1);plugin("XLS");if(isDef(a.file)||isDef(a.cmd)){b=new XLS(isDef(a.cmd)?B(a.cmd):a.file);var d=b.getSheet(a.xlssheet);d=b.getTable(d,a.xlsevalformulas,a.xlscol,a.xlsrow);b.close();isDef(d)&&isMap(d)&&(d=d.table);l(d,c)}else k(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],
["csv",(b,c)=>{r();if(isDef(a.file)||isDef(a.cmd)){var d=isDef(a.cmd)?af.fromBytes2InputStream(B(a.cmd)):io.readFileStream(a.file);b=$csv(a.inputcsv).fromInStream(d).toOutArray();d.close()}else b=$csv(a.inputcsv).fromInString(b).toOutArray();l(b,c)}],["hsperf",(b,c)=>{if(isDef(a.file)||isDef(a.cmd)){r();ow.loadJava();var d=isDef(a.cmd)?ow.java.parseHSPerf(B(a.cmd)):ow.java.parseHSPerf(a.file);d.__ts=new Date;var f=0,e=0;d.sun.gc.generation.forEach(h=>{h.space.forEach(g=>{e+=Number(g.used);f=isNumber(g.capacity)?
f+Number(g.capacity):f;d.sun.gc["__percUsed_"+g.name]=100*g.used/g.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;b=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);d.sun.gc.__ygc=isDef(b)?Number(b.invocations):0;d.sun.gc.__ygct=isDef(b)?Number(b.time/1E9):0;b=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name","").at(0);
d.sun.gc.__fgc=isDef(b)?Number(b.invocations):0;d.sun.gc.__fgct=isDef(b)?Number(b.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/1E9;d.java.__mem={total:f,used:e,free:f-e,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-d.sun.gc.metaspace.used};l(d,c)}else k(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["rawhex",(b,c)=>{a.inrawhexline=_$(a.inrawhexline,"inrawhexline").isNumber().default(__);
r();b=isDef(a.file)||isDef(a.cmd)?isDef(a.cmd)?B(a.cmd):io.readFileBytes(a.file):af.fromString2Bytes(b);b=ow.format.string.toHexArray(b,a.inrawhexline);b.forEach(d=>{d.characters=d.characters.replace(/[\x00-\x1F\x80-\xFF]/g,".")});l(b,c)}],["base64",(b,c)=>{r();b=toBoolean(a.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(b,!0))):af.fromBytes2String(af.fromBase64(b));l(b,c)}],["oafp",(b,c)=>{a.__inception=!0;b=u(b);var d="_oafp_key_"+genUUID();if(isMap(b))b.out="key",b.__key=d,b.__inception=
!0,oafp(b),b=$get(d),$unset(d),l(b,c);else if(isArray(b)){ow.loadObj();$set(d,!0);var f=new ow.obj.syncArray;b=b.map((e,h)=>{var g=d+"_"+String(h);e.out="key";e.__key=g;e.__inception=!0;return $do(()=>{oafp(e);f.add($get(g));$unset(g)}).catch(m=>{sprintErr(m)})});$doWait($doAll(b));l(f.toArray(),c)}else k(-1,"oafp input data needs to be a map or an array.")}],["llm",(b,c)=>{a.llmenv=_$(a.llmenv,"llmenv").isString().default("OAFP_MODEL");a.llmoptions=_$(a.llmoptions,"llmoptions").isString().default(__);
isUnDef(a.llmoptions)&&!isString(getEnv(a.llmenv))&&k(-1,"llmoptions not defined and "+a.llmenv+" not found.");r();var d=$llm(isDef(a.llmoptions)?a.llmoptions:$sec("system","envs").get(a.llmenv));isDef(a.llmconversation)&&io.fileExists(a.llmconversation)&&d.getGPT().setConversation(io.readFileJSON(a.llmconversation));b="md"==a.output||"mdtable"==a.output||"raw"==a.output?d.prompt(b):d.promptJSON(b);isDef(a.llmconversation)&&io.writeFileJSON(a.llmconversation,d.getGPT().getConversation(),"");l(jsonParse(b,
__,__,isString(b)),c)}],["llmmodels",(b,c)=>{a.llmenv=_$(a.llmenv,"llmenv").isString().default("OAFP_MODEL");a.llmoptions=_$(a.llmoptions,"llmoptions").isString().default(__);isUnDef(a.llmoptions)&&!isString(getEnv(a.llmenv))&&k(-1,"llmoptions not defined and "+a.llmenv+" not found.");r();b=$llm(isDef(a.llmoptions)?a.llmoptions:$sec("system","envs").get(a.llmenv));isUnDef(b.getModels)&&k(-1,"OpenAF support for llm model listing API not found.");l(b.getModels(),c)}],["toml",(b,c)=>{r();isUnDef(af.fromTOML)&&
k(-1,"TOML support not found.");l(af.fromTOML(b),c)}],["slon",(b,c)=>{r();l(af.fromSLON(b),c)}],["json",(b,c)=>{r();l(jsonParse(b,__,__,isString(b)),c)}]]),E={};isString(a.libs)&&(a.libs=a.libs.split(",").map(b=>b.trim()).filter(b=>0<b.length));isDef(__flags.OAFP)&&isArray(__flags.OAFP.libs)&&isArray(a.libs)?a.libs=__flags.OAFP.libs.concat(a.libs):a.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(a.libs)&&a.libs.forEach(b=>{try{var c=require("oafp_"+b+".js");if(isDef(c.oafplib)){var d=c.oafplib(clone(a),
l,z,{_runCmd2Bytes:B,_fromJSSLON:u,_msg:"(processing data...)",_showTmpMsg:r,_clearTmpMsg:P,_chartPathParse:J,_exit:k,_print:q,_o$o:z});isMap(d)&&(isArray(d.fileExtensions)&&d.fileExtensions.forEach(f=>{var e=f.ext;f=f.type;K.has(e)?printErr("WARN: Extension '"+e+"' already exists."):K.set(e,f)}),isArray(d.fileExtensionsNoMem)&&d.fileExtensionsNoMem.forEach(f=>{f=f.ext;N.has(f)?printErr("WARN: Extension '"+f+"' already exists."):N.add(f)}),isArray(d.input)&&d.input.forEach(f=>{var e=f.type;f=f.fn;
F.has(e)?printErr("WARN: Input type '"+e+"' already exists."):F.set(e,f)}),isArray(d.inputLine)&&d.inputLine.forEach(f=>{var e=f.type;f=f.fn;isUnDef(_inputLinesFns[e])?O[e]=f:printErr("WARN: Input type '"+e+"' already exists.")}),isArray(d.transform)&&d.transform.forEach(f=>{var e=f.type;f=f.fn;isUnDef(D[e])?D[e]=f:printErr("WARN: Transform '"+e+"' already exists.")}),isArray(d.output)&&d.output.forEach(f=>{var e=f.type;f=f.fn;G.has(e)?printErr("WARN: Output type '"+e+"' already exists."):G.set(e,
f)}),isString(d.help)&&(E[b.toLowerCase()]=d.help))}else printErr("WARN: Library '"+b+"' does not have oafplib.")}catch(f){printErr("WARN: Library '"+b+"' error: "+f)}});(""==a["-h"]||isString(a.help)&&0<a.help.length)&&C();a.format=_$(a.format,"format").isString().default(__);__initializeCon();isDef(a["-r"])&&(String(java.lang.System.getProperty("os.name")).match(/Windows/)||__con.getTerminal().settings.set("sane"),delete a["-r"]);if(isDef(a.secKey)){toBoolean(a.secEnv)&&(a.secRepo="system",a.secBucket=
"envs");a.secRepo=_$(a.secRepo,"secRepo").isString().default(getEnv("OAFP_SECREPO"));a.secBucket=_$(a.secBucket,"secBucket").isString().default(getEnv("OAFP_SECBUCKET"));a.secPass=_$(a.secPass,"secPass").isString().default(getEnv("OAFP_SECPASS"));a.secMainPass=_$(a.secMainPass,"secMainPass").isString().default(getEnv("OAFP_SECMAINPASS"));a.secFile=_$(a.secFile,"secFile").isString().default(getEnv("OAFP_SECFILE"));let b=$sec(a.secRepo,a.secBucket,a.secPass,a.secMainPass,a.secFile).get(secKey);isDef(b)&&
Object.keys(b).forEach(c=>a[c]=b[c])}var A={__format:a.format,__from:a.from,__ifrom:a.ifrom,__isql:a.isql,__sql:a.sql,__path:a.path,__opath:a.opath,__csv:a.csv,__pause:a.pause,__key:a.__key};isDef(a.inputcsv)&&(a.inputcsv=u(a.inputcsv));isDef(a.incsv)&&(a.incsv=u(a.incsv));isDef(a.csv)&&(a.csv=u(a.csv));var R=!1;if(""==a["-v"]||isString(a.version)&&0<a.version.length)R=!0,Q();if(""==a["-examples"]||isString(a.examples)&&0<a.examples.length)a.url="https://ojob.io/oafp-examples.yaml",a.in="yaml",isString(a.examples)&&
0<a.examples.length?("?"!=a.examples.trim()&&(A.__format="template"),A.__path="data",a.templatepath="tmpl",0<a.examples.indexOf("::")?(C=a.examples.split("::").filter(b=>0<b.length),A.__sql=1==C.length?"select * where c like '"+C[0]+"'":"select * where c like '"+C[0]+"' and s like '"+C[1]+"'"):"?"==a.examples.trim()?(A.__path="data.sort(map(&concat(c,concat('::',s)),[]))",a.removedups=!0):A.__sql="select * where d like '%"+a.examples+"%' or s like '%"+a.examples+"%' or c like '%"+a.examples+"%'"):
(A.__path="data[].{category:c,subCategory:s,description:d}",A.__from="sort(category,subCategory,description)",A.__format="ctable"),delete a["-examples"];var t="",L=!1;isDef(a.outfile)&&("undefined"===typeof global.__oafp_streams&&(global.__oafp_streams={}),"undefined"===typeof global.__oafp_streams[a.outfile]&&(global.__oafp_streams[a.outfile]={s:io.writeFileStream(a.outfile,toBoolean(a.outfileappend))}));C=()=>{if(R)t=Q();else if(a.jsonprefix=_$(a.jsonprefix,"jsonprefix").isString().default(__),
a.jsondesc=toBoolean(_$(a.jsondesc,"jsondesc").default("false")),isDef(a.insecure)&&toBoolean(a.insecure)&&ow.loadJava().setIgnoreSSLDomains(),isDef(a.file)){if(0>a.file.indexOf("::")&&!io.fileExists(a.file)&&k(-1,"ERROR: File not found: '"+a.file+"'"),!N.has(a.type))if("json"==a.type||isUnDef(a.type))if(a.jsondesc){var b=new Set;io.readStreamJSON(a.file,d=>{d=d.substring(2);isDef(a.jsonprefix)?d.startsWith(a.jsonprefix)&&b.add(d):b.add(d);return!1});t=stringify(Array.from(b),__,"")}else if(isDef(a.jsonprefix)){var c=
io.readStreamJSON(a.file,d=>d.substring(2).startsWith(a.jsonprefix));t=stringify(c,__,"")}else t=io.readFileString(a.file);else t=io.readFileString(a.file)}else if(a.jsondesc&&k(-1,"ERROR: jsondesc only available for file input."),a.jsonprefix&&k(-1,"ERROR: jsonprefix only available for file input."),isDef(a.cmd))t=B(a.cmd,!0);else if(isString(a.data))t=a.data;else if(isDef(a.url)){a.urlmethod=_$(a.urlmethod,"urlmethod").isString().default("GET");c=u(_$(a.urlparams).isString().default("{}"));let d;
isDef(a.urldata)&&(d=u(a.urldata));switch(a.urlmethod.toLowerCase()){case "post":t=$rest(c).post(a.url,d);break;case "put":t=$rest(c).put(a.url,d);break;case "delete":t=$rest(c).delete(a.url,d);break;default:t=$rest(c).get(a.url)}isObject(t)&&(t=stringify(t,__,""))}else"pm"!=a.input&&(t=[],io.pipeLn(d=>{isDef(O[a.type])?O[a.type](M(d),clone(A))&&t.push(d):t.push(d);return!1}),t=t.join("\n"));L||(isUnDef(a.type)&&(isDef(a.file)&&(c=a.file.substring(a.file.lastIndexOf(".")),K.has(c)&&(a.type=K.get(c))),
isUnDef(a.type)&&(c=t.trim(),c.startsWith("{")||c.startsWith("[")?a.type="json":c.startsWith("(")?a.type="slon":c.startsWith("<")?a.type="xml":isString(c)&&0<c.length?1<c.substring(0,c.indexOf("\n")).split(",").length?a.type="csv":c.substring(0,0<c.indexOf(": "))&&(a.type="yaml"):k(-1,"Please provide the input type."))),isDef(a.type)&&F.has(a.type)?F.get(a.type)(t,A):(isString(a.type)&&printErr("WARN: "+a.type+" input type not supported. Using json."),F.get("json")(t,A)),delete a.__origr)};isDef(a["-debug"])&&
printErr("DEBUG: "+colorify(a));if(isNumber(a.loop))for(;;)toBoolean(a.loopcls)&&(isDef(a.outfile)?(global.__oafp_streams[a.outfile].close(),global.__oafp_streams[a.outfile]=io.writeFileStream(a.outfile,toBoolean(a.outfileappend))):cls()),C(),sleep(1E3*a.loop,!0);else C();isDef(global.__oafp_streams)&&Object.keys(global.__oafp_streams).forEach(b=>global.__oafp_streams[b].s.close())}};oafp(params);
