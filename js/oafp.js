var params=processExpr(" ");
// (author: Nuno Aguiar, version: 20240316, license: Apache 2.0, url: https://github.com/openaf/oafp)
// ---
const _oafphelp={'docs/EXAMPLES.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/TEMPLATE.md':af.fromBytes2String(io.gunzip(af.fromBase64("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"))),
'docs/USAGE.md':af.fromBytes2String(io.gunzip(af.fromBase64("H4sIAAAAAAAA/9U8y3Ibx3Z7fkUXvACpgIBlO6kUcukbiqQs+ZKiIlKJXbIKbsw0MCPOTMPTM3zY8jZZZpHdraSyzCYfkFU+Jj+QfELOo7unZ/AQ4SCpihYiMNN9+vQ5p8+78Zm4XKji+LlYlDpSxuhyT8C/vSdP3ho5V0+ejMVEy9lCvJulmXov3ulFlerCvJ/s7V3LG2WELERaLOpqIGpTyyx7EFLEspLCVGUdVXWphKmjREgjPhhdDGBCLKpSFmamy9yItBKVRijqpzq9lZkqqu78tID3ukpUKXCOrIQuxW2Ky6U/S8RnKK4TJXRdASI8OwKIUyUA60qVClZMSl3PE/HtxdnVa1klA3H1V+cIh/ffN6I4T4ufCDugxW0aqwBNVRqCKDOjEaxcLLIUB2jAf7i397V4OYN9T5BIE4RKn46MzlXn0c/pAv+Ox827FNbWVbBqopik4i7NMlxO3S9UVPF68DUYyZsyVZwWo0W6UENA5ZJZJGS5fiZwY8KsPAKa12oyFCeJim5o8Sw1lYHhmb5DgsOuM3oub2WayWkGlOYlYOeffSYuJDDIPhnv7X20CIiP4lSZqEzdt72Ph/af/8DfYMphgmIHg64SWLRKgCaxjuocpQHfJypb0Ptj5GcBTL9V4k4+4L7M8hRAmuTFiH01nA+tGJiBqFS+yGSlDggq0p+govTQFwC3kKVRYj+dhVxhEiOraqNinh3lsVjCCQAQIJQjngNP1L2K6goeikjnOb5itG7qKXAnGyDiN6o8wLFzVRGxCUqkiwr2Y2g9kus16w3sYggb8cJ9WMxpGssTQoFDIvye7Ymxp2o/VjNZZ9VYRFWpLI0AaDOewVQPiyUCxXiQSV6r8sFKm6wrfRiriiTQUrzUOe+hcJqHz90CziRKawlKCMWF9wX7dDjibPNTZilOp/cRw+3Dj+KsQME1TFpdRmkxF3pGXxGqHUe8L8U+nQkzph0AaVMQGiCxjG9lEbmtEMaMjFMqn8QoMre8AVAXSMUjeDAgJE6u/tqdIZwKUkYnxk6+UQ88CTiUFlZH5HIxwqPqFnDaAlCYpffwFRDCcZ5DBIUwR/AMsA9aVvVbnOPXXvRQqtoCNwFCGnFYTnhPOoPjtgwNqaz4LaxtcQShabQIzs60XjiKuM3RdHph0UfLhAybPtCTos6nSNeZMArQjE2zRQcyykwLIzwXBBG1hF3GCWyUKVmyJEQg9qDLwBhJMFk0IXqILKqHt/YknCSymFtZsicCLBjyoyF6pXUGRuUWtA5KQ1rMNAFxD1ZqsogAbwP3I9qe51bOnN4H4/SAbGNZz0CNk7SXsSrBnKPcTgZgjuAoTogwEzgBE7Jiz9FO0QBhHopK3gNKaBWSqlqY8Wj0IVcGXw91OR9VcDjKVGbDpMoznP29rslKklDSBgyyrCbeTdLiqPf73uQvrCjQqwl8tk8DlwBfNF+PkIPgboClIHPzH//6d//5b38vxEuvi8ze3jmdg1mo7OgN0AAUm3UGWvpI7Dvr6bWtugeJJ7Lq0tvWtAJyu8NwMPSblBkwzQgNnChRzYI0wRK8V4Q4ISwmlitkFxuMSYxa1rExjiusIzpOTvF9e3X5yivsFRr2QeZeSX5/fHG+aew9D2V1/N3msVZ1EVxUVhuGFjEjjENfnYYIk1bOms1cnW/eTGIWqpzZjYPisA+Qy0+YZ/sl+o2gdOnrUfN+AkqsHD394kuGNJVG/dlXDMl+roDfIWLxVPgdfnv67ET8VCvWiOzR4jQayHafB17I8ibWd0UIKEpEQ1Zr5fBoFyoLh+VxxWowBMOPglFISgOnMJcw8BtQFiB6LAT2qR1blaky7EAUqgQXRxiJZouPBLpxqXUAAKFcwfDINBhe8IPRa1AKCsS3RpnP4ainHXQyUJ3G7n1O2ICfDjI/Imp6LxM1NpwxHI3Hmf7S9Cz3pMtkCcouA5VXQ6ghch0Dffjs7gPzjOjDaFXc9vE44mer4PoHoTMAoC4BOAzJwdCgX2AAJdh/TtYLMDq+uhb7x1PAU0aVuGK9dh04OKmF8/LVSyQASFCFtAx2fZ8Zj/Z351f3LeKsEEM5jYYw555XKOWdnf1aGtMyHDHMAQ+QpCzQgKiVvdvgNd9//fMf/9E61zILhoNyAefMeLfcmrXGmJBbE7slWUVGWU2BQPHgvGNvRYctJ/4a9dVabfVxnc6SZSkfKo3G66N4BlZLycI6PqDPWw4HaFfQolVAFprcWL99o1QAEPyYQeurwkdM66XHK1dH+jYjycLQ6s41aK0l7nTRJ+1eqhz0fcxeLLkItL3OsrjkFR0K+IAWtbsSr8JiUMhcOUcUgS1Y/h7YcPkAENdSGck0uXFLFAlIEOVZtZ7mMoIYqcYYKKA3+7vwhUNxK3rMBTyLszpjFwRdIruKLlF02co+lsMyWyTyEPw3BdoG5E5lsVubwH+owYyze0dH13p6NNAMrKpBCVb2GQ7Cr3xkphYJ+44CDtjpOhlk4WryDI7aOAcBEzYalEumbkE1LWljz2QMjVoq2YaS6Eej5oUtpjElKkCEYKkCpwWOnfSY00jaC7gVGogADrO6R+emvTrGeAECoS/JSgCX7zfj+/i9RCWvbpnxIb6kEv5X8QWjtEFI5I0q2qEKiyUuKCnFpO7ZmIX2rRFUcjccW9jKkMd2X4VEwmgA3sAa+aLqh5GAXdagB1hK4eaiTk6cYSrVXJax8+4CVWoXZLAtpqy2cHZgqPC7IFH2cEtsBikyQTXBI5yS99YRqb9sHoF2leYTvL3+RcKzKrA6ANVNA9GrmtajDq2bd79J6yU64zAXIaNQen1rI5tC3VnsCBOFpO7slDcDjJYUk4x4uCbcrJXkeS39SloQj71T7lbt14tPKzoeKmBslkakl8hWeEI24Io6yx4Njwcjo+vCCa3VmwyfcHWmht0jCGqjBIhnQr78DcLmMx0eaF2AC0JjiQHg9kSd3IFVvQ1ku/w62HkHuB3+GPC6rNiOriYPzgNHq84qnIGr0FCnvHE6JQKCgPFvKWC8DJNdQczYJCTsK6cKfdA9YT3TCuZa0DZEcytcI8quOXcSPx9m6Q2npRSQyqVMwohiVQS4djDHEBY8ft4If5/4gycsSCYZPt8O0WVMw/BEdDHL6RBXCeYazUJGjrWLdYEsUdqN3A8qAZTHVOBl4Eybd/PfN4MJg+GlaJjjL/saX+YoT00CuRU5byCQWU/rBiEF/jdb0420tpA2gCJ6pj9Tcg7DmRQjnE0wXYC/FOGHYfqaOD1aF6h35SgM6pcGh6mDpdzBBszxXPs56GiCEc1YJQeQMfPU7O/FdXuDLqAX/rRSREGx/cqA/pMR/adCenhUVj6+BTV9yE+IkfzRutOg4fVcUU2LhKSPnrU13fMyjT06JJjo+jin3ERpykMeAcrlGDYkGTZxoZ0rOGE/wTTmhmYAUbdKIbhUzNpcjAiichq0OjDfJ2PHdS6sRJh6sSDlf9CK2ZugvV3toDNny0E05gXY10xNJYYe7rlbyof37g3V9q7tl2EytQTL9Nwt6v2PBFzYcz0HVWGSduKAohSXDpUiqXNZHJZKxsQfhBUmOrwY41ijKN8D5gsrIUHCgwp2tiYbej3eV3XZCIxbXM7IUoYdQAol0JJjLQNgWtVlTTSAZ11s3TebbPWV0titZNPJfUexfieXPAdZradDIMiID9QIpU3ODjUo8BszmmZ6OsqlAXRGWIIudTQC/WxG12cXr8+Pr8+GeRzmRv7l39kWtLzkxsp3iit3CYQcmJPGzUzGu8h4ICQIIqK1XkunTiPtgZsx3phXN46qukznKXIBgQ6FN7W2thN4XZwSxDl9h8AR1zzscrTIg81a49bJ2W3KU9N0zlYco1ZKvvMiw3bqCchbxL+FwGxmdkNihvVBpxuiSXpLAQLbNzAeuuRMwbROs3gpwdEA9tXCZdBcEMI0Zmr4jKAfwpV0791P1QxzkC6f5sq++1SclliIMQHhW9hp9McZi4MlwoP22pbqoP12Q3IAZBKlWpHtdRDC8UuOIg348qUvI7v4eZaWgCuN85pZgX+H6qLO5JKXP5PwnmZSJgGX9EN9Kg4B1JLqOHY5wyF1rfwi4KB0sYZHdU4VPoqqCXegWYmnka2iAS8LhGSKAaurFFGxvnfc85BLfQcAX3F2iiHjo98C9ukyu88pTt6S4ZSY3w3LCdTaQ+bKpi7Sc8JPvgcdk07+34Pklp2NQG3YizQqc5ycgDVUJfc1MO8W2qS0FYp80du32T8gtOkuZtCIhULwRs1BkMqwUu8NnUvuWIcdjNdUVXdYEealDVM7AM+ZjZYE9sUPP5g/QfdLdNh6+mxbnsbTidhH+06VqIOdMDct4umHeBot5S/RK3775px85Aj518lKeW8ZIWBxbSUEO5Xf28ELacymwfj+DrSgn1ClucJYZ8McP8ROydJpOPytUd7TL8FClkK/Bq/CJw9jtHP6g54OUz2KpyPwn095nAOIynutJWeqIGds85a0xcIpWhVxehG4ZCQIXzMuupRRpsYCGTC2X8A4FOO/fJdoU70fv0MPFv44gr93M0Hqq3mpYEk72z4A5xB8qdbs0fLsF1/YWckXY9vJJ7riefJiW/GMkt3om7SIuJMmSJ2ipzGiQDJCuzyvbQRtvVBOzeByVCpjBEd1mQkHEJvWQvYdN9WBTM7bSiaddXKfzkXDZi/2qLEv6xgeMpvJuz2zOemAQkH+mnYwJlSOer8gquN+fmv6A9cp9wv1AfaRV8N42v/1194KmKZowUSCOJj7BJMyhJUaCNj7WPTRuQZ5wOBkiDIxfvrFl1+NogStdf+g12U5xOK06ZF1iD7Jep8Ro2kQ2E9aQiP2STiaBgxscDpAHo00t9hMaE5rOTuJn9GEIfCNu6nAUtI0qjaZBfi3FIM0WE1bRQOB7ReZLW7AiiRAlHrkFHbT02gLCrvRqT5w9QLsukSiRGujvB05PXt+/Pb8eiDOvjs5Ox9AYPv88s3Fy+8mb1+dXx6fLj2YAIcG4uJ7OPYD8eb5yVdP//zzgbh8c3xyfjYQry+vrr95cwYveVzw/frsu2s6Gtenz+lIIOdesC1dqdRcJIhNGLCXNKJW3to6Yk2K1NrjNkhqJLClhmMf1ST2XVd2OrwsHbyfahDkCx2rRxDy+BwIAv9NXl2+mrx6i98uXr56eXEMH/jRxdmblydEAvh+NvQYn6oszdOqbb6OneBgjkZG+Bb9ehHVBsgBmsLN8WDOTCQXagsYyk6w81/VWeandj9YisH0ThAOVMVSgMumP14NwakCLdRwbExO9qBFkHH/Y3+lEupAdEqIFQAoogAsO++Dhpdj5BIqnq+DzinD+wMlQtqAyAQOcllFnJ4J1EtHYz3jdNF2SsvZK841cTM2Np7Z7ztRAQxr/nO6utTMcm87KtnTTSBGwPGjeV3gNDwToO7ACcls6SeuI55JOV+bGbAJs1XdIRg6nF9Y4jTFxceHEFnOxPHlzKPhcLijmIKKlV2PDh6lpS7ITbqVZUoqBukk08J546y+9axV42z73JfHz19PLi5Pz84PXDnW7XHJqfBmIfQk/CUApF8fDVffhmeUk0pHOstkLg8Gok9F3D6Fv/DNuqF9PBe5S76ZO1B7ObwFm9ynZ5TSIRDstGBe7EY98Etegl9Q7pPL19jiKS3Rm3YS21mADR8EFRFuD+7a+Ivza7GtMGALCfdd7oT5CA5cvDUOXiedvqW/1xIE7tRu2mDo4HQC9aZ7OKi4u/KkpaxPYTz9/HPwRuAUHz71MSqNcOUYTOLl6YqDqOdiK/2ECinT8x2dNj1fAN2qrhPsO1/guU8xFgCUiGBTvAe2yc85wWtUDd2f2XaH2Gm8kx0CINc92dIo/JCSU0FDC56UTp68HbTj/pu+QvB+zFIzgdfjvATKoc3g42pBairWNRbvyATGDmSho1JxpWGNdeDXNlvkg0cPtYlcu4w4fbY9H+LpbtjwP80lbJFJ2DKPsHUWYcc5BFh/lXzGU8tiMBh3SQpasckMpgXslTKDLI8I30rpAVuGeLpRjgptgdMY5KG7b9TcJKOUdEzXdwJhzrDq9MAJVyMM3UFKOxnVeLrhXLTPhDsSQUovnReYG48azk+xDaSroYNrIP5+BjWyxq5Bk/QyzXWtrEg1l3S02Zbvg3qHVzzuepXECsdtqu6cT9VRDRSnYu7NlcXwbBAqAO7/Sy5na5Wwq2zOjnM51MPUhkdC7YOy2AecvheoKfVw95hv1+VMNXuUDLwujFrdLdvpyWulhJB4NJFe2bS/pbjzY0AuKzhUfE2p2iZW23nCaFfpImpg+A2CBdN2JVvUXxFIA+NEKoOrAv7eE6Vker+r4fnX4ndYXR1Tx8o4U6DB468htBHvDnM4sJ+/xw/yfgze3vveULyFKZjYVSk1VfTBkeqDNx+r6Kn9+4X9+6X9i3+mD5UyfFfBpP2hoAuBCKXVzUSFWkSm78qA++QomMAO+KwjeGaHcPbTyE1pqhZ4FclTJFrTSRjcaXPiS5fdLHjueiSL4O+SWXkaix9//JEufkd5fNSL8DQeGmHlRS7SIUYth4Wu0tkD3QZLjYGvd0OsYPaE57tHkEsl9O2oh6QD2piJK+YMM1AJVR2r8RTO5hgbsNuvdTHn94D8GL/1qBf96E8Bz46YfoO9MVtLKXbU7EZIbfvOo1QgtoNoZDf2IbYqae7GOz9awCeCi675UJz5ajS/trKTyFvX1Y4TuGplR1Oruxex1roYxlaZAiGWPvjFZr8BThowzwZgcssB23m8fKHkgJt2UGfn8QHNZSHFOExlLnPLkYWVZnuA6dLAAd/CKERfTz/0eUjzOjzEadADDfiyDMHxXV0o35rzuyyVU+d/x+VzbUfwiuISd3PaXzahpiLwIMoHvjnQNTV41Jr06eVV38AxjVR2GDQT0S8SRCRUvkr9uLo9EiMs2YexEO5oKbdtG/yAXXyHILTinmlVcME6IIDNquxPdRaPSUmBYFEK+JmuKp2PRS9XcVrnvfbzE9Lcogenv3fgcSPCrOweSF3kZL1PGvko6m3oJ0AgdxKD/XZGQea6LkjGMJ4YcC5o0ErTdDjsYtJPY4OHqcJDwb6R3QWLWUf4gya87Q9B0Om3m8NggS03LF0n/op6EKFzdz/N6YTmFpBraORvSGigS74IeQF2+16cLTRAwlKQvRvehb6kMy5+Qx7jPt9RHgMAcWTUvs/DPu6h7UQIfFzEtpJzE4RUFswypY8DOsuYVAkmfjwIO5H9EHiy0ofgu/zsqqDoBbPbdKTu260JiR28u6EkQqJDFLX9+Wetsi/eP0iDW4AdL5/uijSdjrnvmE3CDAy1HfMtFba4trPFLX+XxqAMO33KCzzF/2eITenWZ5UCVggN7Q3XINC7q7wGYdSW9Kj75LBipbpao7qwJ/y9CDEt9Z0JesE6yhQX7WrSY69FUXmShDjcjthQAAia5LSneYAIK/drOaQktvQUsZVXIolLYbbi5H/4J+ftgqCCGwmedrL3mc0hhz874X4KAH9gZw/0ssB46VvwczEbP7Q3EdBZ3vvkdHsjICp1Bu7bfCM0XxGnWxgfhf3VDVpkoSJwvNu30ZoQOuxzpiUoZrT9kBY4zbHNmU3tHTzrPfKoG3p4UcNbxNaq8xXHPQLkf+mI8M/t3b0jbM79zOaFvG+AfcB4w1Pd2YtL32g9B0Auvjg89+3B00zPh3N6PSopr0OroYt51IMHQxtnD1OQgR6mWI96zu1Eb3YgFvX0FNbrNXREZFZg1VQEFkovODdHfWXkRfOnqJSzau8RcZCEQ6pNi4+MM8NuY/pDj+D+AN5OhNK///QAnvHIH3rg8et6gVlAP27FZvJ2V39TZq/LEoPOKANH3+DFAVDhOuVOWAgCq8Rvp+eIjhsqpJFA+NtRofQIos1qdPt0NFMq/v3x65eTP5x9f3R6dnGJH3rtDRYAdEKAJ+DRw/ZMb+kSoMV+mTrvPn//7v3wF/ROx1Rby+W84IhPTg0EMpWa+EeTZJDIn2UZ69qMUwwTUfWk2LIw8S8mbsODGIwQ/nDPmEgxAfeq1OAQTPBUwLrDHENNN2h4k2Z4gUGV5tc2s57YXgXMytrBnh32nkX37DirbUtclD82Tr2nZacVwv6oCx+rw1tLGe6KH3JX/Ar+d9bwP+Rmf4FlsPp3BUx3Ffg25Bm9tjpYMa6B+OmxdrneCh0TqOI/ikuKdul3vtwtLINuwQt8ssYbWOEEwOgj13/9Ubx2F3vptyFiVck0M52rvOiPAPl6jPNA9FAxHfWIVj3iv/CQg/si24C2W3ezA4C2DSnAFfxWkAMw280rNxhz9Dmu/YZab83S76T9N4eMxGTOTwAA"))),
'docs/FILTERS.md':af.fromBytes2String(io.gunzip(af.fromBase64("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")))};

const oafp=a=>{if(!isUnDef(a)&&!isDef(a.____ojob)){Object.keys(a).forEach(b=>{var c=b.toLowerCase();b!=c&&isUnDef(a[c])&&(a[c]=a[b],delete a[b])});var F=b=>{for(var c=Object.keys(w),d=0;d<c.length;d++){var f=c[d];isDef(a[f])&&(b=w[f](b))}return b},B=(b,c)=>{c.__ifrom&&(b=$from(b).query(af.fromNLinq(c.__ifrom.trim())),delete c.__ifrom);if(c.__isql){var d=__;if(isString(a.sqlfilter))switch(a.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(b)&&
0<b.length&&(b=$sql(b,c.__isql.trim(),d));delete c.__isql}c.__path&&(b=$path(b,c.__path.trim()),delete c.__path);if(isString(b))return F(b);b=F(b);c.__from&&(b=$from(b).query(af.fromNLinq(c.__from.trim())),delete c.__from);if(c.__sql){d=__;if(isString(a.sqlfilter))switch(a.sqlfilter.toLowerCase()){case "simple":d="nlinq";break;case "advanced":d="h2";break;default:d=__}isArray(b)&&0<b.length&&(b=$sql(b,c.__sql.trim(),d));delete c.__sql}c.__opath&&(b=$path(b,c.__opath.trim()),delete c.__opath);return b},
l=(b,c,d)=>{c=clone(c);toBoolean(a.color)&&(__conConsole=!0);b=isString(b)?b.trim().startsWith("{")&&b.trim().endsWith("}")?B(jsonParse(b,__,__,!0),c):B(b,c):d?B([b],c)[0]:B(b,c);isDef(a.outputkey)&&(b=$$({}).set(a.outputkey,b));isDef(a.outkey)&&(b=$$({}).set(a.outkey,b));K();A.has(c.__format)?A.get(c.__format)(b,c):$o(b,c)},u=(b,c)=>{var d=af.fromString2Bytes(""),f=af.newOutputStream();$sh(b).cb((e,h,g)=>{ioStreamCopy(f,e);e=f.toByteArray();0<e.length&&(d=e)}).get();return c?af.fromBytes2String(d):
d},t=b=>{if(!isString(b)||""==b||isNull(b))return"";b=b.trim();return b.startsWith("{")?jsonParse(b,__,__,!0):af.fromSLON(b)},G=(b,c,d)=>{d=_$(d).isString().default("_oafp_fn_");c=splitBySepWithEnc(c," ",[['"','"'],["'","'"]]);let f=[];if(1<c.length){for(let e=0;e<c.length;e++)if(0==e)f.push(c[e]);else{let h=splitBySepWithEnc(c[e],":",[['"','"'],["'","'"]]).map((g,n)=>{if(0==n){if(g.startsWith("-"))return g;global[d+e]=()=>$path(b,g);return d+e}return g}).join(":");f.push(h)}return f.join(" ")}return""},
p=b=>{"grid"==a.out||toBoolean(a.loopcls)||toBoolean(a.chartcls)||printErrnl(_$(b).default("(processing data...)"))},K=b=>{"grid"==a.out||toBoolean(a.loopcls)||toBoolean(a.chartcls)||printErrnl("\r"+" ".repeat(_$(b).default("(processing data...)").length)+"\r")},k=(b,c)=>{isUnDef(c)&&(c="exit: "+b);if(isUnDef(ow.oJob)&&!toBoolean(a.noexit))0!=b&&printErr(c),exit(b);else throw c;},C=()=>{__initializeCon();a.help=_$(a.help,"help").isString().default("");switch(a.help.toLowerCase()){case "filters":var b=
"docs/FILTERS.md";break;case "template":b="docs/TEMPLATE.md";break;case "examples":b="docs/EXAMPLES.md";break;case "readme":case "usage":b="docs/USAGE.md";break;default:b=a.help.toLowerCase(),b=isDef(x[b])?"docs/"+b+".md":"docs/USAGE.md"}var c=(getOPackPath("oafproc")||".")+"/"+b;let d="";if("docs/USAGE.md"==b&&0<Object.keys(x).length){d="\n---\n\n## \ud83d\udcda Libs help documents\n\n| Lib | Help |\n| --- | --- |\n";for(let f in x)d+="| "+f+" | help="+f+" |\n"}isDef(c)&&io.fileExists(c)?(__conConsole=
__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(c)+d)):print(ow.format.withMD(io.readFileString(c)+d))):isDef(global._oafphelp)&&isDef(global._oafphelp[b])?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(global._oafphelp[b]+d)):print(ow.format.withMD(global._oafphelp[b]+d))):isString(x[a.help])?(__conConsole=__ansiColorFlag=
!0,isDef(ow.format.string.pauseString)&&toBoolean(a.pause)?ow.format.string.pauseString(ow.format.withMD(x[a.help])):print(ow.format.withMD(x[a.help]))):print("Check https://github.com/OpenAF/oafp/blob/master/src/"+b);k(0)},L=()=>{var b=(getOPackPath("oafproc")||".")+"/.package.yaml";b={oafp:{version:io.fileExists(b)?io.readFileYAML(b).version:"(not available/embedded)",inputs:Array.from(y.keys()).filter(c=>"?"!=c).sort(),transforms:Object.keys(w).filter(c=>"transforms"!=c).sort(),outputs:Array.from(A.keys()).filter(c=>
"?"!=c).sort(),flags:__flags.OAFP},openaf:{version:getVersion(),distribution:getDistribution(),home:getOpenAFPath(),opacks:$from($m4a(getOPackLocalDB())).notEquals("name","OpenAF").sort("name").select({name:"",version:""})},java:{version:ow.format.getJavaVersion(),home:ow.format.getJavaHome(),vendor:String(java.lang.System.getProperty("java.vendor")),params:af.fromJavaArray(java.lang.management.ManagementFactory.getRuntimeMXBean().getInputArguments())},os:{name:String(java.lang.System.getProperty("os.name")),
version:String(java.lang.System.getProperty("os.version")),arch:ow.format.getOSArch(),cpuCores:getNumberOfCores(!0),mem:{max:Number(java.lang.Runtime.getRuntime().maxMemory()),total:Number(java.lang.Runtime.getRuntime().totalMemory())},store:{tmpDirPath:String(java.lang.System.getProperty("java.io.tmpdir")),freeTmpDirBytes:Number(java.nio.file.Files.getFileStore(java.nio.file.Paths.get(java.lang.System.getProperty("java.io.tmpdir"))).getUsableSpace())}}};return stringify(b,__,"")};ow.loadFormat();
a.format=a.output||a.format||a.out;a.type=a.input||a.type||a.in;a.out=a.format;a.output=a.format;a.in=a.type;a.input=a.type;if(isUnDef(a.file)&&isUnDef(a.cmd)){let b=__;for(let c in a)if(""===a[c]){b=c;break}a.file=b}var D=new Map([[".json","json"],[".ndjson","ndjson"],[".yaml","yaml"],[".xml","xml"],[".csv","csv"],[".ini","ini"],[".md","md"],[".xls","xls"],[".xlsx","xls"],[".sql","sql"]]),H=new Set(["csv","ndjson"]),I={lines:(b,c)=>{isBoolean(a.linesjoin)||(a.linesjoin=toBoolean(_$(a.linesjoin,"linesjoin").isString().default(__)));
if(!a.linesjoin&&isString(b))0!=b.trim().length&&(0<b.trim().length&&(b=b.trim().split(/\r?\n/)),l(b,c,!0)),E=!0;else return!0},ndjson:(b,c)=>{isBoolean(a.ndjsonjoin)||(a.ndjsonjoin=toBoolean(_$(a.ndjsonjoin,"ndjsonjoin").isString().default(__)));if(a.ndjsonjoin)return!0;isUnDef(global.__ndjsonbuf)&&0!=b.length&&b.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=b.length&&!b.trim().endsWith("}")){global.__ndjsonbuf+=b.trim();return}0<global.__ndjsonbuf.length&&(b=
global.__ndjsonbuf+b,global.__ndjsonbuf=__)}0==b.length||0<b.length&&"{"!=b.trim().substring(0,1)?(l(jsonParse(global.__ndjsonbuf,__,__,!0),c,!0),E=!0,global.__ndjsonbuf=__):(l(jsonParse(b,__,__,!0),c,!0),E=!0)}},w={transforms:b=>{if(toBoolean(a.transforms))return Object.keys(w).filter(c=>"transforms"!=c).sort()},cmlt:b=>{if(toBoolean(a.cmlt)){b=isArray(b)?b:[b];a.cmltch=_$(a.cmltch,"cmltch").default("(type: simple)");var c=t(a.cmltch);if(isMap(c))return isUnDef(c.type)&&k(-1,"cmltch.type is not defined."),
isDef(c.lib)&&loadLib(c.lib),0>$ch().list().indexOf("oafp::cmltdata")&&("remote"==c.type?$ch("oafp::cmltdata").createRemote(c.url):$ch("oafp::cmltdata").create(c.type,c.options),c=Number(_$(a.cmltsize,"cmltsize").isNumber().default(100))-1,0<c&&$ch("oafp::cmltdata").subscribe(ow.ch.utils.getHousekeepSubscriber("oafp::cmltdata",c))),b.forEach(d=>$ch("oafp::cmltdata").set({t:nowNano()},d)),$ch("oafp::cmltdata").getAll();k(-1,"Invalid cmltch parameter")}},jsonschemagen:b=>{if(toBoolean(a.jsonschemagen))return ow.loadObj(),
ow.obj.schemaGenerator(b)},jsonschemacmd:b=>w.jsonschema(b),jsonschema:b=>{isMap(b)||k(-1,"jsonschema is only supported with a map.");isUnDef(a.jsonschema)&&isUnDef(a.jsonschemacmd)&&k(-1,"You need to provide a jsonschema=someFile.json or jsonschemacmd=someCommand");ow.loadObj();var c;if(isDef(a.jsonschemacmd)){var d=$sh(a.jsonschemacmd).getJson(0);0==d.exitcode?c=d.stdout:k(-1,"Error executing the command '"+a.jsonschemacmd+"': "+d.stderr)}else c=io.readFileJSON(a.jsonschema);isMap(c)||k(-1,"The schema provided is not a valid JSON schema.");
ow.obj.schemaInit({allErrors:!0});c=ow.obj.schemaCompile(c);return{valid:c(b),errors:c.errors}},sortmapkeys:b=>{if(toBoolean(a.sortmapkeys)&&isObject(b)){let c=(d,f)=>{let e=Object.keys(d).sort(),h={};for(let g=0;g<e.length;g++){let n=e[g],m=d[n];Array.isArray(m)?h[n]=m.map(q=>"object"===typeof q&&null!==q&&void 0!==q?sortMapKeys(q,f):q):h[n]=f&&"object"===typeof m&&null!==m&&void 0!==m?c(m,f):m}return h};return c(b,!0)}return b},searchkeys:b=>isObject(b)?searchKeys(b,a.searchkeys):b,searchvalues:b=>
isObject(b)?searchValues(b,a.searchvalues):b,maptoarray:b=>toBoolean(a.maptoarray)&&isMap(b)?$m4a(b,a.maptoarraykey):b,arraytomap:b=>toBoolean(a.arraytomap)&&isArray(b)?$a4m(b,a.arraytomapkey,toBoolean(a.arraytomapkeepkey)):b,flatmap:b=>toBoolean(a.flatmap)&&isObject(b)?ow.loadObj().flatMap(b,a.flatmapkey):b,merge:b=>{if(toBoolean(a.merge)&&isArray(b)&&1<b.length){for(var c,d=0;d<b.length;d++)c=0==d?b[d]:merge(c,b[d]);return c}return b},correcttypes:b=>{toBoolean(a.correcttypes)&&isObject(b)&&traverse(b,
(c,d,f,e)=>{switch(descType(d)){case "number":isString(d)&&(e[c]=Number(d));break;case "string":"true"==d.trim().toLowerCase()||"false"==d.trim().toLowerCase()?e[c]=toBoolean(d):d.trim().match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/)?e[c]=new Date(d):d.trim().match(/^\d{4}-\d{2}-\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}:\d{2}$/)?e[c]=new Date(d):d.trim().match(/^\d{2}:\d{2}$/)&&(e[c]=new Date(d))}});return b},removenulls:b=>{toBoolean(a.removenulls)&&traverse(b,(c,d,f,e)=>{(isNull(d)||
isUnDef(d))&&delete e[c]});return b},removedups:b=>{if(toBoolean(a.removedups)){if(isArray(b)){var c=new Set,d=[];b.forEach(f=>{var e=f;isObject(f)&&(e=sortMapKeys(e));e=stringify(e,__,!0);c.has(e)||(c.add(e),d.push(f))});return d}k(-1,"removedups is only supported for arrays")}return b},llmprompt:b=>{if(isString(a.llmprompt)){a.llmenv=_$(a.llmenv,"llmenv").isString().default("OAFP_MODEL");a.llmoptions=_$(a.llmoptions,"llmoptions").isString().default(__);var c=$llm(isDef(a.llmoptions)?a.llmoptions:
$sec("system","envs").get(a.llmenv));isDef(a.llmconversation)&&io.fileExists(a.llmconversation)&&c.getGPT().setConversation(io.readFileJSON(a.llmconversation));var d="json",f=!0;isString(a.input)&&("md"==a.input&&(d="markdown",f=!1),"mdtable"==a.input&&(d="markdown table",f=!1),"hsperf"==a.input&&(d="java hsperf file"),"raw"==a.input&&(d="raw",f=!1));c=c.withContext(f?stringify(b,__,!0):b,isDef(a.llmcontext)?a.llmcontext:`${d} input data`);if(isString(a.output)&&("md"==a.output||"mdtable"==a.output||
"raw"==a.output))return b=c.prompt(a.llmprompt),isDef(a.llmconversation)&&io.writeFileJSON(a.llmconversation,c.getGPT().getConversation(),""),b;b=c.promptJSON(a.llmprompt);isDef(a.llmconversation)&&io.writeFileJSON(a.llmconversation,c.getGPT().getConversation(),"");return b}return b},splitlines:b=>toBoolean(a.splitlines)&&isString(b)?b.split(/\r?\n/):b},A=new Map([["?",(b,c)=>{b=Array.from(A.keys()).filter(d=>"?"!=d).sort();$o(b,c)}],["pm",(b,c)=>{$o(b,c)}],["key",(b,c)=>{$o(b,c)}],["html",(b,c)=>
{let d;c=!1;a.htmlopen=toBoolean(_$(a.htmlopen,"htmlopen").isString().default("true"));a.htmlwait=_$(a.htmlwait,"htmlwait").isNumber().default(2500);a.htmlopen&&(d=io.createTempFile("oafp_",".html"));ow.loadTemplate();isString(b)?(b=ow.template.html.genStaticVersion(ow.template.parseMD2HTML(b,!toBoolean(a.htmlpart),!toBoolean(a.htmlcompact))),b=b.replace("<html>",'<html><meta charset="utf-8">')):(b=ow.template.html.parseMap(b,!0),b='<html><meta charset="utf-8"><style>'+b.css+"</style><body>"+b.out+
"</body></html>");a.htmlopen&&(io.writeFileString(d,b),c=openInBrowser("file:///"+d.replace(/\\/g,"/")));c?sleep(a.htmlwait,!0):print(b)}],["ctable",(b,c)=>{$o(b,c)}],["stable",(b,c)=>{$o(b,c)}],["table",(b,c)=>{$o(b,c)}],["log",(b,c)=>{isString(b)&&toBoolean(a.logprintall)?print(b.replace(/\n$/,"")):(c=b,isMap(b)&&(c=[b]),isArray(c)&&c.forEach(d=>{if(isMap(d)){let f=isDef(d["@timestamp"])?d["@timestamp"]:__,e=isDef(d.level)?d.level:__;d=isDef(d.message)?d.message:__;let h;isDef(e)&&(0<=e.toLowerCase().indexOf("err")&&
(h="RED,BOLD"),0<=e.toLowerCase().indexOf("warn")&&(h="YELLOW"));isDef(f)&&24<f.length&&(f=f.substring(0,23)+"Z");(isDef(d)||isDef(f))&&print(ansiColor("BOLD",f)+(isDef(e)?" | "+ansiColor(h,e):"")+" | "+ansiColor(h,d))}}))}],["raw",(b,c)=>{isString(b)?print(b):sprint(b)}],["ini",(b,c)=>{isString(b)||(ow.loadJava(),c=new ow.java.ini,print(c.put(b).save()))}],["mdyaml",(b,c)=>{isArray(b)?b.forEach((d,f)=>{$o(d,merge(c,{__format:"yaml"}));f<b.length-1&&print("---\n")}):$o(b,merge(c,{__format:"yaml"}))}],
["mdtable",(b,c)=>{isArray(b)&&(ow.loadTemplate(),print(ow.template.md.table(b)))}],["template",(b,c)=>{isString(b)||(ow.loadTemplate(),ow.template.addConditionalHelpers(),ow.template.addOpenAFHelpers(),ow.template.addFormatHelpers(),isUnDef(a.template)&&k(-1,"For output=handlebars you need to provide a template=someFile.hbs"),tprint(io.readFileString(a.template),b))}],["openmetrics",(b,c)=>{isString(b)||(ow.loadMetrics(),b=ow.metrics.fromObj2OpenMetrics(b,a.metricsprefix,a.metricstimestamp),b=b.split("\n").map(d=>
{0<=d.indexOf('{_id="')&&(d=d.replace(/{_id="\d+",/,"{"));0<=d.indexOf(',_id="')&&(d=d.replace(/,_id="\d+"}/,"}"));0<=d.indexOf('_id="')&&(d=d.replace(/,_id="\d+",/,","));return d}).join("\n"),$o(b,c))}],["pjson",(b,c)=>{c.__format="prettyjson";$o(b,c)}],["base64",(b,c)=>{b=isString(b)?b:stringify(b);toBoolean(a.base64gzip)?print(af.fromBytes2String(af.toBase64Bytes(io.gzip(af.fromString2Bytes(b))))):print(af.fromBytes2String(af.toBase64Bytes(b)))}],["grid",(b,c)=>{isUnDef(a.grid)&&k(-1,"For output=grid you need to provide a grid=...");
c=t(_$(a.grid,"grid").isString().$_());isArray(c)&&0<c.length&&isArray(c[0])?(c.forEach((d,f)=>{d.forEach((e,h)=>{if("chart"==e.type||"bar"==e.type)h="_chrt"+(f+1)+"."+(h+1),e.obj=("chart"==e.type?h+" ":"")+G(b,e.obj,h),isUnDef(e.title)&&(e.title="Chart "+h);isDef(e.path)&&(e.obj=$path(b,e.path),isUnDef(e.title)&&(e.title=e.path))})}),c=ow.format.string.grid(c,__,__," ",!0),print(c)):k(-1,"Invalid grid parameter: '"+stringify(a.grid,__,"")+"'")}],["chart",(b,c)=>{isUnDef(a.chart)&&k(-1,'For output=chart you need to provide a chart="<units> [<path[:color][:legend]>...]"');
isUnDef(splitBySepWithEnc)&&k(-1,"Output=chart is not supported in this version of OpenAF");b=G(b,a.chart);0<b.length&&(toBoolean(a.chartcls)&&cls(),print(printChart("oafp "+b)))}],["ch",(b,c)=>{isUnDef(a.ch)&&k(-1,'For output=ch you need to provide a ch="(type: ...)"');isUnDef(a.chkey)&&k(-1,'For output=ch you need to provide a chkey="key1, key2"');b=isMap(b)?[b]:b;a.ch=t(a.ch);isMap(a.ch)?(isUnDef(a.ch.type)&&k(-1,"ch.type is not defined."),isDef(a.ch.lib)&&loadLib(a.ch.lib),"remote"==a.ch.type?
$ch("oafp::outdata").createRemote(a.ch.url):$ch("oafp::outdata").create(a.ch.type,a.ch.options),toBoolean(a.chunset)?$ch("oafp::outdata").unsetAll(a.chkey.split(",").map(d=>d.trim()),b):$ch("oafp::outdata").setAll(a.chkey.split(",").map(d=>d.trim()),b),$ch("oafp::outdata").destroy()):k(-1,"Invalid ch parameter")}],["db",(b,c)=>{(!isArray(b)||1>b.length)&&k(-1,"db is only supported for filled arrays/lists");a.dbtable=_$(a.dbtable,"outdbtable").isString().default("data");a.dbnocreate=toBoolean(_$(a.dbnocreate,
"outdbnocreate").isString().default("false"));a.dbicase=toBoolean(_$(a.dbicase,"outdbicase").isString().default("false"));a.dbbatchsize=_$(a.dbbatchsize,"dbbatchsize").isNumber().default(__);ow.loadObj();try{isString(a.dbjdbc)||k(-1,"dbjdbc URL is not defined.");isDef(a.dblib)&&loadLib("jdbc-"+a.dblib+".js");var d=new DB(a.dbjdbc,a.dbuser,a.dbpass,a.dbtimeout);if(!a.dbnocreate)try{var f=ow.obj.fromObj2DBTableCreate(a.dbtable,b,__,!a.dbicase);d.u(f);d.commit()}catch(m){d.rollback(),k(-1,"Error creating table: "+
m)}var e=Object.keys(ow.obj.flatMap(b[0]));var h=a.dbicase?e.join(",").toUpperCase():'"'+e.join('", "')+'"';let n="";var g=b.map(m=>{var q=ow.obj.flatMap(m);m=[];for(var v in e)m.push(q[e[v]]);v=e.map(z=>String(q[z]));m="INSERT INTO "+(a.dbicase?a.dbtable:'"'+a.dbtable+'"')+" ("+h+") VALUES ("+v.map(z=>"?").join(", ")+")";m.length>n.length&&(n=String(m));return v});d.usArray(n,g,a.dbbatchsize)}catch(n){isDef(d)&&d.rollback(),printErr(n),k(-1,"Error connecting to the database: "+n)}finally{isDef(d)&&
(d.commit(),d.close())}}],["sql",(b,c)=>{(!isArray(b)||1>b.length)&&k(-1,"sql is only supported for filled arrays/lists");a.sqltable=_$(a.sqltable,"sqltable").isString().default("data");a.sqlicase=toBoolean(_$(a.sqlicase,"sqlicase").isString().default("false"));a.sqlnocreate=toBoolean(_$(a.sqlnocreate,"sqlnocreate").isString().default("false"));ow.loadObj();a.sqlnocreate||print(ow.obj.fromObj2DBTableCreate(a.sqltable,b,__,!a.sqlicase)+";\n");var d=Object.keys(ow.obj.flatMap(b[0]));var f=a.sqlicase?
d.join(",").toUpperCase():'"'+d.join('", "')+'"';print(b.map(e=>{var h=ow.obj.flatMap(e);e=[];for(var g in d)e.push(h[d[g]]);g=d.map(n=>{n=h[n];isString(n)&&(n="'"+n.replace(/'/g,"''")+"'");isNull(n)&&(n="null");return n});return"INSERT INTO "+(a.sqlicase?a.sqltable:'"'+a.sqltable+'"')+" ("+f+") VALUES ("+g.join(",")+");"}).join("\n"))}],["xls",(b,c)=>{if(!isString(b)){try{includeOPack("plugin-XLS")}catch(h){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}plugin("XLS");
if(isMap(b)){ow.loadObj();var d=ow.obj.flatMap(b);var f=Object.keys(d).map(h=>({key:h,value:d[h]}))}isArray(b)&&(f=b);traverse(f,(h,g,n,m)=>{isString(g)&&g.startsWith("=")&&(m[h]="'"+g)});b=!1;c=a.xlsfile;isUnDef(a.xlsfile)&&(b=!0,a.xlsfile=io.createTempFile("oafp",".xlsx"));c=new XLS(isDef(c)&&io.fileExists(c)?c:__);var e=c.getSheet(_$(a.xlssheet,"xlssheet").isString().default("data"));a.xlsformat=_$(a.xlsformat,"xlsformat").isString().default('(bold: true, borderBottom: "medium", borderBottomColor: "red")');
a.xlsformat=t(a.xlsformat);ow.format.xls.setTable(c,e,"A",1,f,__,a.xlsformat);c.writeFile(a.xlsfile);c.close();a.xlsopenwait=_$(a.xlsopenwait,"xlsopenwait").isNumber().default(5E3);a.xlsopen=toBoolean(_$(a.xlsopen,"xlsopen").isString().default("true"));a.xlsopen&&(ow.format.isWindows()?($sh("start "+a.xlsfile).exec(),b&&sleep(a.xlsopenwait,!0)):ow.format.getOS().startsWith("Mac")&&($sh("open "+a.xlsfile).exec(),b&&sleep(a.xlsopenwait,!0)))}}]]),y=new Map([["?",(b,c)=>{b=Array.from(y.keys()).filter(d=>
"?"!=d).sort();l(b,c)}],["pm",(b,c)=>{p();isDef(__pm._map)&&(b=__pm._map);isDef(__pm._list)&&(b=__pm._list);l(b,c)}],["jsonschema",(b,c)=>{p();b=jsonParse(b,__,__,!0);isMap(b)||k(-1,"jsonschema is only supported with a map.");ow.loadObj();b=ow.obj.schemaSampleGenerator(b);l(b,c)}],["yaml",(b,c)=>{p();b=af.fromYAML(b);l(b,c)}],["xml",(b,c)=>{p();a.xmlignored=_$(a.xmlignored,"xmlignored").isString().default(__);a.xmlprefix=_$(a.xmlprefix,"xmlprefix").isString().default(__);a.xmlfiltertag=toBoolean(_$(a.xmlfiltertag,
"xmlfiltertag").isString().default(__));0<=b.indexOf("<?xml")&&(b=b.substring(b.indexOf("?>")+2).trim());0<=b.indexOf("<!DOCTYPE")&&(b=b.substring(b.indexOf(">")+1).trim());b=af.fromXML2Obj(b,a.xmlignored,a.xmlprefix,!a.xmlfiltertag);l(b,c)}],["lines",(b,c)=>{isBoolean(a.linesjoin)||(a.linesjoin=toBoolean(_$(a.linesjoin,"linesjoin").isString().default(__)));p();let d=__,f=[],e=g=>{g=g.split("\n").map(m=>{let q="",v=0;for(let z=0;z<m.length;z++)if("\t"===m[z]){let M=8-v%8;q+=" ".repeat(M);v+=M}else q+=
m[z],v++;return q}).join("\n");if(isUnDef(d))return d=[],lastPos=0,isUnDef(a.linesvisualsepre)&&(a.linesvisualsepre=" \\s+"),g.split(new RegExp(a.linesvisualsepre)).forEach(m=>{d.push(m);m=g.substring(lastPos).match(new RegExp(ow.format.escapeRE(m)+"("+a.linesvisualsepre+"|$)"));!isNull(m)&&isDef(m.index)?(f.push(lastPos+m.index),lastPos=m.index):k(-1,"Problem with linesvisual to find header positioning.")}),__;var n={};f.forEach((m,q)=>{n[d[q]]=g.substring(m,q+1<f.length?f[q+1]-1:__).trim()});return n};
if(a.linesjoin)if(isDef(a.file)&&isUnDef(a.cmd)&&(b=io.readFileString(a.file)),isDef(a.cmd)&&(b=u(a.cmd,!0)),b=b.split(/\r?\n/),toBoolean(a.linesvisual)){var h=[];b.forEach(g=>{0!=g.length&&(g=e(g),isDef(g)&&h.push(g))});l(h,c)}else l(b,c);else b=isDef(a.file)&&isUnDef(a.cmd)?io.readFileStream(a.file):isDef(a.cmd)?af.fromBytes2InputStream(u(a.cmd)):af.fromString2InputStream(b),ioStreamReadLines(b,g=>{toBoolean(a.linesvisual)?(g=e(g),isDef(g)&&l(g,clone(c),!0)):l(g,clone(c),!0)}),b.close()}],["ndjson",
(b,c)=>{isBoolean(a.ndjsonjoin)||(a.ndjsonjoin=toBoolean(_$(a.ndjsonjoin,"ndjsonjoin").isString().default(__)));p();global.__ndjsonbuf=__;var d=(e,h)=>{isUnDef(global.__ndjsonbuf)&&0!=e.length&&e.trim().startsWith("{")&&(global.__ndjsonbuf="");if(isDef(global.__ndjsonbuf)){if(0!=e.length&&!e.trim().endsWith("}")){global.__ndjsonbuf+=e.trim();return}0<global.__ndjsonbuf.length&&(e=global.__ndjsonbuf+e,global.__ndjsonbuf=__)}0==e.length||0<e.length&&"{"!=e.trim().substring(0,1)?(h(e),global.__ndjsonbuf=
__):h(e)},f=e=>{var h=[];e.split("\n").filter(g=>0<g.length).forEach(g=>d(g,n=>h.push(jsonParse(n,__,__,toBoolean(a.ndjsonfilter)))));return h};a.ndjsonjoin?(isDef(a.file)&&isUnDef(a.cmd)&&(b=io.readFileString(a.file)),isDef(a.cmd)&&(b=u(a.cmd,!0)),l(f(b),c)):(b=isDef(a.file)&&isUnDef(a.cmd)?io.readFileStream(a.file):isDef(a.cmd)?af.fromBytes2InputStream(u(a.cmd)):af.fromString2InputStream(b),ioStreamReadLines(b,e=>{d(e,h=>l(jsonParse(h,__,__,!0),clone(c),!0))}),b.close())}],["md",(b,c)=>{p();__conConsole=
__ansiColorFlag=!0;isUnDef(a.format)&&isUnDef(c.__format)&&(a.format="md",c.__format="md");l(b,c)}],["mdtable",(b,c)=>{p();ow.loadTemplate();b=ow.template.md.fromTable(b);l(b,c)}],["raw",(b,c)=>{p();l(b,c)}],["ini",(b,c)=>{p();ow.loadJava();var d=new ow.java.ini;b=isDef(a.file)?d.loadFile(a.file).get():d.load(b).get();l(b,c)}],["sql",(b,c)=>{isString(b)?l(af.fromSQL(b).ast,c):l(b,c)}],["openmetrics",(b,c)=>{isString(b)?(ow.loadMetrics(),l(ow.metrics.fromOpenMetrics2Array(b),c)):l(b,c)}],["ch",(b,
c)=>{p();isUnDef(a.inch)&&k(-1,"inch is not defined.");a.inch=t(a.inch);if(isMap(a.inch)){isUnDef(a.inch.type)&&k(-1,"inch.type is not defined.");isDef(a.inch.lib)&&loadLib(a.inch.lib);"remote"==a.inch.type?$ch("oafp::indata").createRemote(a.inch.url):$ch("oafp::indata").create(a.inch.type,a.inch.options);var d=t(b);toBoolean(a.inchall)||0==b.trim().length?l($ch("oafp::indata").getAll(isMap(d)?d:__),c):l($ch("oafp::indata").get(isMap(d)?d:__),c);$ch("oafp::indata").destroy()}else k(-1,"inch is not a valid map.")}],
["db",(b,c)=>{if(isString(b)){p();isString(a.indbjdbc)||k(-1,"indbjdbc URL is not defined.");try{isDef(a.indblib)&&loadLib("jdbc-"+a.indblib+".js");var d=new DB(a.indbjdbc,a.indbuser,a.indbpass,a.indbtimeout);d.convertDates(!0);if(toBoolean(a.indbexec)){var f=d.u(b);l({affectedRows:f},c);d.commit()}else f=d.q(b),isMap(f)&&isArray(f.results)?l(f.results,c):k(-1,"Invalid DB result: "+stringify(f))}catch(e){printErr(e.message),isDef(d)&&d.rollback(),k(-1,"Error executing SQL: "+e.message)}finally{isDef(d)&&
(d.rollback(),d.close())}}else k(-1,"db is only supported with a SQL string.")}],["xls",(b,c)=>{p();try{includeOPack("plugin-XLS")}catch(f){k(-1,"plugin-XLS not found. You need to install it to use the XLS output (opack install plugin-XLS)")}a.xlssheet=_$(a.xlssheet,"xlssheet").isString().default(0);a.xlsevalformulas=toBoolean(_$(a.xlsevalformulas,"xlsevalformulas").isString().default(!0));a.xlscol=_$(a.xlscol,"xlscol").isString().default("A");a.xlsrow=_$(a.xlsrow,"xlsrow").isString().default(1);
plugin("XLS");if(isDef(a.file)||isDef(a.cmd)){b=new XLS(isDef(a.cmd)?u(a.cmd):a.file);var d=b.getSheet(a.xlssheet);d=b.getTable(d,a.xlsevalformulas,a.xlscol,a.xlsrow);b.close();isDef(d)&&isMap(d)&&(d=d.table);l(d,c)}else k(-1,"XLS is only support with 'file' or 'cmd' defined. Please provide a file=... or a cmd=...")}],["csv",(b,c)=>{p();if(isDef(a.file)||isDef(a.cmd)){var d=isDef(a.cmd)?af.fromBytes2InputStream(u(a.cmd)):io.readFileStream(a.file);b=$csv(a.inputcsv).fromInStream(d).toOutArray();d.close()}else b=
$csv(a.inputcsv).fromInString(b).toOutArray();l(b,c)}],["hsperf",(b,c)=>{if(isDef(a.file)||isDef(a.cmd)){p();ow.loadJava();var d=isDef(a.cmd)?ow.java.parseHSPerf(u(a.cmd)):ow.java.parseHSPerf(a.file);d.__ts=new Date;var f=0,e=0;d.sun.gc.generation.forEach(h=>{h.space.forEach(g=>{e+=Number(g.used);f=isNumber(g.capacity)?f+Number(g.capacity):f;d.sun.gc["__percUsed_"+g.name]=100*g.used/g.capacity})});d.sun.gc.__percUsed_meta=100*d.sun.gc.metaspace.used/d.sun.gc.metaspace.capacity;d.sun.gc.__percUsed_ccs=
100*d.sun.gc.compressedclassspace.used/d.sun.gc.compressedclassspace.capacity;b=$from(d.sun.gc.collector).equals("name","PSScavenge").at(0);d.sun.gc.__ygc=isDef(b)?Number(b.invocations):0;d.sun.gc.__ygct=isDef(b)?Number(b.time/1E9):0;b=$from(d.sun.gc.collector).equals("name","PSParallelCompact").orEquals("name","").at(0);d.sun.gc.__fgc=isDef(b)?Number(b.invocations):0;d.sun.gc.__fgct=isDef(b)?Number(b.time/1E9):0;d.sun.gc.__gct=$from(d.sun.gc.collector).sum("time")/1E9;d.java.__mem={total:f,used:e,
free:f-e,metaMax:d.sun.gc.metaspace.maxCapacity,metaTotal:d.sun.gc.metaspace.capacity,metaUsed:d.sun.gc.metaspace.used,metaFree:d.sun.gc.metaspace.capacity-d.sun.gc.metaspace.used};l(d,c)}else k(-1,"hsperf is only supported with either 'file' or 'cmd' defined.")}],["base64",(b,c)=>{p();b=toBoolean(a.base64gzip)?af.fromBytes2String(io.gunzip(af.fromBase64(b,!0))):af.fromBytes2String(af.fromBase64(b));l(b,c)}],["llm",(b,c)=>{a.llmenv=_$(a.llmenv,"llmenv").isString().default("OAFP_MODEL");a.llmoptions=
_$(a.llmoptions,"llmoptions").isString().default(__);isUnDef(a.llmoptions)&&!isString(getEnv(a.llmenv))&&k(-1,"llmoptions not defined and "+a.llmenv+" not found.");p();var d=$llm(isDef(a.llmoptions)?a.llmoptions:$sec("system","envs").get(a.llmenv));isDef(a.llmconversation)&&io.fileExists(a.llmconversation)&&d.getGPT().setConversation(io.readFileJSON(a.llmconversation));b="md"==a.output||"mdtable"==a.output||"raw"==a.output?d.prompt(b):d.promptJSON(b);isDef(a.llmconversation)&&io.writeFileJSON(a.llmconversation,
d.getGPT().getConversation(),"");l(jsonParse(b,__,__,isString(b)),c)}],["slon",(b,c)=>{p();l(af.fromSLON(b),c)}],["json",(b,c)=>{p();l(jsonParse(b,__,__,isString(b)),c)}]]),x={};isString(a.libs)&&(a.libs=a.libs.split(",").map(b=>b.trim()).filter(b=>0<b.length));isDef(__flags.OAFP)&&isArray(__flags.OAFP.libs)&&isArray(a.libs)?a.libs=__flags.OAFP.libs.concat(a.libs):a.libs=isDef(__flags.OAFP)?__flags.OAFP.libs:[];isArray(a.libs)&&a.libs.forEach(b=>{try{var c=require("oafp_"+b+".js");if(isDef(c.oafplib)){var d=
c.oafplib(clone(a),l,$o,{_runCmd2Bytes:u,_fromJSSLON:t,_msg:"(processing data...)",_showTmpMsg:p,_clearTmpMsg:K,_chartPathParse:G,_exit:k});isMap(d)&&(isArray(d.fileExtensions)&&d.fileExtensions.forEach(f=>{var e=f.ext;f=f.type;D.has(e)?printErr("WARN: Extension '"+e+"' already exists."):D.set(e,f)}),isArray(d.fileExtensionsNoMem)&&d.fileExtensionsNoMem.forEach(f=>{f=f.ext;H.has(f)?printErr("WARN: Extension '"+f+"' already exists."):H.add(f)}),isArray(d.input)&&d.input.forEach(f=>{var e=f.type;f=
f.fn;y.has(e)?printErr("WARN: Input type '"+e+"' already exists."):y.set(e,f)}),isArray(d.inputLine)&&d.inputLine.forEach(f=>{var e=f.type;f=f.fn;isUnDef(_inputLinesFns[e])?I[e]=f:printErr("WARN: Input type '"+e+"' already exists.")}),isArray(d.transform)&&d.transform.forEach(f=>{var e=f.type;f=f.fn;isUnDef(w[e])?w[e]=f:printErr("WARN: Transform '"+e+"' already exists.")}),isArray(d.output)&&d.output.forEach(f=>{var e=f.type;f=f.fn;A.has(e)?printErr("WARN: Output type '"+e+"' already exists."):A.set(e,
f)}),isString(d.help)&&(x[b.toLowerCase()]=d.help))}else printErr("WARN: Library '"+b+"' does not have oafplib.")}catch(f){printErr("WARN: Library '"+b+"' error: "+f)}});(""==a["-h"]||isString(a.help)&&0<a.help.length)&&C();a.format=_$(a.format,"format").isString().default(__);__initializeCon();String(java.lang.System.getProperty("os.name")).match(/Windows/)||__con.getTerminal().settings.set("sane");if(isDef(a.secKey)){toBoolean(a.secEnv)&&(a.secRepo="system",a.secBucket="envs");a.secRepo=_$(a.secRepo,
"secRepo").isString().default(getEnv("OAFP_SECREPO"));a.secBucket=_$(a.secBucket,"secBucket").isString().default(getEnv("OAFP_SECBUCKET"));a.secPass=_$(a.secPass,"secPass").isString().default(getEnv("OAFP_SECPASS"));a.secMainPass=_$(a.secMainPass,"secMainPass").isString().default(getEnv("OAFP_SECMAINPASS"));a.secFile=_$(a.secFile,"secFile").isString().default(getEnv("OAFP_SECFILE"));let b=$sec(a.secRepo,a.secBucket,a.secPass,a.secMainPass,a.secFile).get(secKey);isDef(b)&&Object.keys(b).forEach(c=>
a[c]=b[c])}var J={__format:a.format,__from:a.from,__ifrom:a.ifrom,__isql:a.isql,__sql:a.sql,__path:a.path,__opath:a.opath,__csv:a.csv,__pause:a.pause,__key:a.__key};isDef(a.inputcsv)&&(a.inputcsv=t(a.inputcsv));isDef(a.incsv)&&(a.incsv=t(a.incsv));isDef(a.csv)&&(a.csv=t(a.csv));var N=!1;if(""==a["-v"]||isString(a.version)&&0<a.version.length)N=!0,L();var r="",E=!1;C=()=>{if(N)r=L();else if(a.jsonprefix=_$(a.jsonprefix,"jsonprefix").isString().default(__),a.jsondesc=toBoolean(_$(a.jsondesc,"jsondesc").default("false")),
isDef(a.file)){if(0>a.file.indexOf("::")&&!io.fileExists(a.file)&&k(-1,"ERROR: File not found: '"+a.file+"'"),!H.has(a.type))if("json"==a.type||isUnDef(a.type))if(a.jsondesc){var b=new Set;io.readStreamJSON(a.file,d=>{d=d.substring(2);isDef(a.jsonprefix)?d.startsWith(a.jsonprefix)&&b.add(d):b.add(d);return!1});r=stringify(Array.from(b),__,"")}else if(isDef(a.jsonprefix)){var c=io.readStreamJSON(a.file,d=>d.substring(2).startsWith(a.jsonprefix));r=stringify(c,__,"")}else r=io.readFileString(a.file);
else r=io.readFileString(a.file)}else a.jsondesc&&k(-1,"ERROR: jsondesc only available for file input."),a.jsonprefix&&k(-1,"ERROR: jsonprefix only available for file input."),isDef(a.cmd)?r=u(a.cmd,!0):isString(a.data)?r=a.data:"pm"!=a.input&&(r=[],io.pipeLn(d=>{isDef(I[a.type])?I[a.type](F(d),clone(J))&&r.push(d):r.push(d);return!1}),r=r.join("\n"));E||(isUnDef(a.type)&&(isDef(a.file)&&(c=a.file.substring(a.file.lastIndexOf(".")),D.has(c)&&(a.type=D.get(c))),isUnDef(a.type)&&(c=r.trim(),c.startsWith("{")||
c.startsWith("[")?a.type="json":c.startsWith("(")?a.type="slon":c.startsWith("<")?a.type="xml":isString(c)&&0<c.length?1<c.substring(0,c.indexOf("\n")).split(",").length?a.type="csv":c.substring(0,0<c.indexOf(": "))&&(a.type="yaml"):k(-1,"Please provide the input type."))),isDef(a.type)&&y.has(a.type)?y.get(a.type)(r,J):(isString(a.type)&&printErr("WARN: "+a.type+" input type not supported. Using json."),y.get("json")(r,J)))};isDef(a["-debug"])&&printErr("DEBUG: "+stringify(a,__,""));if(isNumber(a.loop))for(;;)toBoolean(a.loopcls)&&
cls(),C(),sleep(1E3*a.loop,!0);else C()}};oafp(params);
